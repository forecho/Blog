<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[forecho 的独立博客]]></title>
  <link href="https://blog.forecho.com/atom.xml" rel="self"/>
  <link href="https://blog.forecho.com/"/>
  <updated>2020-01-11T03:56:41+00:00</updated>
  <id>https://blog.forecho.com/</id>
  <author>
    <name><![CDATA[forecho]]></name>
    <email><![CDATA[caizhenghai@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Octopress 迁移到 Hugo]]></title>
    <link href="https://blog.forecho.com/octopress-migrate-to-hugo.html"/>
    <updated>2020-01-02T10:48:22+00:00</updated>
    <id>https://blog.forecho.com/octopress-migrate-to-hugo</id>
    <content type="html"><![CDATA[<ul id="markdown-toc">
  <li><a href="#section" id="markdown-toc-section">引言</a></li>
  <li><a href="#hugo" id="markdown-toc-hugo">安装 Hugo</a></li>
  <li><a href="#section-1" id="markdown-toc-section-1">迁移文章</a>    <ul>
      <li><a href="#section-2" id="markdown-toc-section-2">使用方式</a></li>
    </ul>
  </li>
  <li><a href="#section-3" id="markdown-toc-section-3">最后</a></li>
  <li><a href="#section-4" id="markdown-toc-section-4">参考链接</a></li>
</ul>

<h2 id="section">引言</h2>

<p>终于还是受不了 Octopress 了，准备迁移到 <a href="https://gohugo.io/">Hugo</a>，受不了 Octopress 是因为：</p>

<ul>
  <li>markdown code 语法支持不好，很多时候莫名其妙的 Build 失败，让人抓狂。（最主要原因）</li>
  <li>生成速度太慢，目前生成一次要2分多钟了</li>
  <li>Octopress 项目已经没人维护了</li>
</ul>

<!--more-->

<h2 id="hugo">安装 Hugo</h2>

<p>如果是 Mac 的话直接：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
</pre></td><td class="code"><pre><code class="sh"><span class="line">brew install hugo
</span><span class="line">hugo new site blog
</span><span class="line"><span class="nb">cd </span>blog
</span><span class="line">git init
</span><span class="line">git submodule add https://github.com/budparr/gohugo-theme-ananke.git themes/ananke
</span><span class="line"><span class="nb">echo</span> <span class="s1">&#39;theme = &quot;ananke&quot;&#39;</span> &gt;&gt; config.toml
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>然后就可以用下面命令生成文章了：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="sh"><span class="line">hugo new posts/my-first-post.md
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>开启服务</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="sh"><span class="line">hugo server -D
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>然后访问 <a href="http://localhost:1313/">http://localhost:1313/</a> 就可以看到你的 Hugo 博客了。</p>

<h2 id="section-1">迁移文章</h2>

<p>官方有<a href="https://gohugo.io/tools/migrations/">迁移指南</a>，Octopress 迁移到 Hugo 官方推荐使用 <a href="https://github.com/codebrane/octohug">octohug</a>，但是我使用下来发现不好用，迁移完之后有小问题。于是我找了一篇文章，结合文章给的代码，自己完善了功能，终于达到我要的效果，参考代码如下：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
<span class="line-number">40</span>
<span class="line-number">41</span>
<span class="line-number">42</span>
<span class="line-number">43</span>
<span class="line-number">44</span>
<span class="line-number">45</span>
<span class="line-number">46</span>
<span class="line-number">47</span>
<span class="line-number">48</span>
<span class="line-number">49</span>
<span class="line-number">50</span>
<span class="line-number">51</span>
<span class="line-number">52</span>
<span class="line-number">53</span>
<span class="line-number">54</span>
<span class="line-number">55</span>
<span class="line-number">56</span>
<span class="line-number">57</span>
<span class="line-number">58</span>
<span class="line-number">59</span>
<span class="line-number">60</span>
<span class="line-number">61</span>
<span class="line-number">62</span>
<span class="line-number">63</span>
<span class="line-number">64</span>
<span class="line-number">65</span>
<span class="line-number">66</span>
<span class="line-number">67</span>
<span class="line-number">68</span>
<span class="line-number">69</span>
<span class="line-number">70</span>
<span class="line-number">71</span>
<span class="line-number">72</span>
<span class="line-number">73</span>
<span class="line-number">74</span>
<span class="line-number">75</span>
<span class="line-number">76</span>
<span class="line-number">77</span>
<span class="line-number">78</span>
<span class="line-number">79</span>
<span class="line-number">80</span>
<span class="line-number">81</span>
<span class="line-number">82</span>
<span class="line-number">83</span>
<span class="line-number">84</span>
<span class="line-number">85</span>
<span class="line-number">86</span>
<span class="line-number">87</span>
<span class="line-number">88</span>
<span class="line-number">89</span>
<span class="line-number">90</span>
<span class="line-number">91</span>
<span class="line-number">92</span>
<span class="line-number">93</span>
<span class="line-number">94</span>
</pre></td><td class="code"><pre><code class="go"><span class="line"><span class="kn">package</span> <span class="nx">main</span>
</span><span class="line">
</span><span class="line"><span class="kn">import</span> <span class="p">(</span>
</span><span class="line">	<span class="s">&quot;flag&quot;</span>
</span><span class="line">	<span class="s">&quot;fmt&quot;</span>
</span><span class="line">	<span class="s">&quot;io/ioutil&quot;</span>
</span><span class="line">	<span class="s">&quot;os&quot;</span>
</span><span class="line">	<span class="s">&quot;regexp&quot;</span>
</span><span class="line">	<span class="s">&quot;strings&quot;</span>
</span><span class="line"><span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class="line">	<span class="kd">var</span> <span class="nx">src</span><span class="p">,</span> <span class="nx">dst</span> <span class="kt">string</span>
</span><span class="line">	<span class="nx">flag</span><span class="p">.</span><span class="nx">StringVar</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">src</span><span class="p">,</span> <span class="s">&quot;src&quot;</span><span class="p">,</span> <span class="s">&quot;&quot;</span><span class="p">,</span> <span class="s">&quot;source&quot;</span><span class="p">)</span>
</span><span class="line">	<span class="nx">flag</span><span class="p">.</span><span class="nx">StringVar</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">dst</span><span class="p">,</span> <span class="s">&quot;dst&quot;</span><span class="p">,</span> <span class="s">&quot;&quot;</span><span class="p">,</span> <span class="s">&quot;destination&quot;</span><span class="p">)</span>
</span><span class="line">	<span class="nx">flag</span><span class="p">.</span><span class="nx">Parse</span><span class="p">()</span>
</span><span class="line">
</span><span class="line">	<span class="k">if</span> <span class="nx">_</span><span class="p">,</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">os</span><span class="p">.</span><span class="nx">Stat</span><span class="p">(</span><span class="nx">src</span><span class="p">);</span> <span class="nx">os</span><span class="p">.</span><span class="nx">IsNotExist</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">		<span class="nb">panic</span><span class="p">(</span><span class="s">&quot;source directory does not exist&quot;</span><span class="p">)</span>
</span><span class="line">	<span class="p">}</span>
</span><span class="line">
</span><span class="line">	<span class="k">if</span> <span class="nx">_</span><span class="p">,</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">os</span><span class="p">.</span><span class="nx">Stat</span><span class="p">(</span><span class="nx">dst</span><span class="p">);</span> <span class="nx">os</span><span class="p">.</span><span class="nx">IsNotExist</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">		<span class="k">if</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">os</span><span class="p">.</span><span class="nx">Mkdir</span><span class="p">(</span><span class="nx">dst</span><span class="p">,</span> <span class="nx">os</span><span class="p">.</span><span class="nx">ModePerm</span><span class="p">);</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class="line">			<span class="nb">panic</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span>
</span><span class="line">		<span class="p">}</span>
</span><span class="line">	<span class="p">}</span>
</span><span class="line">
</span><span class="line">	<span class="nx">files</span><span class="p">,</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">ioutil</span><span class="p">.</span><span class="nx">ReadDir</span><span class="p">(</span><span class="nx">src</span><span class="p">)</span>
</span><span class="line">	<span class="k">if</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class="line">		<span class="nb">panic</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span>
</span><span class="line">	<span class="p">}</span>
</span><span class="line">
</span><span class="line">	<span class="k">for</span> <span class="nx">_</span><span class="p">,</span> <span class="nx">file</span> <span class="o">:=</span> <span class="k">range</span> <span class="nx">files</span> <span class="p">{</span>
</span><span class="line">		<span class="nx">filename</span> <span class="o">:=</span> <span class="nx">file</span><span class="p">.</span><span class="nx">Name</span><span class="p">()</span>
</span><span class="line">		<span class="nx">re</span> <span class="o">:=</span> <span class="nx">regexp</span><span class="p">.</span><span class="nx">MustCompile</span><span class="p">(</span><span class="s">`^\d{4}-\d{2}-\d{2}-(.*).m(arkdown|d)`</span><span class="p">)</span>
</span><span class="line">		<span class="c1">// Ignore non-matching filenames (i.e. do no dereference nil)</span>
</span><span class="line">		<span class="k">if</span> <span class="nx">matches</span> <span class="o">:=</span> <span class="nx">re</span><span class="p">.</span><span class="nx">FindStringSubmatch</span><span class="p">(</span><span class="nx">filename</span><span class="p">);</span> <span class="nx">matches</span> <span class="o">==</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class="line">			<span class="k">continue</span>
</span><span class="line">		<span class="p">}</span>
</span><span class="line">
</span><span class="line">		<span class="nx">in</span> <span class="o">:=</span> <span class="nx">fmt</span><span class="p">.</span><span class="nx">Sprintf</span><span class="p">(</span><span class="s">&quot;%s%s&quot;</span><span class="p">,</span> <span class="nx">src</span><span class="p">,</span> <span class="nx">filename</span><span class="p">)</span>
</span><span class="line">		<span class="nx">data</span><span class="p">,</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">ioutil</span><span class="p">.</span><span class="nx">ReadFile</span><span class="p">(</span><span class="nx">in</span><span class="p">)</span>
</span><span class="line">		<span class="k">if</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class="line">			<span class="nb">panic</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span>
</span><span class="line">		<span class="p">}</span>
</span><span class="line">
</span><span class="line">        <span class="nx">re</span> <span class="p">=</span> <span class="nx">regexp</span><span class="p">.</span><span class="nx">MustCompile</span><span class="p">(</span><span class="s">`(\d{4}-\d{2}-\d{2})-(.*)`</span><span class="p">)</span>
</span><span class="line">        <span class="nx">newFilename</span> <span class="o">:=</span> <span class="nx">strings</span><span class="p">.</span><span class="nx">ToLower</span><span class="p">(</span><span class="nx">re</span><span class="p">.</span><span class="nx">ReplaceAllString</span><span class="p">(</span><span class="nx">filename</span><span class="p">,</span> <span class="s">&quot;$2&quot;</span><span class="p">))</span>
</span><span class="line">
</span><span class="line">		<span class="nx">re</span> <span class="p">=</span> <span class="nx">regexp</span><span class="p">.</span><span class="nx">MustCompile</span><span class="p">(</span><span class="s">`---\n([\s\S]*)---\n([\s\S]*)`</span><span class="p">)</span>
</span><span class="line">		<span class="nx">matches</span> <span class="o">:=</span> <span class="nx">re</span><span class="p">.</span><span class="nx">FindSubmatch</span><span class="p">(</span><span class="nx">data</span><span class="p">)</span>
</span><span class="line">		<span class="nx">header</span> <span class="o">:=</span> <span class="nb">string</span><span class="p">(</span><span class="nx">matches</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span>
</span><span class="line">		<span class="nx">body</span> <span class="o">:=</span> <span class="nb">string</span><span class="p">(</span><span class="nx">matches</span><span class="p">[</span><span class="mi">2</span><span class="p">])</span>
</span><span class="line">		<span class="nx">draftline</span> <span class="o">:=</span> <span class="s">&quot;draft: false\n&quot;</span>
</span><span class="line">
</span><span class="line">		<span class="c1">// date</span>
</span><span class="line">		<span class="nx">re</span> <span class="p">=</span> <span class="nx">regexp</span><span class="p">.</span><span class="nx">MustCompile</span><span class="p">(</span><span class="s">`date: (\d{4}-\d{2}-\d{2}) (\d{2}:\d{2}).*\n`</span><span class="p">)</span>
</span><span class="line">		<span class="nx">header</span> <span class="p">=</span> <span class="nx">re</span><span class="p">.</span><span class="nx">ReplaceAllString</span><span class="p">(</span><span class="nx">header</span><span class="p">,</span> <span class="s">`date: ${1}T$2:00+08:00`</span><span class="o">+</span><span class="s">&quot;\n&quot;</span><span class="p">)</span>
</span><span class="line">
</span><span class="line">		<span class="c1">// layout</span>
</span><span class="line">		<span class="nx">re</span> <span class="p">=</span> <span class="nx">regexp</span><span class="p">.</span><span class="nx">MustCompile</span><span class="p">(</span><span class="s">`layout: .*\n`</span><span class="p">)</span>
</span><span class="line">		<span class="nx">header</span> <span class="p">=</span> <span class="nx">re</span><span class="p">.</span><span class="nx">ReplaceAllString</span><span class="p">(</span><span class="nx">header</span><span class="p">,</span> <span class="s">&quot;&quot;</span><span class="p">)</span>
</span><span class="line">
</span><span class="line">		<span class="c1">// comments</span>
</span><span class="line">		<span class="nx">re</span> <span class="p">=</span> <span class="nx">regexp</span><span class="p">.</span><span class="nx">MustCompile</span><span class="p">(</span><span class="s">`comments: .*\n`</span><span class="p">)</span>
</span><span class="line">		<span class="nx">header</span> <span class="p">=</span> <span class="nx">re</span><span class="p">.</span><span class="nx">ReplaceAllString</span><span class="p">(</span><span class="nx">header</span><span class="p">,</span> <span class="s">&quot;&quot;</span><span class="p">)</span>
</span><span class="line">
</span><span class="line">		<span class="c1">// categories</span>
</span><span class="line">		<span class="nx">re</span> <span class="p">=</span> <span class="nx">regexp</span><span class="p">.</span><span class="nx">MustCompile</span><span class="p">(</span><span class="s">`categories: (.*)\n`</span><span class="p">)</span>
</span><span class="line">		<span class="nx">matches</span> <span class="p">=</span> <span class="nx">re</span><span class="p">.</span><span class="nx">FindSubmatch</span><span class="p">([]</span><span class="nb">byte</span><span class="p">(</span><span class="nx">header</span><span class="p">))</span>
</span><span class="line">		<span class="k">if</span> <span class="nx">categories</span> <span class="o">:=</span> <span class="nb">string</span><span class="p">(</span><span class="nx">matches</span><span class="p">[</span><span class="mi">1</span><span class="p">]);</span> <span class="nx">categories</span> <span class="o">!=</span> <span class="s">&quot;&quot;</span> <span class="p">{</span>
</span><span class="line">			<span class="nx">tags</span> <span class="o">:=</span> <span class="nx">strings</span><span class="p">.</span><span class="nx">ReplaceAll</span><span class="p">(</span><span class="nx">categories</span><span class="p">,</span> <span class="s">&quot; &quot;</span><span class="p">,</span> <span class="s">&quot;\&quot;, \&quot;&quot;</span><span class="p">)</span>
</span><span class="line">			<span class="nx">header</span> <span class="p">=</span> <span class="nx">re</span><span class="p">.</span><span class="nx">ReplaceAllString</span><span class="p">(</span><span class="nx">header</span><span class="p">,</span> <span class="nx">fmt</span><span class="p">.</span><span class="nx">Sprintf</span><span class="p">(</span><span class="s">&quot;tags: [\&quot;%s\&quot;] \n&quot;</span><span class="p">,</span> <span class="nx">tags</span><span class="p">))</span>
</span><span class="line">		<span class="p">}</span>
</span><span class="line">
</span><span class="line">		<span class="nx">more</span> <span class="o">:=</span> <span class="s">&quot;toc: true\n&quot;</span>
</span><span class="line">		<span class="nx">header</span> <span class="p">=</span> <span class="nx">fmt</span><span class="p">.</span><span class="nx">Sprintf</span><span class="p">(</span><span class="s">&quot;%s%s%s&quot;</span><span class="p">,</span> <span class="nx">header</span><span class="p">,</span> <span class="nx">draftline</span><span class="p">,</span> <span class="nx">more</span><span class="p">)</span>
</span><span class="line">
</span><span class="line">		<span class="nx">content</span> <span class="o">:=</span> <span class="nx">fmt</span><span class="p">.</span><span class="nx">Sprintf</span><span class="p">(</span><span class="s">&quot;---\n%s---\n%s&quot;</span><span class="p">,</span> <span class="nx">header</span><span class="p">,</span> <span class="nx">body</span><span class="p">)</span>
</span><span class="line">
</span><span class="line">		<span class="c1">// toc</span>
</span><span class="line">		<span class="nx">toc</span> <span class="o">:=</span> <span class="s">&quot;* list element with functor item\n{:toc}\n&quot;</span>
</span><span class="line">		<span class="nx">content</span> <span class="p">=</span> <span class="nx">strings</span><span class="p">.</span><span class="nx">ReplaceAll</span><span class="p">(</span><span class="nx">content</span><span class="p">,</span> <span class="nx">toc</span><span class="p">,</span> <span class="s">&quot;&quot;</span><span class="p">)</span>
</span><span class="line">
</span><span class="line">		<span class="nx">content</span> <span class="p">=</span> <span class="nx">strings</span><span class="p">.</span><span class="nx">ReplaceAll</span><span class="p">(</span><span class="nx">content</span><span class="p">,</span> <span class="s">&quot;/octopress-migrate-to-hugo.html&quot;</span><span class="p">,</span> <span class="s">&quot;&quot;</span><span class="p">)</span>
</span><span class="line">
</span><span class="line">		<span class="nx">out</span> <span class="o">:=</span> <span class="nx">dst</span> <span class="o">+</span> <span class="nx">newFilename</span>
</span><span class="line">		<span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;%s -&gt; %s\n&quot;</span><span class="p">,</span> <span class="nx">in</span><span class="p">,</span> <span class="nx">out</span><span class="p">)</span>
</span><span class="line">
</span><span class="line">		<span class="k">if</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">ioutil</span><span class="p">.</span><span class="nx">WriteFile</span><span class="p">(</span><span class="nx">out</span><span class="p">,</span> <span class="p">[]</span><span class="nb">byte</span><span class="p">(</span><span class="nx">content</span><span class="p">),</span> <span class="mo">0644</span><span class="p">);</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class="line">			<span class="nb">panic</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span>
</span><span class="line">		<span class="p">}</span>
</span><span class="line">	<span class="p">}</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="section-2">使用方式</h3>

<p>在 Octopress 博客根目录下新建一个 <code>main.go</code> 文件，然后把上面代码拷贝进去，然后执行下面代码完成迁移：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="sh"><span class="line">go run main.go -src octopress-blog/blog/_posts/ -dst hugo-blog/content/posts/
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="section-3">最后</h2>

<p>这篇文章主要是分享 Octopress 迁移 Hugo 文章的经验，上面的迁移代码不负责，有一点点 Golang 经验应该是看得懂的，你可以根据自己的需求修改代码。</p>

<h2 id="section-4">参考链接</h2>

<ul>
  <li><a href="https://miguelmota.com/blog/migrating-from-jekyll-to-hugo/">Migrating from Jekyll to Hugo</a></li>
</ul>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mac 利器 Hammerspoon 使用指南]]></title>
    <link href="https://blog.forecho.com/use-hammerspoon.html"/>
    <updated>2019-12-26T13:48:22+00:00</updated>
    <id>https://blog.forecho.com/use-hammerspoon</id>
    <content type="html"><![CDATA[<ul id="markdown-toc">
  <li><a href="#section" id="markdown-toc-section">引言</a></li>
  <li><a href="#section-1" id="markdown-toc-section-1">实现</a>    <ul>
      <li><a href="#section-2" id="markdown-toc-section-2">目录结构</a></li>
      <li><a href="#section-3" id="markdown-toc-section-3">初始化文件</a></li>
      <li><a href="#section-4" id="markdown-toc-section-4">配置文件</a></li>
      <li><a href="#section-5" id="markdown-toc-section-5">实现自动输入法切换功能</a></li>
      <li><a href="#section-6" id="markdown-toc-section-6">切换输入法</a></li>
      <li><a href="#app-" id="markdown-toc-app-">App 启动</a></li>
      <li><a href="#section-7" id="markdown-toc-section-7">自动重载配置</a></li>
      <li><a href="#section-8" id="markdown-toc-section-8">窗口管理</a></li>
      <li><a href="#section-9" id="markdown-toc-section-9">休眠自动关闭蓝牙</a></li>
    </ul>
  </li>
  <li><a href="#section-10" id="markdown-toc-section-10">最后</a></li>
  <li><a href="#section-11" id="markdown-toc-section-11">参考链接</a></li>
</ul>

<h2 id="section">引言</h2>

<p>今天要给大家分享的是一款 Mac 利器 Hammerspoon，通过编写 Lua 脚本可以让这款软件实现以下功能</p>

<ul>
  <li>管理窗口大小以及位置</li>
  <li>软件启动器</li>
  <li>给特定的软件设置中/英文输入法</li>
</ul>

<p>你甚至可以通过编写代码实现</p>

<ul>
  <li>休眠状态关闭蓝牙功能</li>
  <li>连上公司 Wi-Fi 自动静音</li>
  <li>……</li>
</ul>

<p>接下来详细讲解如何实现以上功能。不会 Lua？没关系，只要你有一点点编程经验，代码看起来都不是问题。</p>

<!--more-->

<h2 id="section-1">实现</h2>

<p>我自己的配置代码已经在 GitHub 上开源，有兴趣的可以直接去读源码 - <a href="https://github.com/forecho/hammerspoon-config">forecho/hammerspoon-config
</a></p>

<h3 id="section-2">目录结构</h3>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
</pre></td><td class="code"><pre><code class=""><span class="line">.
</span><span class="line">├── README.md
</span><span class="line">├── config.lua
</span><span class="line">├── init.lua
</span><span class="line">└── modules
</span><span class="line">    ├── bluetoothSleep.lua
</span><span class="line">    ├── defaultInput.lua
</span><span class="line">    ├── input.lua
</span><span class="line">    ├── launcher.lua
</span><span class="line">    ├── reload.lua
</span><span class="line">    └── window.lua</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li><code>init.lua</code> 是入口文件</li>
  <li><code>config.lua</code> 是配置文件，通过修改此文件，定制化自己的需求</li>
  <li><code>modules</code> 是每个模块的文件夹，具体功能都在这里实现</li>
</ul>

<h3 id="section-3">初始化文件</h3>

<p><code>init.lua</code></p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
</pre></td><td class="code"><pre><code class="lua"><span class="line"><span class="nb">require</span> <span class="s2">&quot;</span><span class="s">modules.reload&quot;</span>
</span><span class="line"><span class="nb">require</span> <span class="s2">&quot;</span><span class="s">config&quot;</span>
</span><span class="line"><span class="nb">require</span> <span class="s2">&quot;</span><span class="s">modules.window&quot;</span>
</span><span class="line"><span class="nb">require</span> <span class="s2">&quot;</span><span class="s">modules.launcher&quot;</span>
</span><span class="line"><span class="nb">require</span> <span class="s2">&quot;</span><span class="s">modules.input&quot;</span>
</span><span class="line"><span class="nb">require</span> <span class="s2">&quot;</span><span class="s">modules.defaultInput&quot;</span>
</span><span class="line"><span class="nb">require</span> <span class="s2">&quot;</span><span class="s">modules.bluetoothSleep&quot;</span>
</span><span class="line">
</span><span class="line"><span class="c1">-- 调试代码</span>
</span><span class="line"><span class="n">hs</span><span class="p">.</span><span class="n">hotkey</span><span class="p">.</span><span class="n">bind</span><span class="p">({</span><span class="s1">&#39;</span><span class="s">cmd&#39;</span><span class="p">,</span> <span class="s1">&#39;</span><span class="s">shift&#39;</span><span class="p">},</span> <span class="s1">&#39;</span><span class="s">h&#39;</span><span class="p">,</span> <span class="k">function</span><span class="p">()</span>
</span><span class="line">	<span class="n">hs</span><span class="p">.</span><span class="n">alert</span><span class="p">(</span><span class="s1">&#39;</span><span class="s">Hello World&#39;</span><span class="p">)</span>
</span><span class="line">	<span class="n">speaker</span> <span class="o">=</span> <span class="n">hs</span><span class="p">.</span><span class="n">speech</span><span class="p">.</span><span class="n">new</span><span class="p">()</span>
</span><span class="line">	<span class="n">speaker</span><span class="p">:</span><span class="n">speak</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">Hammerspoon is online&quot;</span><span class="p">)</span>
</span><span class="line">	<span class="n">hs</span><span class="p">.</span><span class="n">notify</span><span class="p">.</span><span class="n">new</span><span class="p">({</span><span class="n">title</span><span class="o">=</span><span class="s2">&quot;</span><span class="s">Hammerspoon launch&quot;</span><span class="p">,</span> <span class="n">informativeText</span><span class="o">=</span><span class="s2">&quot;</span><span class="s">Boss, at your service&quot;</span><span class="p">}):</span><span class="n">send</span><span class="p">()</span>
</span><span class="line"><span class="k">end</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="section-4">配置文件</h3>

<p><code>config.lua</code></p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
</pre></td><td class="code"><pre><code class="lua"><span class="line"><span class="n">windowHotkey</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;</span><span class="s">control&#39;</span><span class="p">,</span><span class="s1">&#39;</span><span class="s">command&#39;</span><span class="p">}</span>
</span><span class="line"><span class="n">launcherHotkey</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;</span><span class="s">option&#39;</span><span class="p">}</span>
</span><span class="line"><span class="n">inputHotkey</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;</span><span class="s">option&#39;</span><span class="p">}</span>
</span><span class="line">
</span><span class="line"><span class="n">applist</span> <span class="o">=</span> <span class="p">{</span>
</span><span class="line">    <span class="p">{</span><span class="n">shortcut</span> <span class="o">=</span> <span class="s1">&#39;</span><span class="s">Q&#39;</span><span class="p">,</span><span class="n">appname</span> <span class="o">=</span> <span class="s1">&#39;</span><span class="s">QQ&#39;</span><span class="p">},</span>
</span><span class="line">    <span class="p">{</span><span class="n">shortcut</span> <span class="o">=</span> <span class="s1">&#39;</span><span class="s">G&#39;</span><span class="p">,</span><span class="n">appname</span> <span class="o">=</span> <span class="s1">&#39;</span><span class="s">Google Chrome&#39;</span><span class="p">},</span>
</span><span class="line">    <span class="p">{</span><span class="n">shortcut</span> <span class="o">=</span> <span class="s1">&#39;</span><span class="s">C&#39;</span><span class="p">,</span><span class="n">appname</span> <span class="o">=</span> <span class="s1">&#39;</span><span class="s">Visual Studio Code&#39;</span><span class="p">},</span>
</span><span class="line">    <span class="p">{</span><span class="n">shortcut</span> <span class="o">=</span> <span class="s1">&#39;</span><span class="s">I&#39;</span><span class="p">,</span><span class="n">appname</span> <span class="o">=</span> <span class="s1">&#39;</span><span class="s">iTerm&#39;</span><span class="p">},</span>
</span><span class="line">    <span class="p">{</span><span class="n">shortcut</span> <span class="o">=</span> <span class="s1">&#39;</span><span class="s">P&#39;</span><span class="p">,</span><span class="n">appname</span> <span class="o">=</span> <span class="s1">&#39;</span><span class="s">PHPStorm&#39;</span><span class="p">},</span>
</span><span class="line">    <span class="p">{</span><span class="n">shortcut</span> <span class="o">=</span> <span class="s1">&#39;</span><span class="s">W&#39;</span><span class="p">,</span><span class="n">appname</span> <span class="o">=</span> <span class="s1">&#39;</span><span class="s">WeChat&#39;</span><span class="p">},</span>
</span><span class="line">    <span class="p">{</span><span class="n">shortcut</span> <span class="o">=</span> <span class="s1">&#39;</span><span class="s">O&#39;</span><span class="p">,</span><span class="n">appname</span> <span class="o">=</span> <span class="s1">&#39;</span><span class="s">Postman&#39;</span><span class="p">},</span>
</span><span class="line">    <span class="p">{</span><span class="n">shortcut</span> <span class="o">=</span> <span class="s1">&#39;</span><span class="s">Y&#39;</span><span class="p">,</span><span class="n">appname</span> <span class="o">=</span> <span class="s1">&#39;</span><span class="s">企业微信&#39;</span><span class="p">},</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line">
</span><span class="line"><span class="n">appInputMethod</span> <span class="o">=</span> <span class="p">{</span>
</span><span class="line">    <span class="p">{</span><span class="s1">&#39;</span><span class="s">/Applications/iTerm.app&#39;</span><span class="p">,</span> <span class="s1">&#39;</span><span class="s">English&#39;</span><span class="p">},</span>
</span><span class="line">    <span class="p">{</span><span class="s1">&#39;</span><span class="s">/Applications/Visual Studio Code.app&#39;</span><span class="p">,</span> <span class="s1">&#39;</span><span class="s">English&#39;</span><span class="p">},</span>
</span><span class="line">    <span class="p">{</span><span class="s1">&#39;</span><span class="s">/Applications/PHPStorm.app&#39;</span><span class="p">,</span> <span class="s1">&#39;</span><span class="s">English&#39;</span><span class="p">},</span>
</span><span class="line">    <span class="p">{</span><span class="s1">&#39;</span><span class="s">/Applications/Xcode.app&#39;</span><span class="p">,</span> <span class="s1">&#39;</span><span class="s">English&#39;</span><span class="p">},</span>
</span><span class="line">    <span class="p">{</span><span class="s1">&#39;</span><span class="s">/Applications/Google Chrome.app&#39;</span><span class="p">,</span> <span class="s1">&#39;</span><span class="s">English&#39;</span><span class="p">},</span>
</span><span class="line">    <span class="p">{</span><span class="s1">&#39;</span><span class="s">/System/Library/CoreServices/Finder.app&#39;</span><span class="p">,</span> <span class="s1">&#39;</span><span class="s">English&#39;</span><span class="p">},</span>
</span><span class="line">    <span class="p">{</span><span class="s1">&#39;</span><span class="s">/Applications/DingTalk.app&#39;</span><span class="p">,</span> <span class="s1">&#39;</span><span class="s">Chinese&#39;</span><span class="p">},</span>
</span><span class="line">    <span class="p">{</span><span class="s1">&#39;</span><span class="s">/Applications/Kindle.app&#39;</span><span class="p">,</span> <span class="s1">&#39;</span><span class="s">English&#39;</span><span class="p">},</span>
</span><span class="line">    <span class="p">{</span><span class="s1">&#39;</span><span class="s">/Applications/NeteaseMusic.app&#39;</span><span class="p">,</span> <span class="s1">&#39;</span><span class="s">Chinese&#39;</span><span class="p">},</span>
</span><span class="line">    <span class="p">{</span><span class="s1">&#39;</span><span class="s">/Applications/WeChat.app&#39;</span><span class="p">,</span> <span class="s1">&#39;</span><span class="s">Chinese&#39;</span><span class="p">},</span>
</span><span class="line">    <span class="p">{</span><span class="s1">&#39;</span><span class="s">/Applications/System Preferences.app&#39;</span><span class="p">,</span> <span class="s1">&#39;</span><span class="s">English&#39;</span><span class="p">},</span>
</span><span class="line">    <span class="p">{</span><span class="s1">&#39;</span><span class="s">/Applications/Dash.app&#39;</span><span class="p">,</span> <span class="s1">&#39;</span><span class="s">English&#39;</span><span class="p">},</span>
</span><span class="line">    <span class="p">{</span><span class="s1">&#39;</span><span class="s">/Applications/MindNode.app&#39;</span><span class="p">,</span> <span class="s1">&#39;</span><span class="s">Chinese&#39;</span><span class="p">},</span>
</span><span class="line">    <span class="p">{</span><span class="s1">&#39;</span><span class="s">/Applications/QQ.app&#39;</span><span class="p">,</span> <span class="s1">&#39;</span><span class="s">Chinese&#39;</span><span class="p">},</span>
</span><span class="line">    <span class="p">{</span><span class="s1">&#39;</span><span class="s">/Applications/企业微信.app&#39;</span><span class="p">,</span> <span class="s1">&#39;</span><span class="s">Chinese&#39;</span><span class="p">},</span>
</span><span class="line">    <span class="p">{</span><span class="s1">&#39;</span><span class="s">/Applications/wechatwebdevtools.app&#39;</span><span class="p">,</span> <span class="s1">&#39;</span><span class="s">English&#39;</span><span class="p">},</span>
</span><span class="line">    <span class="p">{</span><span class="s1">&#39;</span><span class="s">/Applications/Sketch.app&#39;</span><span class="p">,</span> <span class="s1">&#39;</span><span class="s">English&#39;</span><span class="p">},</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="section-5">实现自动输入法切换功能</h3>

<p><code>defaultInput.lua</code></p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
<span class="line-number">40</span>
<span class="line-number">41</span>
<span class="line-number">42</span>
<span class="line-number">43</span>
<span class="line-number">44</span>
<span class="line-number">45</span>
<span class="line-number">46</span>
</pre></td><td class="code"><pre><code class="lua"><span class="line"><span class="kd">local</span> <span class="k">function</span> <span class="nf">Chinese</span><span class="p">()</span>
</span><span class="line">    <span class="n">hs</span><span class="p">.</span><span class="n">keycodes</span><span class="p">.</span><span class="n">currentSourceID</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">com.sogou.inputmethod.sogou.pinyin&quot;</span><span class="p">)</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="kd">local</span> <span class="k">function</span> <span class="nf">English</span><span class="p">()</span>
</span><span class="line">    <span class="n">hs</span><span class="p">.</span><span class="n">keycodes</span><span class="p">.</span><span class="n">currentSourceID</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">com.apple.keylayout.ABC&quot;</span><span class="p">)</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="k">function</span> <span class="nf">updateFocusAppInputMethod</span><span class="p">()</span>
</span><span class="line">    <span class="kd">local</span> <span class="n">focusAppPath</span> <span class="o">=</span> <span class="n">hs</span><span class="p">.</span><span class="n">window</span><span class="p">.</span><span class="n">frontmostWindow</span><span class="p">():</span><span class="n">application</span><span class="p">():</span><span class="n">path</span><span class="p">()</span>
</span><span class="line">    <span class="k">for</span> <span class="n">index</span><span class="p">,</span> <span class="n">app</span> <span class="k">in</span> <span class="nb">pairs</span><span class="p">(</span><span class="n">appInputMethod</span><span class="p">)</span> <span class="k">do</span>
</span><span class="line">        <span class="kd">local</span> <span class="n">appPath</span> <span class="o">=</span> <span class="n">app</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span>
</span><span class="line">        <span class="kd">local</span> <span class="n">expectedIme</span> <span class="o">=</span> <span class="n">app</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span>
</span><span class="line">
</span><span class="line">        <span class="k">if</span> <span class="n">focusAppPath</span> <span class="o">==</span> <span class="n">appPath</span> <span class="k">then</span>
</span><span class="line">            <span class="k">if</span> <span class="n">expectedIme</span> <span class="o">==</span> <span class="s1">&#39;</span><span class="s">English&#39;</span> <span class="k">then</span>
</span><span class="line">                <span class="n">English</span><span class="p">()</span>
</span><span class="line">            <span class="k">else</span>
</span><span class="line">                <span class="n">Chinese</span><span class="p">()</span>
</span><span class="line">            <span class="k">end</span>
</span><span class="line">            <span class="k">break</span>
</span><span class="line">        <span class="k">end</span>
</span><span class="line">    <span class="k">end</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="c1">-- helper hotkey to figure out the app path and name of current focused window</span>
</span><span class="line"><span class="n">hs</span><span class="p">.</span><span class="n">hotkey</span><span class="p">.</span><span class="n">bind</span><span class="p">({</span><span class="s1">&#39;</span><span class="s">ctrl&#39;</span><span class="p">,</span> <span class="s1">&#39;</span><span class="s">cmd&#39;</span><span class="p">},</span> <span class="s2">&quot;</span><span class="s">.&quot;</span><span class="p">,</span> <span class="k">function</span><span class="p">()</span>
</span><span class="line">    <span class="n">hs</span><span class="p">.</span><span class="n">alert</span><span class="p">.</span><span class="n">show</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">App path:        &quot;</span>
</span><span class="line">    <span class="o">..</span><span class="n">hs</span><span class="p">.</span><span class="n">window</span><span class="p">.</span><span class="n">focusedWindow</span><span class="p">():</span><span class="n">application</span><span class="p">():</span><span class="n">path</span><span class="p">()</span>
</span><span class="line">    <span class="o">..</span><span class="s2">&quot;</span><span class="se">\n</span><span class="s">&quot;</span>
</span><span class="line">    <span class="o">..</span><span class="s2">&quot;</span><span class="s">App name:      &quot;</span>
</span><span class="line">    <span class="o">..</span><span class="n">hs</span><span class="p">.</span><span class="n">window</span><span class="p">.</span><span class="n">focusedWindow</span><span class="p">():</span><span class="n">application</span><span class="p">():</span><span class="n">name</span><span class="p">()</span>
</span><span class="line">    <span class="o">..</span><span class="s2">&quot;</span><span class="se">\n</span><span class="s">&quot;</span>
</span><span class="line">    <span class="o">..</span><span class="s2">&quot;</span><span class="s">IM source id:  &quot;</span>
</span><span class="line">    <span class="o">..</span><span class="n">hs</span><span class="p">.</span><span class="n">keycodes</span><span class="p">.</span><span class="n">currentSourceID</span><span class="p">())</span>
</span><span class="line"><span class="k">end</span><span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="c1">-- Handle cursor focus and application&#39;s screen manage.</span>
</span><span class="line"><span class="k">function</span> <span class="nf">applicationWatcher</span><span class="p">(</span><span class="n">appName</span><span class="p">,</span> <span class="n">eventType</span><span class="p">,</span> <span class="n">appObject</span><span class="p">)</span>
</span><span class="line">    <span class="k">if</span> <span class="p">(</span><span class="n">eventType</span> <span class="o">==</span> <span class="n">hs</span><span class="p">.</span><span class="n">application</span><span class="p">.</span><span class="n">watcher</span><span class="p">.</span><span class="n">activated</span><span class="p">)</span> <span class="k">then</span>
</span><span class="line">        <span class="n">updateFocusAppInputMethod</span><span class="p">()</span>
</span><span class="line">    <span class="k">end</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="n">appWatcher</span> <span class="o">=</span> <span class="n">hs</span><span class="p">.</span><span class="n">application</span><span class="p">.</span><span class="n">watcher</span><span class="p">.</span><span class="n">new</span><span class="p">(</span><span class="n">applicationWatcher</span><span class="p">)</span>
</span><span class="line"><span class="n">appWatcher</span><span class="p">:</span><span class="n">start</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="section-6">切换输入法</h3>

<p><code>input.lua</code> 实现切换输入法功能，这个已经弃用了，最后还是使用系统自带的快捷键了，代码放出来给大家参考：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
</pre></td><td class="code"><pre><code class="lua"><span class="line"><span class="kd">local</span> <span class="k">function</span> <span class="nf">Chinese</span><span class="p">()</span>
</span><span class="line">    <span class="n">hs</span><span class="p">.</span><span class="n">keycodes</span><span class="p">.</span><span class="n">currentSourceID</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">com.sogou.inputmethod.sogou.pinyin&quot;</span><span class="p">)</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="kd">local</span> <span class="k">function</span> <span class="nf">English</span><span class="p">()</span>
</span><span class="line">    <span class="n">hs</span><span class="p">.</span><span class="n">keycodes</span><span class="p">.</span><span class="n">currentSourceID</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">com.apple.keylayout.ABC&quot;</span><span class="p">)</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line">
</span><span class="line"><span class="n">hs</span><span class="p">.</span><span class="n">hotkey</span><span class="p">.</span><span class="n">bind</span><span class="p">(</span><span class="n">inputHotkey</span><span class="p">,</span> <span class="s1">&#39;</span><span class="s">S&#39;</span><span class="p">,</span> <span class="k">function</span><span class="p">()</span>
</span><span class="line">    <span class="n">Chinese</span><span class="p">()</span>
</span><span class="line"><span class="k">end</span><span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="n">hs</span><span class="p">.</span><span class="n">hotkey</span><span class="p">.</span><span class="n">bind</span><span class="p">(</span><span class="n">inputHotkey</span><span class="p">,</span> <span class="s1">&#39;</span><span class="s">E&#39;</span><span class="p">,</span> <span class="k">function</span><span class="p">()</span>
</span><span class="line">    <span class="n">English</span><span class="p">()</span>
</span><span class="line"><span class="k">end</span><span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="kd">local</span> <span class="k">function</span> <span class="nf">cycleInputMethod</span><span class="p">()</span>
</span><span class="line">    <span class="k">if</span> <span class="n">hs</span><span class="p">.</span><span class="n">keycodes</span><span class="p">.</span><span class="n">currentSourceID</span><span class="p">()</span> <span class="o">==</span> <span class="s2">&quot;</span><span class="s">com.apple.keylayout.ABC&quot;</span> <span class="k">then</span>
</span><span class="line">        <span class="n">hs</span><span class="p">.</span><span class="n">keycodes</span><span class="p">.</span><span class="n">currentSourceID</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">com.sogou.inputmethod.sogou.pinyin&quot;</span> <span class="p">)</span>
</span><span class="line">    <span class="k">elseif</span> <span class="n">hs</span><span class="p">.</span><span class="n">keycodes</span><span class="p">.</span><span class="n">currentSourceID</span><span class="p">()</span> <span class="o">==</span> <span class="s2">&quot;</span><span class="s">com.sogou.inputmethod.sogou.pinyin&quot;</span> <span class="k">then</span>
</span><span class="line">        <span class="n">hs</span><span class="p">.</span><span class="n">keycodes</span><span class="p">.</span><span class="n">currentSourceID</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">com.apple.inputmethod.SCIM.ITABC&quot;</span><span class="p">)</span>
</span><span class="line">    <span class="k">elseif</span> <span class="n">hs</span><span class="p">.</span><span class="n">keycodes</span><span class="p">.</span><span class="n">currentSourceID</span><span class="p">()</span> <span class="o">==</span> <span class="s2">&quot;</span><span class="s">com.apple.inputmethod.SCIM.ITABC&quot;</span> <span class="k">then</span>
</span><span class="line">        <span class="n">hs</span><span class="p">.</span><span class="n">keycodes</span><span class="p">.</span><span class="n">currentSourceID</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">com.apple.keylayout.ABC&quot;</span><span class="p">)</span>
</span><span class="line">    <span class="k">end</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="n">hs</span><span class="p">.</span><span class="n">hotkey</span><span class="p">.</span><span class="n">bind</span><span class="p">(</span><span class="n">inputHotkey</span><span class="p">,</span> <span class="s1">&#39;</span><span class="s">.&#39;</span><span class="p">,</span> <span class="n">cycleInputMethod</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="app-">App 启动</h3>

<p><code>launcher.lua</code>，可以实现特定的快捷键启动指定的软件，使用最频繁的功能了，妥妥的提升效率。实现代码如下：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class="lua"><span class="line"><span class="n">hs</span><span class="p">.</span><span class="n">fnutils</span><span class="p">.</span><span class="n">each</span><span class="p">(</span><span class="n">applist</span><span class="p">,</span> <span class="k">function</span><span class="p">(</span><span class="n">entry</span><span class="p">)</span>
</span><span class="line">    <span class="n">hs</span><span class="p">.</span><span class="n">hotkey</span><span class="p">.</span><span class="n">bind</span><span class="p">(</span><span class="n">launcherHotkey</span><span class="p">,</span> <span class="n">entry</span><span class="p">.</span><span class="n">shortcut</span><span class="p">,</span> <span class="n">entry</span><span class="p">.</span><span class="n">appname</span><span class="p">,</span> <span class="k">function</span><span class="p">()</span>
</span><span class="line">        <span class="n">hs</span><span class="p">.</span><span class="n">application</span><span class="p">.</span><span class="n">launchOrFocus</span><span class="p">(</span><span class="n">entry</span><span class="p">.</span><span class="n">appname</span><span class="p">)</span>
</span><span class="line">    <span class="k">end</span><span class="p">)</span>
</span><span class="line"><span class="k">end</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>修改 <code>config.lua</code> 文件，定制化自己的需求。</p>

<h3 id="section-7">自动重载配置</h3>

<p>不用手动点击刷新，自动重载 Hammerspoon 配置</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
</pre></td><td class="code"><pre><code class="lua"><span class="line"><span class="kd">local</span> <span class="k">function</span> <span class="nf">reloadConfig</span><span class="p">(</span><span class="n">paths</span><span class="p">)</span>
</span><span class="line">    <span class="n">doReload</span> <span class="o">=</span> <span class="kc">false</span>
</span><span class="line">    <span class="k">for</span> <span class="n">_</span><span class="p">,</span><span class="n">file</span> <span class="k">in</span> <span class="nb">pairs</span><span class="p">(</span><span class="n">paths</span><span class="p">)</span> <span class="k">do</span>
</span><span class="line">        <span class="k">if</span> <span class="n">file</span><span class="p">:</span><span class="n">sub</span><span class="p">(</span><span class="o">-</span><span class="mi">4</span><span class="p">)</span> <span class="o">==</span> <span class="s2">&quot;</span><span class="s">.lua&quot;</span> <span class="k">then</span>
</span><span class="line">            <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">A lua config file changed, reload&quot;</span><span class="p">)</span>
</span><span class="line">            <span class="n">doReload</span> <span class="o">=</span> <span class="kc">true</span>
</span><span class="line">        <span class="k">end</span>
</span><span class="line">    <span class="k">end</span>
</span><span class="line">    <span class="k">if</span> <span class="ow">not</span> <span class="n">doReload</span> <span class="k">then</span>
</span><span class="line">        <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">No lua file changed, skipping reload&quot;</span><span class="p">)</span>
</span><span class="line">        <span class="k">return</span>
</span><span class="line">    <span class="k">end</span>
</span><span class="line">
</span><span class="line">    <span class="n">hs</span><span class="p">.</span><span class="n">reload</span><span class="p">()</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="n">configFileWatcher</span> <span class="o">=</span> <span class="n">hs</span><span class="p">.</span><span class="n">pathwatcher</span><span class="p">.</span><span class="n">new</span><span class="p">(</span><span class="nb">os.getenv</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">HOME&quot;</span><span class="p">)</span> <span class="o">..</span> <span class="s2">&quot;</span><span class="s">/.hammerspoon/&quot;</span><span class="p">,</span> <span class="n">reloadConfig</span><span class="p">)</span>
</span><span class="line"><span class="n">configFileWatcher</span><span class="p">:</span><span class="n">start</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="section-8">窗口管理</h3>

<p><code>window.lua</code>，我只有最大化和两个显示器换屏的需求，所以只实现的这个功能，还可以实现二分之一屏幕的需求，参考本文末尾给的参考链接。</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
</pre></td><td class="code"><pre><code class="lua"><span class="line"><span class="n">hs</span><span class="p">.</span><span class="n">hotkey</span><span class="p">.</span><span class="n">bind</span><span class="p">(</span><span class="n">windowHotkey</span><span class="p">,</span> <span class="s1">&#39;</span><span class="s">return&#39;</span><span class="p">,</span> <span class="k">function</span><span class="p">()</span>
</span><span class="line">    <span class="n">hs</span><span class="p">.</span><span class="n">grid</span><span class="p">.</span><span class="n">maximizeWindow</span><span class="p">()</span>
</span><span class="line"><span class="k">end</span><span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="n">hs</span><span class="p">.</span><span class="n">hotkey</span><span class="p">.</span><span class="n">bind</span><span class="p">(</span><span class="n">windowHotkey</span><span class="p">,</span> <span class="s1">&#39;</span><span class="s">F&#39;</span><span class="p">,</span> <span class="k">function</span><span class="p">()</span>
</span><span class="line">    <span class="n">hs</span><span class="p">.</span><span class="n">window</span><span class="p">.</span><span class="n">focusedWindow</span><span class="p">():</span><span class="n">toggleFullScreen</span><span class="p">()</span>
</span><span class="line"><span class="k">end</span><span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="n">hs</span><span class="p">.</span><span class="n">hotkey</span><span class="p">.</span><span class="n">bind</span><span class="p">(</span><span class="n">windowHotkey</span><span class="p">,</span> <span class="s1">&#39;</span><span class="s">left&#39;</span><span class="p">,</span> <span class="k">function</span><span class="p">()</span>
</span><span class="line">    <span class="kd">local</span> <span class="n">w</span> <span class="o">=</span> <span class="n">hs</span><span class="p">.</span><span class="n">window</span><span class="p">.</span><span class="n">focusedWindow</span><span class="p">()</span>
</span><span class="line">    <span class="k">if</span> <span class="ow">not</span> <span class="n">w</span> <span class="k">then</span>
</span><span class="line">        <span class="k">return</span>
</span><span class="line">    <span class="k">end</span>
</span><span class="line">    <span class="kd">local</span> <span class="n">s</span> <span class="o">=</span> <span class="n">w</span><span class="p">:</span><span class="n">screen</span><span class="p">():</span><span class="n">toWest</span><span class="p">()</span>
</span><span class="line">    <span class="k">if</span> <span class="n">s</span> <span class="k">then</span>
</span><span class="line">        <span class="n">w</span><span class="p">:</span><span class="n">moveToScreen</span><span class="p">(</span><span class="n">s</span><span class="p">)</span>
</span><span class="line">    <span class="k">end</span>
</span><span class="line"><span class="k">end</span><span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="n">hs</span><span class="p">.</span><span class="n">hotkey</span><span class="p">.</span><span class="n">bind</span><span class="p">(</span><span class="n">windowHotkey</span><span class="p">,</span> <span class="s1">&#39;</span><span class="s">right&#39;</span><span class="p">,</span> <span class="k">function</span><span class="p">()</span>
</span><span class="line">    <span class="kd">local</span> <span class="n">w</span> <span class="o">=</span> <span class="n">hs</span><span class="p">.</span><span class="n">window</span><span class="p">.</span><span class="n">focusedWindow</span><span class="p">()</span>
</span><span class="line">    <span class="k">if</span> <span class="ow">not</span> <span class="n">w</span> <span class="k">then</span>
</span><span class="line">        <span class="k">return</span>
</span><span class="line">    <span class="k">end</span>
</span><span class="line">    <span class="kd">local</span> <span class="n">s</span> <span class="o">=</span> <span class="n">w</span><span class="p">:</span><span class="n">screen</span><span class="p">():</span><span class="n">toEast</span><span class="p">()</span>
</span><span class="line">    <span class="k">if</span> <span class="n">s</span> <span class="k">then</span>
</span><span class="line">        <span class="n">w</span><span class="p">:</span><span class="n">moveToScreen</span><span class="p">(</span><span class="n">s</span><span class="p">)</span>
</span><span class="line">    <span class="k">end</span>
</span><span class="line"><span class="k">end</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="section-9">休眠自动关闭蓝牙</h3>

<p><code>bluetoothSleep.lua</code>，无意中发现 Mac 电脑休眠的时候蓝牙居然还出于开着的状态，感觉有点浪费电，使用写了一个脚本实现蓝牙自动开关功能。</p>

<p>使用这个功能之前先要安装 <code>blueutil</code></p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="sh"><span class="line">brew install blueutil
</span></code></pre></td></tr></table></div></figure></notextile></div>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
</pre></td><td class="code"><pre><code class="lua"><span class="line"><span class="k">function</span> <span class="nf">bluetoothSwitch</span><span class="p">(</span><span class="n">state</span><span class="p">)</span>
</span><span class="line">    <span class="c1">-- state: 0(off), 1(on)</span>
</span><span class="line">    <span class="n">cmd</span> <span class="o">=</span> <span class="s2">&quot;</span><span class="s">/usr/local/bin/blueutil --power &quot;</span><span class="o">..</span><span class="p">(</span><span class="n">state</span><span class="p">)</span>
</span><span class="line">    <span class="n">result</span> <span class="o">=</span> <span class="n">hs</span><span class="p">.</span><span class="n">osascript</span><span class="p">.</span><span class="n">applescript</span><span class="p">(</span><span class="nb">string.format</span><span class="p">(</span><span class="s1">&#39;</span><span class="s">do shell script &quot;%s&quot;&#39;</span><span class="p">,</span> <span class="n">cmd</span><span class="p">))</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="k">function</span> <span class="nf">caffeinateCallback</span><span class="p">(</span><span class="n">eventType</span><span class="p">)</span>
</span><span class="line">    <span class="k">if</span> <span class="p">(</span><span class="n">eventType</span> <span class="o">==</span> <span class="n">hs</span><span class="p">.</span><span class="n">caffeinate</span><span class="p">.</span><span class="n">watcher</span><span class="p">.</span><span class="n">screensDidSleep</span><span class="p">)</span> <span class="k">then</span>
</span><span class="line">      <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">screensDidSleep&quot;</span><span class="p">)</span>
</span><span class="line">    <span class="k">elseif</span> <span class="p">(</span><span class="n">eventType</span> <span class="o">==</span> <span class="n">hs</span><span class="p">.</span><span class="n">caffeinate</span><span class="p">.</span><span class="n">watcher</span><span class="p">.</span><span class="n">screensDidWake</span><span class="p">)</span> <span class="k">then</span>
</span><span class="line">      <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">screensDidWake&quot;</span><span class="p">)</span>
</span><span class="line">    <span class="k">elseif</span> <span class="p">(</span><span class="n">eventType</span> <span class="o">==</span> <span class="n">hs</span><span class="p">.</span><span class="n">caffeinate</span><span class="p">.</span><span class="n">watcher</span><span class="p">.</span><span class="n">screensDidLock</span><span class="p">)</span> <span class="k">then</span>
</span><span class="line">      <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">screensDidLock&quot;</span><span class="p">)</span>
</span><span class="line">      <span class="n">bluetoothSwitch</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
</span><span class="line">    <span class="k">elseif</span> <span class="p">(</span><span class="n">eventType</span> <span class="o">==</span> <span class="n">hs</span><span class="p">.</span><span class="n">caffeinate</span><span class="p">.</span><span class="n">watcher</span><span class="p">.</span><span class="n">screensDidUnlock</span><span class="p">)</span> <span class="k">then</span>
</span><span class="line">      <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">screensDidUnlock&quot;</span><span class="p">)</span>
</span><span class="line">      <span class="n">bluetoothSwitch</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
</span><span class="line">    <span class="k">end</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="n">caffeinateWatcher</span> <span class="o">=</span> <span class="n">hs</span><span class="p">.</span><span class="n">caffeinate</span><span class="p">.</span><span class="n">watcher</span><span class="p">.</span><span class="n">new</span><span class="p">(</span><span class="n">caffeinateCallback</span><span class="p">)</span>
</span><span class="line"><span class="n">caffeinateWatcher</span><span class="p">:</span><span class="n">start</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="section-10">最后</h2>

<p>Hammerspoon 能做的事情当然远不知这些，但是这些功能已经让我事半功倍了，最重要的是这个软件开源免费！</p>

<h2 id="section-11">参考链接</h2>

<ul>
  <li><a href="https://www.hammerspoon.org/">Hammerspoon</a></li>
  <li><a href="https://thinkhard.tech/2019/04/08/hammerspoon-introduce/">推荐一个 MacOS 上用了就无法自拔的神器 [Hammerspoon] 和我的配置方案</a></li>
  <li><a href="https://zhuanlan.zhihu.com/p/59737941">『Hammerspoon』Mac 锁屏自动开关蓝牙</a></li>
</ul>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[在家健身有 Switch 就够了]]></title>
    <link href="https://blog.forecho.com/fitness-at-home.html"/>
    <updated>2019-12-16T14:48:22+00:00</updated>
    <id>https://blog.forecho.com/fitness-at-home</id>
    <content type="html"><![CDATA[<ul id="markdown-toc">
  <li><a href="#section" id="markdown-toc-section">引言</a></li>
  <li><a href="#section-1" id="markdown-toc-section-1">玩法</a>    <ul>
      <li><a href="#section-2" id="markdown-toc-section-2">冒险模式</a></li>
      <li><a href="#section-3" id="markdown-toc-section-3">轻松模式</a></li>
    </ul>
  </li>
  <li><a href="#section-4" id="markdown-toc-section-4">购买经历</a></li>
  <li><a href="#section-5" id="markdown-toc-section-5">槽点</a></li>
  <li><a href="#section-6" id="markdown-toc-section-6">最后</a></li>
</ul>

<p><img src="https://blog-1251237404.cos.ap-guangzhou.myqcloud.com/EWJChJ.jpg" alt="" /></p>

<h2 id="section">引言</h2>

<p>上次写了篇<a href="https://blog.forecho.com/buy-nintendo-switch.html">文章</a>分享了我购买 Switch 的经历以及简单测评了一下有氧拳击、马里奥赛车 8、奥德赛三个游戏。</p>

<p>这之后任天堂又发售了一款非常火爆的健身游戏 - 《健身环大冒险》，我已经玩了快半个月了，今天这篇文章我主要就分享这款游戏的使用体验。</p>

<!--more-->

<h2 id="section-1">玩法</h2>

<p><img src="https://blog-1251237404.cos.ap-guangzhou.myqcloud.com/c10CUD.jpg" alt="" /></p>

<p>这款游戏不同于以往的 Switch 游戏，它有器材拆才能玩，一个“Ring-Con”（特制的普拉提圈）和“腿部固定带”。</p>

<p><img src="https://blog-1251237404.cos.ap-guangzhou.myqcloud.com/Dv17B7.jpg" alt="" /></p>

<p>简单说一下游戏的玩法，开始游戏之后按照提示，把手柄按照到器材上，然后把固定带绑定左边大腿上，然后双手拿着普拉提圈就可以开始玩了。当然最好配一个瑜伽垫更方便。这个游戏对场地要求不高，有地方对着电视做静态平板支撑就够了。</p>

<p>录入个人信息之后，跟着里面教练热身完毕之后就开始玩了。游戏一共分为4个主要模式，我只玩过冒险和轻松模式，所以我只能讲这两个模式了。</p>

<h3 id="section-2">冒险模式</h3>

<p>这个是主要模式，可以理解为剧情模式，大致剧情就是一个被关押的 Boss 因为某个原因跑出来了，而你作为主角，要肩负起打 Boss 的责任，跟着地图，通过做一些健身动作来打 Boss，来拯救人类。</p>

<p>你先在地图里面跑啊跑，然后遇到怪之后就开始回合制打斗。听说这个游戏有总共有23个世界，每个世界又有若干个关卡，我到现在玩了累计3个小时了，也才打到世界4，所以你不用担心玩腻的问题。</p>

<p>健身动作刚开始也只给你几个，你要通过打怪升级，然后才会有新的动作，每个动作的攻击力和颜色属性又不同，小怪也有颜色，颜色匹配才能伤害高。当然你还要捡金币买果汁回血，游戏角色死掉会重新打这个关卡的。游戏该有的基本东西它都有。</p>

<p>我一般一次玩两个关卡，需要耗时40～50分钟，实际锻炼时间20～30分钟，游戏只会记录你锻炼时间。每个关卡结束之后会询问你是否测量心率，会根据这个心率来告诉你你的运动强度。运动强度越高，一组动作做的次数就越多，目前我的等级强度最大可以设置为30。</p>

<p>在简单说一下动作，健过身的朋友应该都知道，像深蹲这种动作做的越快是越没有效果的，这里我又要来称赞这个游戏了，每个游戏除了有教练指导外，大部分动作每组前期的动作都要求做的很慢，有一个“稳住”的状态，比方在深蹲的时候要保持蹲下来动作一定时间，因为只有这样才能得到更好的锻炼，因为有设备，你想偷懒都不行。打一个怪，同一个健身动作做完是有冷却时间的，即不能连续使用某个动作。</p>

<p><img src="https://blog-1251237404.cos.ap-guangzhou.myqcloud.com/v6nDRd.jpg" alt="" /></p>

<p>每打完一个关卡都有提示你是否结束训练，结束训练之后就给你看今天运动数据了，然后就开始跟着教练做拉伸动作，拉伸的时候屏幕上方会有一些 Tipc 分享，最后结束之前还有一篇小知识。</p>

<h3 id="section-3">轻松模式</h3>

<p><img src="https://blog-1251237404.cos.ap-guangzhou.myqcloud.com/GGA5y2.jpg" alt="" /></p>

<p>通过玩一些小游戏的方式锻炼某个部位，或者你今天特别想单独训练某个部位的时候，可以选这个。</p>

<p>《健身环大冒险》可以创建多名用户的，你可以和家人玩小游戏，刷排行榜，也是非常有意思的。</p>

<p><img src="https://blog-1251237404.cos.ap-guangzhou.myqcloud.com/PBxK0p.jpg" alt="" /></p>

<p>虽然这个游戏冒险模式不能多人一起玩，但是多人可以互相攀比着玩，进一步提高了玩游戏的积极性。</p>

<h2 id="section-4">购买经历</h2>

<p>因为这个游戏异常火爆，刚开始出来的时候我犹豫了一下要不要买，晚上没下单，没想到第二天涨价了，还好我后来发现中亚上可以买，价格虽然没有第一波便宜，但还是比淘宝上买便宜很多，没犹豫就下单了，还特地开通了亚马逊3个月的 Prime 试用。不到600块钱到手，后来这个游戏越来越火爆，淘宝都卖到700多了，幸亏自己下手早，心想当时下单的时候怎么没想到多买几个呢？</p>

<h2 id="section-5">槽点</h2>

<p>说了这个游戏这么多好，现在也来说说这个游戏的不好的：</p>

<ul>
  <li>上面提到的测量心率的稍显鸡肋，因为只有在打怪的时候你心率才会很高，打完怪，你跑到终点，心率已经下下来了，所以我每次关卡结束的时候测量心率都提示我较低强度 😓</li>
  <li>前期玩冒险模式的时候你可能不能锻炼特定位置的肌肉，因为你等级低，拥有的动作不多，不过这个问题不大</li>
  <li>不能通过其他方式查看数据，目前好像只能通过主机看数据</li>
</ul>

<h2 id="section-6">最后</h2>

<p>《健身环大冒险》弥补了很多《有氧健身》的短板，能锻炼到全身，可以说是一款非常棒的游戏了。现在的人们也越来越注重自己的身体健康，而通过游戏的方式来激励我们锻炼是一种非常棒的方式。</p>

<p>如果你还在担心买 Switch 不玩游戏吃灰的话，不妨可以考虑买这款游戏了。游戏可以不玩，但是健身总得做吧！</p>

<p>最近天冷，已经很久没玩《有氧健身》了，后悔前一段时间买 Keep 会员了（但是还没有买《健身环大冒险》），我看优惠那么大，一冲动就买了1年会员，这下时间真的不够用了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[第九站：武功山两天反穿徒步]]></title>
    <link href="https://blog.forecho.com/wugong-mountain-walking-tour.html"/>
    <updated>2019-11-24T14:48:22+00:00</updated>
    <id>https://blog.forecho.com/wugong-mountain-walking-tour</id>
    <content type="html"><![CDATA[<ul id="markdown-toc">
  <li><a href="#section" id="markdown-toc-section">引言</a></li>
  <li><a href="#section-1" id="markdown-toc-section-1">行程</a>    <ul>
      <li><a href="#day-1" id="markdown-toc-day-1">Day 1</a></li>
      <li><a href="#day-2" id="markdown-toc-day-2">Day 2</a></li>
      <li><a href="#day-3" id="markdown-toc-day-3">Day 3</a></li>
    </ul>
  </li>
  <li><a href="#tips" id="markdown-toc-tips">tips：</a></li>
  <li><a href="#section-2" id="markdown-toc-section-2">最后</a></li>
</ul>

<h2 id="section">引言</h2>

<p>这次调休一个星期，最主要的是想去武功山，但是武功山最多只能玩 3 天，所以才有了前面的佛山自驾游。那个是开胃菜（为了练车），这个才是这次的主菜。</p>

<ul>
  <li>旅行主题是：徒步</li>
  <li>时间是：3 天 2 晚</li>
  <li>两人总共花费：2790，其中交通费花费了 2321</li>
</ul>

<!--more-->

<h2 id="section-1">行程</h2>

<p><img src="https://blog-1251237404.cos.ap-guangzhou.myqcloud.com/武功山徒步.png" alt="" /></p>

<h3 id="day-1">Day 1</h3>

<ul>
  <li>路线：深圳火车站 -&gt; 广州火车站 -&gt; 萍乡火车站</li>
  <li>用时：18:44 -&gt; 第二天 5:43</li>
</ul>

<p>武功山在萍乡，深圳有去萍乡北的高铁，但是只有两趟，而且要坐 4 个小时，如果坐高铁去的话，晚上到那边只能是睡觉了，感觉很不划算。看了很多游记，最后发现有广州去萍乡的火车，可以买卧铺，买最晚一个班次 K302，21 点发车，早上 5:43 到，可以在火车上睡一觉，早上过去正好上山，完美。</p>

<p>但是需要注意的是，这个车次提前买不到硬卧的票，我观察了几天，平常工作日，当日是可以买到当日的硬卧票的。</p>

<h3 id="day-2">Day 2</h3>

<ul>
  <li>路线：萍乡火车站 -&gt; 龙山村登山口 -&gt; 发云界 -&gt; 好汉坡 -&gt; 武发客栈</li>
  <li>用时：6:00 -&gt; 16:20</li>
</ul>

<p>虽然在火车站硬卧可以睡觉，但是睡眠质量肯定是不能保证了，像我这种高质量睡眠的人，也是平均一个小时醒一次。下车之后我们出站就有人拉客，拼车去武功山，50 一人，我后来感觉有点被坑，因为我看到有人说是 40 一人。</p>

<p><img src="https://blog-1251237404.cos.ap-guangzhou.myqcloud.com/uavZq2.jpg" alt="" /></p>

<p>出发之前一定要跟司机说清楚要到龙山村登山口，确实有司机会没给你送到登山口就把你丢下去了。开了一个小时的车，我们才到龙山村登山口，注意上山的路，别走错了入口，我们就因为没自己看路，差点儿走错路了，还好有人冲我们喊，告诉我们走错路了。</p>

<p>原计划是在山下吃早餐的，结果因为我们 7 点就到山下了，而那天又不是周末，所以根本没人开门，所以我们只能直接上山了，还好有带干粮。后来我们路上遇到驴友，他们说他们是打电话叫老板过来煮面吃的，我才知道还能这么操作。😲</p>

<p>那天人很少，我们是爬了半个多小时才看到其他驴友，然后又分开，很长一段时间后面和后面都看不见人，只有我和兔子两个人，所以不建议一个人去。</p>

<p>前面两个多小时我们都是在爬山，一路上有很多补给站，但是开门的就一家。爬山的一路上都是这样的：</p>

<p><img src="https://blog-1251237404.cos.ap-guangzhou.myqcloud.com/hBfH4k.jpg" alt="" /></p>

<p>以及这样的：</p>

<p><img src="https://blog-1251237404.cos.ap-guangzhou.myqcloud.com/R7Hj4Y.jpg" alt="" /></p>

<p>直到 3 个小时之后我们终于爬上山顶，之后的景色一直是非常漂亮的：</p>

<p><img src="https://blog-1251237404.cos.ap-guangzhou.myqcloud.com/Cqdtrf.jpg" alt="" /></p>

<p>金黄色的草和蓝色的天空，后面我们还看到有挑夫，山上的物资都是这些挑夫辛苦挑上去的：</p>

<p><img src="https://blog-1251237404.cos.ap-guangzhou.myqcloud.com/AMr0Rf.jpg" alt="" /></p>

<p>11 点半我们终于到了发云界：</p>

<p><img src="https://blog-1251237404.cos.ap-guangzhou.myqcloud.com/DxKbYX.jpg" alt="" /></p>

<p>旁边有一个客栈开着门，我们去那边吃饭，点了一份鱼和一份青菜，两人一起花了 100 块钱。爬了几个小时，有点累了，吃起饭来特别香。吃完饭休息了一下，<strong>13 点</strong> 之后我们继续接着爬山了。</p>

<p>下午的路要比上午的路难爬多了，但是风景也比上午的好看多了。之后的风景都是这样的：</p>

<p><img src="https://blog-1251237404.cos.ap-guangzhou.myqcloud.com/wtfIQc.jpg" alt="" /></p>

<p>我们爬的很慢，累了就站着休息 2 分钟，直到 4 点半，过了好汉坡，终于到了今天晚上的休息地武发客栈。</p>

<p><img src="https://blog-1251237404.cos.ap-guangzhou.myqcloud.com/51tUkv.jpg" alt="" /></p>

<p>武发客栈每人120一晚，包晚饭洗澡早餐。能看到日落和日出，在武功山上环境算非常好的客栈了，这个价格值。这个客栈听说节假日都是爆满了，需要提前预约。最好带现金，山上信号不好。</p>

<p>老板给我们安排好房间，我们放下行李，赶紧去洗热水澡，洗完跑出去看日落。17：20 日落已经开始了：</p>

<p><img src="https://blog-1251237404.cos.ap-guangzhou.myqcloud.com/OT23af.jpg" alt="" /></p>

<p>如果要看日落，要注意时间了，因为日落时间很短，10 分钟左右就结束了。</p>

<p>看完日落就准备吃晚餐了，客栈晚上18 点到 21 点会发电，这个时候大家赶紧抓紧时间充电，过了这个点就没电了。晚上山上很冷，早上我们上山之前只穿了一件裤子，上身穿了一件速干长袖和冲锋衣，晚上要加衣服才行。还好客栈的被子很暖和，看完星星之后，我们就早早的睡觉了。</p>

<p>晴天确实能看到星星，如果是腊月 15 左右，天空会更亮一点。我们尝试着用单反和手机去拍星空，但是却拍不出来。即使是单反长曝光，拍出来的星空也只是几个白点，白瞎我那么辛苦背它山上了。</p>

<h3 id="day-3">Day 3</h3>

<ul>
  <li>路线：武发客栈 -&gt; 绝望坡 -&gt; 吊马桩 -&gt; 金顶 -&gt; 登山口</li>
  <li>用时：6:00 -&gt; 16:20</li>
</ul>

<p>昨晚上睡的很香，5 点钟我们早早的就醒了，然后就去准备看日出，我们算是客栈里面起来最早的吧，等到 6 点多才有日出。</p>

<p><img src="https://blog-1251237404.cos.ap-guangzhou.myqcloud.com/Vd2ADy.jpg" alt="" /></p>

<p>大伙儿早已经拿好装备迫不及待了。</p>

<p>看完日出，我们赶紧去收拾东西，吃完早餐准备上路了，等待我们的又将是『辛苦』的一天。8 点我们上路了，接下来就是几个上下坡，爬的让人非常绝望，所以这个地方叫绝望坡。其实我觉得快到好汉坡之前的那几个破也非常让人绝望的：</p>

<p><img src="https://blog-1251237404.cos.ap-guangzhou.myqcloud.com/KrVsN3.jpg" alt="" /></p>

<p>爬了两个半小时我们终于到了吊马桩，去武功山之前我们的行程计划是今天在金顶附近住宿一天，第二天早上再下山的。但是昨天在武功山我们已经看完了日落和日出，所以金顶的住宿对我们意义不大了，所以我们昨晚上临时决定改变行程。改签了火车票，今天先去金顶然后下山返程，然后这个决定把我们坑惨了，导致最终我们没赶上高铁。</p>

<ul>
  <li>错误一：没有在吊马桩吃午饭，我们一直在找白云客栈吃饭，但是却没有找到，而且山上能吃饭的客栈很少，过了金顶下山去登山口的路是没有饭吃的。</li>
  <li>错误二：没有坐缆车下山，下山的路，全部是下台阶，估计有几万个台阶了，下的我们膝盖都痛了，但是我们也坚持不坐缆车，无谓的坚持。</li>
  <li>错误三：错误的评估时间，我们达到索道1，犹豫要不要坐缆车的时候，问了工作人员下山还要多久，人家说1个小时，实际上我们走了接近2个小时才到（从金顶下来我们花费接近 4 个小时），兔子以为我们高铁的出发时间是18:40多，实际上是18:09分。我以为山角坐车去高铁站的时间是半个小时，没仔细看攻略，实际上是70分钟的车程。</li>
</ul>

<p><img src="https://blog-1251237404.cos.ap-guangzhou.myqcloud.com/xRG2Em.jpg" alt="" /></p>

<p>早上 8 点出发，13 点我们终于登上了金顶，然后下山花费了 4 个小时。我们到达山脚已经5点了，差不多已经没人理，因为景区16:30就下班了。我们被一位司机拉去坐车。他说太晚了，只能让我们包车，我们赶时间，最后也只能包车了，他是个7座商务车，包车要180，拼车要40一位。</p>

<p>司机说可以帮我赶一下车，确实是尽力赶了，但是路不是深圳的深南大道、宝安大道这种，也快不起来，最终还是晚了十分钟。</p>

<p>而我却因为不熟悉高铁退票规则，错过了开车前25分钟要退票的时间点，后来想退票也需要去窗口退了，但是我们不正是因为没赶上你去车站才选择退票的么？！</p>

<p>最后到了车站，车已经开了几分钟了，跑去车站窗口退票，人家不给我们退了，因为我们的票已经是改签过来的。😓 最后只能是废票了，多么痛的教训。</p>

<p>因为直达深圳北的高铁时间点不好，我们选择去广州南换乘再去深圳，后来发现同样可以在长沙南换乘，时间也刚好，只是换乘时间只有15分钟，我们还是决定冒一下险吧。</p>

<p>在长沙南换乘的时候，我们一路赶时间，可能是周五晚上晚上的原因路上人不算多，我们赶过去那边还在检票。直到上了去深圳北的车，终于 Safe 了，饿了一天了想吃饭，结果因为太晚了，高铁上的饭都卖了完了，我们只能吃点零食续命了。直到转钟我们终于到家吃上一口热饭了。</p>

<h2 id="tips">tips：</h2>

<ul>
  <li>武功山是个群山，以吊马桩为分界线，龙山村到吊马桩基本上全部是山路，吊马桩到登山口全部是台阶，商业化了。但是最美的风景却是龙山口登上山之后到金顶。</li>
  <li>商业化的好处就是干净，有人清理垃圾，垃圾桶多。没商业化就是没人管的路，风景是好看，但是路边全是垃圾，特别是饮料瓶，所以各位要是去徒步一定要自带垃圾袋，不乱丢垃圾，这些只是举手之劳。</li>
  <li>如果是去徒步的，请准备好装备，登山杖最好带上，最好一人两个，没有的话，山脚有卖竹竿的，2 块钱一个，前提就是他们开门了。登山杖真的非常有用，能省不少力。山上路滑，最好还是穿登山鞋，防滑比较重要。</li>
  <li>山上晚上很冷，现在是 11 月底了，白天有太阳，徒步的时候可以穿一件长袖和冲锋衣外套就够了，但是晚上特别冷，要穿保暖绒衣。</li>
  <li>非节假日客栈开门的数量很少，在发云界只有旁边的新绿源开门了，想吃饭赶紧吃，后面想吃了都没有地方吃了。武发客栈算是这些客栈中比较好的，人也多，推荐，记得要提前预订。</li>
  <li>按我们的路线下山还是坐索道吧，至少可以坐索道1，50 块钱一个人，因为没什么好看的风景，而且全是下台阶，下到你断腿。</li>
  <li>切记要带防晒装备，户外帽子，以及遮脸的，我们回程的那天才发觉自己被晒伤了脸，不要以为都 11 月份了会没事（我之前也是这么以为的）。</li>
  <li>准备点士力架和咸的食物，以备不时之需。每个人至少准备两瓶水，山上也可以买水，但是 10 块钱一瓶矿泉水。不过也不宜背多，以为太重，到时候会累死。</li>
  <li>为了这次登山徒步我们特意在双十一的时候买了登山杖和登山包，登山包确实很好用，好的登山包能帮你省很多力。</li>
  <li>这次去武功山之前我还考虑过要不要背帐篷，现在想想辛亏没背，因为对于第一个登山徒步的我们负荷那么重，肯定会累死。上山有住宿，也不算贵，其实没必要住帐篷。</li>
  <li>有个挑夫跟我们说前两天看到云海了，下过雨的第二天很大几率能看到云海，我们是晴天过去的，自然是没运气看到了。</li>
  <li>有人说发云界的鸡很好吃，200 块钱一只，人多的话可以尝一下。如果是两个人的话就算了，吃不完。</li>
  <li>登山不像是平地徒步，虽然这次行程最多一天也就不到 3万的步数，但是 iPhone 的统计是最多一天是爬了 357 层楼，最高海拔是 1900 多。线路是连绵不断的下山和下山。</li>
</ul>

<p><img src="https://blog-1251237404.cos.ap-guangzhou.myqcloud.com/cxiMLr.jpg" alt="" /></p>

<h2 id="section-2">最后</h2>

<p>虽然这次徒步旅程因结尾错过高铁而变的不太完美，但是金色的武功山确实很好看。建议大家如果去玩的话，也走反穿路线（我们的路线），从大门进去真的很没意思，而且还要买门票，我们的路线不需要买门票。早上早点上山，在山上过一夜，第二天下山返程。</p>

<p>不过也只有驴友才会走这条线，所以我们第一天登山碰到的都是驴友，大家遇到了还会打个招呼，互相加油，这种感觉还是5年前跟朋友一起去云南玩才有。</p>

<p>周五晚上我们到家之后，第二天累断了腿，还好自己平常有做健身，大腿没事，休息了一天，只剩下小腿肌肉酸痛，看来平常很少锻炼到小腿肌肉。</p>

<p>本来这次休假准备去稻城亚丁的，同样是徒步，但是由于我们出发的时间有点晚了，怕那边太冷，而且那边有高反，最后才决定去武功山的。第一次徒步就选择了武功山，我觉得下次去稻城亚丁也不在话下了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[第八站：佛山自驾游]]></title>
    <link href="https://blog.forecho.com/foshan-self-driving-tour.html"/>
    <updated>2019-11-24T11:48:22+00:00</updated>
    <id>https://blog.forecho.com/foshan-self-driving-tour</id>
    <content type="html"><![CDATA[<ul id="markdown-toc">
  <li><a href="#section" id="markdown-toc-section">引言</a></li>
  <li><a href="#section-1" id="markdown-toc-section-1">行程</a>    <ul>
      <li><a href="#day-1" id="markdown-toc-day-1">Day 1</a></li>
      <li><a href="#day-2" id="markdown-toc-day-2">Day 2</a></li>
      <li><a href="#day-3" id="markdown-toc-day-3">Day 3</a></li>
    </ul>
  </li>
  <li><a href="#section-2" id="markdown-toc-section-2">关于自驾</a></li>
  <li><a href="#section-3" id="markdown-toc-section-3">关于租车</a></li>
  <li><a href="#section-4" id="markdown-toc-section-4">最后</a></li>
</ul>

<h2 id="section">引言</h2>

<p>之前加班有调休，半年内有效，在即将过期之前我们计划了这次旅行。</p>

<ul>
  <li>旅行主题是：休闲、自驾</li>
  <li>时间是：3 天 2 晚</li>
  <li>两人总共花费：2285，其中交通费就占了 900 多。</li>
</ul>

<!--more-->

<h2 id="section-1">行程</h2>

<h3 id="day-1">Day 1</h3>

<p><img src="https://blog-1251237404.cos.ap-guangzhou.myqcloud.com/gGRMKN.jpg" alt="" /></p>

<p>去佛山的最大原因是顺德，从深圳自驾到顺德区要一个半小时。虽然是周六，一路上也没堵车，但是我开的比较慢，开了两个小时才到。我们 9 点半出发，差不多中午才到，到了清晖园附近，下车第一件事情就是找吃的。</p>

<p>只有出发之前做的攻略有点粗糙，大中午的不应该去先去吃甜品的，而我们偏偏就去了仁信老铺，一个吃双皮奶的地方。味道如何？我只能说在很饿的状态不太适合吃甜品。而且比较『搞笑』的是，本来我同事推荐我们去<strong>民信老铺</strong>吃双皮奶的，我们也是按着导航过去的，结果我们吃完才发现自己走错了店，我们吃的是仁信老铺，民信老铺在隔壁，两个店铺一字之差，我搞错了。😔</p>

<p>甜品自然是吃不饱的，我们又逛了一下，发现旁边有一家<strong>细妹五香牛杂</strong>网红店，排队买牛杂，买了一份 40 块钱的，吃着感觉一般。</p>

<p>吃完了就开始去逛<strong>清晖园</strong>了，门票 15 块钱，便宜，园区虽然不大，但可以去逛逛，可以感受一下岭南风格的建筑。</p>

<p>逛完了清晖园，我们都困了，赶紧找个酒店，然后开车过去休息。然后再准备晚饭的事情了。由于景区的停车场不够用，我们只能停在附近的其他停车场了。 3 个多小时停车费花了 30 多😭，仅供参考。</p>

<p>晚上我们住的酒店在<strong>龙的酒楼</strong>旁边，听说那边的早茶不错，我们打算明天早上去吃。在酒店休息一阵子之后，我们就开始琢磨着晚饭去哪儿吃？《寻味顺德》纪录片让全国人民都知道了顺德的美食，但是选择太多，往往结果就是不知道该如何选择。还好之前有同事是顺德人，我找了作为本地人的他给我们推荐，于是我们晚餐就去了<strong>肥光鱼生</strong>，记得去吃要提前打电话预约。可能是因为周六，我们 5 点多电话过去，也只能预约到 7 点半之后的了。</p>

<p><img src="https://blog-1251237404.cos.ap-guangzhou.myqcloud.com/ST57o0.jpg" alt="" /></p>

<p>中午只吃了点小吃，下午我们早就饿了，哪等得了 7 点，5 点半我们就打车过去了（听说那边不好停车，所以我们决定打车过去）。还好我们去的早，因为现场还是要重新排队的，我们等了不到半个小时就可以吃上了。门面很简洁，连店名都没有。</p>

<p><img src="https://blog-1251237404.cos.ap-guangzhou.myqcloud.com/8p7Su4.jpg" alt="" /></p>

<p>由于是两个人，能吃的东西有限，于是我们只点了一份招牌 - 『一鱼四食』，四个菜鱼肉起片做鱼生、骨腩煎焗、头尾滚汤、凉伴鱼皮。小份 115，我们两个人没吃完。😅</p>

<p>第一次吃生鱼片，感觉很不错。只是吃多了也有点腻，鱼皮很脆，煎的鱼也很嫩。推荐大家去吃。</p>

<p>只可惜我们两个人点了这个就不能尝其他菜了，人多的好处是吃饭的时候可以多点几个菜。</p>

<h3 id="day-2">Day 2</h3>

<p><img src="https://blog-1251237404.cos.ap-guangzhou.myqcloud.com/wQf1aH.jpg" alt="" /></p>

<p>早上走路去<strong>龙的酒楼</strong>吃早茶，来广东这么多年了，这是第一次早上去吃早茶的。酒楼很大，很多老年人去吃早茶。我们找好位子坐下来准备点餐的，结果服务员是让我们拿着单子去自助区，有点类似自助快餐，自己想吃什么就拿什么，拿完给服务员填表盖章。</p>

<p>不够还可以去拿第二回，最后吃饱了再结账。我们点了一些大众点评推荐的菜，像虾皇饺、凤爪等都很好吃。吃完就回酒店抓紧时间退房，然后开车去往下一个景点，祖庙，这次开车也开了一个多小时。同样景区也没停车位了，我们只能停车到附近商场。</p>

<p><img src="https://blog-1251237404.cos.ap-guangzhou.myqcloud.com/AQxTjg.jpg" alt="" /></p>

<p>祖庙的对面就是岭南天地，是一个特色建筑群加各种特色餐馆的很多巷子。下车之后我们还是先解决吃饭的问题，这次我们自己找了一家吃本地菜的餐馆，店名叫<strong>安哥轻奢餐</strong>，点了一份佛跳墙，188 元，贵是贵的点，但是确实很好吃。两个人吃刚好吃到撑，好吃到最后渣都不剩。</p>

<p>佛跳墙这个名字在我的记忆中还停留在小时候看的一个电视剧中，没想到时隔这么久才有机会吃到。</p>

<p><img src="https://blog-1251237404.cos.ap-guangzhou.myqcloud.com/ED0Jl0.jpg" alt="" /></p>

<p>吃饱了瞎逛了一下岭南天地就去旁边的祖庙了，门票 20 块钱一人，不贵，里面还可以看舞狮表演。有叶问和黄飞鸿的一些纪念馆。去看舞狮记得先安排好时间，门口写着一天表演三次，开始之前一定要提前半个小时到达地点，不然就没好位子了，我们就是去晚了，不仅只能晒着太阳看，并且看到的还是背面😭。</p>

<blockquote>
  <p>舞狮表演时间：10:30-11:00、14:15-14:45、15:30-16:00</p>
</blockquote>

<p>祖庙逛完了，我们就准备开车赶往下一个景点 - 西樵山。这次也开了一个多小时，达到酒店之前天都黑了。西樵山这地方有点偏，附近吃饭不太方便，特别是我们住宿的酒店，也是有点累了，所以晚上点了外卖。</p>

<h3 id="day-3">Day 3</h3>

<p>早上起床下去找早餐吃，结果走了一圈没发现好吃的，算了退房开车去吃早餐。事先定酒店的时候没注意这个，不然就算含早餐的套餐了。</p>

<p><img src="https://blog-1251237404.cos.ap-guangzhou.myqcloud.com/ItEd0M.jpg" alt="" /></p>

<p>吃完早餐就开启今天的行程了，先去影视城，门口有收费停车场，这次车位终于够了。票不便宜，一人 101 块钱，这个还是不包含冰雪世界的票，虽然没人送了 60 个游戏币，可以去游乐场玩游戏，到了之后你会发现游乐场很破旧，能玩的很少，每个要 20 个币，意味着你能玩的就只有 3 次，玩了一把旋转木马，玩了一把碰碰车，再想玩第二把的时候，人家维护中，最后 20 个币就是用不出去😅。</p>

<p>影视城不大，主要是 2 种风格的建筑，一个是古代的，有一个小宫殿，一个衙门，一个江南作坊，一个孔子院子等，另外一种风格就是民国时期的广州街和香港街，那天我们去的时候是周一，人很少，大部分都是去拍婚纱照。<strong>因为周一没有表演</strong>，我们也是买票的时候才知道的。</p>

<p>进去之后可以玩一个指定地点打卡盖章的小游戏，集齐所有章可以兑换一个小礼品，差不多 2 个小时左右我们就全部逛完了，中午只能在景区吃了，贵并且不好吃。最后兑换的小礼品也只是一个小朋友玩的风车，很垃圾的那种。</p>

<p>总的来说虽然影视城票价贵了些，但是我觉得没去过的人可以去看下，拍照的好地方。</p>

<p><img src="https://blog-1251237404.cos.ap-guangzhou.myqcloud.com/6abMiN.jpg" alt="" /></p>

<p>吃完我们还得去下一个景区，就是旁边的西樵山了，可以开车上山，车是20 块钱一辆，人是 55 块钱一人。由于时间有限我们就去了天山湖和南海观音，湖没什么特色，这种风景深圳仙湖公园也有，有特色的是南海观音，一座巨大的观音像，我们爬了好一段楼梯才上去。感觉这个钱花的不值，不建议去。不过第一次开盘山路倒是感觉很不错。</p>

<p>下午 4 点多我们开车回深圳，2 个多小时到家，行程结束。</p>

<h2 id="section-2">关于自驾</h2>

<p>驾照拿了一年多了，一年内都没碰车，直到前一段时间开始有自驾的想法，于是找了身边的朋友和会开车的弟弟带了一两次。自己在深圳也带着兔子自驾了好几次，有了 200 公里的经验之后才敢计划这次自驾游。</p>

<p>前面两次自驾都开的比较慢，比导航慢很多，但是最后一程回深圳的时候，明显感觉自己的开车熟练多了，跟导航计算的时间也差不多了。现在的问题还是倒车入库的时候不顺畅，其他的可以了，也知道怎么看后视镜了。</p>

<h2 id="section-3">关于租车</h2>

<p>看了神州、一嗨、GoFun 这几个租车平台，发现如果买了保险，其实这几个平台价格都差不多的。算上服务费和保险费每天基本上 200 块钱左右。最后还是选择自己比较熟悉的 GoFun，毕竟 GoFun 借还是最自由的。</p>

<h2 id="section-4">最后</h2>

<p><img src="https://blog-1251237404.cos.ap-guangzhou.myqcloud.com/1gFqKD.png" alt="" /></p>

<p>这是我们第一次自驾游，不是过节出门玩，自驾游可以很自由，本计划玩四天，自驾去肇庆一趟，但是因为我们还要为接下来的武功山之行多做下准备，于是就缩减到 3 天自驾游了，再后来发现一天要去的景点太多，太赶了，于是就没去肇庆了。一个人开车 2 个小时左右刚好，超过这个就有点疲劳驾驶了。</p>

<p>出去玩还是安全第一。最后推荐一个出去自驾游之前规划行程的神器，那就是高德导航的路书，目前只有网页版。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[双十一值得购买商品推荐]]></title>
    <link href="https://blog.forecho.com/worth-buying-goods.html"/>
    <updated>2019-11-07T14:48:22+00:00</updated>
    <id>https://blog.forecho.com/worth-buying-goods</id>
    <content type="html"><![CDATA[<ul id="markdown-toc">
  <li><a href="#section" id="markdown-toc-section">引言</a></li>
  <li><a href="#section-1" id="markdown-toc-section-1">值得买</a>    <ul>
      <li><a href="#sistema-" id="markdown-toc-sistema-">Sistema 盒</a></li>
      <li><a href="#x3" id="markdown-toc-x3">素士X3电动牙刷</a></li>
      <li><a href="#section-2" id="markdown-toc-section-2">松下吹风机</a></li>
      <li><a href="#section-3" id="markdown-toc-section-3">其他</a></li>
    </ul>
  </li>
  <li><a href="#section-4" id="markdown-toc-section-4">最后</a></li>
</ul>

<h2 id="section">引言</h2>

<p>一年一度的购物狂欢节双十一又到了，往年都是快 11 月份才开始，今天感觉过完国庆节之后就开始预热了。</p>

<p>废话不多说，今天这篇文章我主要是分享最近两年我在使用，并且觉得好用的产品推荐。如果觉得需要，可以考虑加入购物车。</p>

<!--more-->

<h2 id="section-1">值得买</h2>

<h3 id="sistema-">Sistema 盒</h3>

<p><img src="https://blog-1251237404.cos.ap-guangzhou.myqcloud.com/IMG_2142.jpg" alt="" /></p>

<p>重点推荐上图第一个（1400ML 的蒸盒）。</p>

<p>前提是你先有一个微波炉，这个碗配合微波炉真的是神器。这个碗下面可以放水，盖上盖子，打开盖子上的放气孔，放微波炉，可以当蒸笼用。</p>

<p>做健身餐真的是简洁方便，买好的鸡胸肉先解冻，切块，撒上黑胡椒和椒盐，然后放在 Sistema 盒里，下面放点水，盖上盖子，放微波炉 7 分钟，就 ok 了，就这么简单，蒸出来的鸡胸肉非常的嫩，关键是做法简单快速。同样的这个盒子也可以拿到蒸西蓝花等菜，做法大同小异。</p>

<p>至于第二个碗，可以用来做蒸蛋，蒸蛋 + 燕麦 + 牛奶 + 蓝莓，可以轻松的做一份健康美味的营养早餐。</p>

<p>可以上 YouTube 的话，推荐看这个视频 <a href="https://www.youtube.com/watch?v=tzE6J8P7NR4">健身備餐神器-便宜快速版｜無需廚房Sistema盒｜增肌、減脂必備</a>，里面有更详细的介绍。现在双十一的价格比我买的时候要便宜的多，如果有需要的话，可以考虑一下：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
</pre></td><td class="code"><pre><code class=""><span class="line">sistema微波炉专用器皿保鲜盒加热饭盒碗方形塑料密封盒蒸盘蒸盒
</span><span class="line">【在售价】39.00 元
</span><span class="line">-----------------
</span><span class="line">【立即下单】复制$IQQcYGYMLCv$打开手机淘宝立即下单
</span><span class="line">-----------------
</span><span class="line">【立即下单】点击链接立即下单：https://s.click.taobao.com/7nMrWwv</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="x3">素士X3电动牙刷</h3>

<p>之前买的是飞利浦的电动牙刷，不知道是不是我买的太便宜（低档货，2 个 600 多），还是因为我的卖家货有问题，还是说我使用有问题，反正那个飞利浦电动牙刷用了不到 1 年就坏了(亏了我买的牙刷头啊，还没用完)，卖家服务还不错，自己掏钱给寄过去免费修，但是最后给我的结果是电池故障，修不好了，但是可以低价回购我的牙刷。好吧，此后不敢再买飞利浦的牙刷。</p>

<p>这个时候朋友推荐素士牙刷，小米生态链，搞活动的时候买了，最后用了快 2 年了，现在还是挺好用的。而且还比飞利浦的便宜的多。我买的是这款：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
</pre></td><td class="code"><pre><code class=""><span class="line">素士X3电动牙刷成人声波震动牙刷充电式家用软毛刷男女情侣款礼盒
</span><span class="line">【在售价】309.00 元
</span><span class="line">-----------------
</span><span class="line">【立即下单】复制$nUiXYGYDoQa$打开手机淘宝立即下单
</span><span class="line">-----------------
</span><span class="line">【立即下单】点击链接立即下单：https://s.click.taobao.com/ULrlWwv</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="section-2">松下吹风机</h3>

<p>戴森吹风机颜值高是事实，价格高也是事实。即使是有活动的时候也是 2000 左右，下不去手。之前用的奔腾的吹风机，都不到 100 块钱，但是后来头发进去太多了，每次使用都有一股头发烧焦的气味（吹风机里有头发了），再后来就真的坏了，有可能短路了。</p>

<p>去搜索了一番，看到很多人都在推荐松下的吹风机，犹豫了半天，最后选了松下 EH-NA98C 这款，是在最便宜的闲鱼上花了 940 买的。贵是贵了点，但是真的好用，以前吹完头发之后，头发像枯草一样，自从用了这款松下的吹风机，吹完头发头发都是顺滑的。好的吹风机能少掉头发，这钱花的值。自从买了这款吹风机给兔子，我们出远门基本上都要带上，即使它有点大。</p>

<p>写这篇文章的时候，我特意去闲鱼看了那个卖家，她还卖这款吹风机，但是价格居然只要 650，感觉自己亏了一个亿 😭。有了闲鱼还要啥双十一。有需要的自取。</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">快来捡漏【松下EH-NA98C电吹风】 复制这条消息后，打开闲鱼€EU8xYG12Mec€后打开👉闲鱼👈</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="section-3">其他</h3>

<p>废话不多说了，直接列出：</p>

<ul>
  <li>AirPods</li>
  <li>Kindle</li>
  <li>Nintendo Switch</li>
</ul>

<h2 id="section-4">最后</h2>

<p>以上就是目前能想到最近两年我用过超值的东西，良心推荐。如果你也有想推荐的商品，不妨可以微信留言分享给大家。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[【深度阅读 第二季 01】金融其实很简单]]></title>
    <link href="https://blog.forecho.com/readeep-S02E01.html"/>
    <updated>2019-11-01T13:03:58+00:00</updated>
    <id>https://blog.forecho.com/readeep-S02E01</id>
    <content type="html"><![CDATA[<p><a href="https://book.douban.com/subject/30218972/"><img src="https://blog-1251237404.cos.ap-guangzhou.myqcloud.com/1zkQDk.png" alt="《陈志武金融通识课》" /></a></p>

<h2 id="section">一段话说明『这本书主要讲什么？』</h2>

<p>作者避免抽象的理论和数学模型，使用通俗易懂的方式讲解金融的逻辑。包括使用金融的视角去理解历史、分析文化的起源。</p>

<!--more-->

<h2 id="section-1">这本书主要讲什么？</h2>

<h3 id="section-2">金融是什么？</h3>

<p>金融的本质是价值的跨时空交换的工具，即双方之间进行的跨越时间的交易。</p>

<h3 id="section-3">使用金融的视角去理解历史</h3>

<p>了解金融的本质之后，我们就可以去试着理解儒家的『养儿防老』、妇女贞节、只认亲子等观点了。</p>

<p>因为金融的本质是跨期交易的工具，那么起决定作用的就是信任，在古代没有金融市场，没有法律的情况下，如何产生跨期交易的呢？儒家的方法就是用血缘组建信任体系。发展文化体系，以降低跨期交易的违约概率，降低交易成本。</p>

<p>中国为什么一直在推广儒家文化，虽然它对个人约束很多，也压制社会活力，但是它对跨期交易提供了保障，对社会稳定有很大的功效。作者书中举了大量的示例来说明。</p>

<h3 id="section-4">保险</h3>

<p><strong>为什么保险在中国发展不起来？</strong></p>

<ul>
  <li>洋务运动的时候从国外引入，与儒家体系不兼容。</li>
  <li>主要是受文化上的阻力，中国人不愿意讨论不幸事件，认为不吉利。但是如果不谈论这些东西，保险又很难卖出。</li>
</ul>

<p>这种情况一直到『万能险』的引入才有所好转，它是保底理财和人寿险的组合，所以能被当做理财产品，非常的接地气。</p>

<p>保险产品的价值是避险，带来的是『安心』，可以用来对冲『坏风险』。黄金也有半保险性产品。</p>

<h3 id="section-5">消费也是投资</h3>

<p>研究表明，收入越高的人，分期付款借贷消费的倾向性越强。原因在于：在经济学里，我们把人的创业赚钱能力、做事业能力统称为『人力资本』。而如果把人力资本当做资产的话，消费也属于投资。</p>

<p>在职场上，实际上我们每天都在销售自己的能力和东西，为了更好的表现自己，你就需要在自己身上多投资。</p>

<h3 id="section-6">高利贷</h3>

<p>通过管制借贷利率打击高利贷只能治标。要想治本必须从资金的供给方着手。如果商业文化发达、契约精神可靠、社会秩序优良的地方，放贷资金的供给就多，利率就低。</p>

<p>所以治理高利贷的办法就是开放并且鼓励民间金融，政府需要通过法治保护放贷人的权益，鼓励更多人参与放贷。打击高利贷者只会使借贷资金供给短缺，利率反而上涨。</p>

<h3 id="section-7">为什么互联网发展这么快</h3>

<p>因为它的产出跟成本投入之间几乎没太大关系，也就是说边际成本（每一块钱的收入所付出的额外成本）几乎为 0。</p>

<h3 id="section-8">股份有限责任公司</h3>

<ul>
  <li>股东的损失最多不超过已经注入公司的资本或者股本。公司的钱独立于股东私人的钱。</li>
  <li>传统公司股权不能自由买卖，而有限责任公司可以在自然人和法人之间转让。</li>
  <li>股权能轻松交易，可以鼓励到更多人提供资金，使公司融资规模扩大。</li>
</ul>

<h3 id="section-9">为什么中国的百年老店少之又少</h3>

<p>日本的百年企业全球最多，超过 200 年的企业有 3000 多家。德国有 800 多家、荷兰 200 多家，法国有接近 200 家。而在中国超过 150 年的老店大概有 7 家，分别是：</p>

<ul>
  <li>六必居</li>
  <li>张小泉</li>
  <li>同仁堂</li>
  <li>陈李济</li>
  <li>玉堂酱园</li>
  <li>王老吉</li>
  <li>全聚德</li>
</ul>

<p>除了因为现代公司进入中国比较晚之外，还因为：</p>

<ul>
  <li>中国是一个高度人治的环境，除非家里总有一个人在做高管，否则无法保证家族企业的产权和契约利益的安全，各种委托代理关系和契约关系不好应对。</li>
  <li>儒家对商业的排斥。</li>
</ul>

<p><strong>所以说真正的价值投资者也必须知道从公司文化和体制因素上去权衡、比较、寻找保证事业常青的基因。</strong> 知道什么公司适合短期投机，什么公司长期投资。</p>

<p>要改变『富不过三代』的宿命，发展法治社会、职业经理人市场和活跃的股权市场是唯一的出路。</p>

<h3 id="section-10">家族企业</h3>

<p>在缺乏法治的传统社会里，跨期信任的挑战只能依靠血缘、亲缘这种不变关系来缓和，过去的中国如此，如今的亚洲其他国家也是如此。</p>

<h3 id="section-11">公司为什么要追求上市？</h3>

<ul>
  <li>好处
    <ul>
      <li>扩大融资</li>
      <li>利用股权发行便利，用自己的股票收购其他公司，改变公司的地位，改变竞争格局</li>
      <li>扩大股东、分摊风险</li>
    </ul>
  </li>
</ul>

<h3 id="section-12">上市不止是敲钟</h3>

<p>很多中国公司把上市当做终究目标，只在意短期利益。上市之前制作业绩巅峰，虽然一开始能把股价炒得很高，但是如果业绩下滑，会让第一波投资者吃到苦头，之后再与市场沟通起来就很难了。上市是否成功取决于今后漫长的市场沟通和市场管理。</p>

<p>事实上，<strong>股票的估值和交易量通常是高度正比关系</strong>，交易量大的公司，市盈率通常更高。所以在投资的时候我们应该留意一下该公司是否经常与市场沟通，是否对外常披露信息。</p>

<h3 id="section-13">在哪儿上市好？</h3>

<p>哪里聚集了熟悉你公司产品和服务的人，就跑到哪里去上市，让能理解的人买你公司的股票。没有海外市场的公司就不要去国外上市了。</p>

<p>作者讲了一个典型的例子就是分众传媒在美国纳斯达克上市再退市再借壳上市的故事。</p>

<h3 id="section-14">多元化发展的公司</h3>

<ul>
  <li>多元化发展在野蛮增长时期可以带来好处，但也可能带来更多的风险点。</li>
  <li>集中主业的公司在海外市场发展的更好。</li>
  <li>跨行业多元化等于把有限的资源分散到多个战场，最后可能哪个战场都守不住（越是发展好的分公司经理越容易被竞争对手挖去）。</li>
</ul>

<h3 id="section-15">中国现阶段资产结构对比</h3>

<ul>
  <li>房产占 68.8%，金融资产不到 12%，风险过度集中，流动性低。</li>
  <li>现金和银行存款占比太高，需要增加中等风险投资占比。不然只能保值不能充分分享经济增长红利。可提高蓝筹股、债券、蓝筹股基金的占比。</li>
  <li>多学习金融知识，切记<strong>未来不是过去的重复</strong>。</li>
</ul>

<h3 id="section-16">股票投资</h3>

<ul>
  <li>市盈率是投资者对上市公司未来表现的一种期望。期望越高，市盈率越高，反之亦然。预期越高的公司，未来一旦无法兑现，股价跌得也会很惨。</li>
  <li>清算价值是计算公司真实价值的简便方法，只有在股价清算低于清算价值足够多的时候，才从经济上合算，并且股价回归价值比较漫长。</li>
  <li>不要追风炒股。每周炒热门股票的业绩总体远远落后于大盘指数，而且几乎每年落后于大盘。</li>
  <li>分析经济行为，离不开人类的心理规律。男人通常更加自信、频繁交易。女人通常非理性投资。但是市场最终还是属于理性投资者的。</li>
</ul>

<h3 id="section-17">房价为什么越调控越涨</h3>

<ul>
  <li>一般商品的价格取决于当下供求关系，未来预期的影响有限。但是房价受未来预期的影响特别大。对未来房价预期乐观时，买房需求和房价就会立即上涨。</li>
  <li>调控房价一方面降低了供给，另一方面稳定了房价，<strong>不让房价下跌</strong>，使人们对未来房价的乐观预期不断得到强化，导致买房需求持续上升。</li>
</ul>

<h3 id="section-18">金融业</h3>

<ul>
  <li>资产证券化本质是把未来收入流打成资产包，然后将资产包的收益分成份额，将这些份额标准化、证券化后，向资产者销售。</li>
</ul>

<h3 id="section-19">央行调控货币的方法：</h3>

<ul>
  <li>一般有五个方法：公开市场业务、存款准备金、中央银行贷款、利率政策、常备借贷便利。其中公开市场最常用。</li>
  <li>公开市场操作流程：央行增加货币，则在债券市场上投入现金，购买国债，如果要回收过多的流动性，则只要抛售国债券，吸纳现金就可以了。</li>
  <li>存款准备金：央行上调存储准备金，各大银行上交给央行的现金变多，银行能借出去的钱变少。</li>
</ul>

<h2 id="section-20">推荐理由</h2>

<p>本书一共 500 多页，但是内容大多数都写的通俗易懂，内容包含大量的故事和案例，让读者阅读起来生动有趣。</p>

<p>唯一不足的是金融其实是一个非常广的领域，即使是本书 500 多页，有些内容也只能讲的比较浅显，但是我仍然觉得这是一本非常不错的书，它解决了几个内心一直疑惑的问题，比方说中国为什么百年企业很少，央行怎么调控货币的？难道是真的直接发钱吗？</p>

<p>由于篇幅有限，书中精彩内容本篇没有一一提到，有感兴趣的朋友自己去把书找来读读吧。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[在网上配眼镜是一种什么体验]]></title>
    <link href="https://blog.forecho.com/talk-about-the-experience-of-online-glasses.html"/>
    <updated>2019-10-31T14:48:22+00:00</updated>
    <id>https://blog.forecho.com/talk-about-the-experience-of-online-glasses</id>
    <content type="html"><![CDATA[<ul id="markdown-toc">
  <li><a href="#section" id="markdown-toc-section">引言</a>    <ul>
      <li><a href="#section-1" id="markdown-toc-section-1">网上配眼镜</a></li>
      <li><a href="#section-2" id="markdown-toc-section-2">第一步：获取信息</a></li>
      <li><a href="#section-3" id="markdown-toc-section-3">第二步：验光</a></li>
      <li><a href="#section-4" id="markdown-toc-section-4">第三步：配镜</a></li>
    </ul>
  </li>
  <li><a href="#section-5" id="markdown-toc-section-5">最后</a></li>
</ul>

<h2 id="section">引言</h2>

<p>先说说自己近视的情况。14 年的时候线下配的眼镜，直接在美团上搜索了一家店铺，有优惠就跑去了。一个比较小的眼镜店，自己的眼睛近视不深，那个时候一只眼 100 度，另一只眼睛 150 度。当时配眼镜花了半个多小时就搞定了，最后花了 200 块钱左右。而平常我只是在上班和看电视的时候才带。</p>

<p>没想到这眼镜一戴就是 4 年，去年的时候我发现这眼镜越来越不清晰了，感觉自己视力下降了，然后年初的时候考虑换一副眼镜。之前在网上看到有人说在网上配眼镜很划算，再加上自己在大众上看了一圈配眼镜店没找到合适的，于是想体验一把网上配眼镜。</p>

<!--more-->

<h3 id="section-1">网上配眼镜</h3>

<h3 id="section-2">第一步：获取信息</h3>

<p>先去网上看了几篇相关文章，获取了经验，大概流程就是：先去医院验光，然后拿着验光的数据去网上配眼镜，最后就坐等快递就可以了。流程是非常的简单，但是有一个环节出乎意料的花了最多时间，后面我再详细讲。</p>

<h3 id="section-3">第二步：验光</h3>

<p>先去网上搜索了一番本地医院验光情况，最后没找到什么合适的医院，但是得出一个结论，深圳本地的眼科医院验光贵，而且也不好，没必要专门去眼科医院。所以我最后选了一家离自己最近的三甲医院验光，先说说体验，网上提前挂号，人不算多，一个半小时搞完，包括拿到验光单。再说说费用全程走社保（社保一档），费用下来是 168+11（挂号费）。得出的结论就是验光有点贵，但是可以走社保，而且该给的数据都给了。不像有个同事也是去了三甲医院验光，虽然便宜，但是居然没看瞳距的数据。我的验光项目主要有以下几个：</p>

<p><img src="https://blog-1251237404.cos.ap-guangzhou.myqcloud.com/20191031105034.JPG" alt="" /></p>

<h3 id="section-4">第三步：配镜</h3>

<p><strong>先说说镜片</strong></p>

<p>拿到左右眼度数，散光数据以及瞳距就可以去淘宝店看镜片了。以前配眼镜，都不关心镜片什么的，验光的时候医生说我那个眼镜镜片磨损的太厉害了（当然也有可能和我使用的时间太长有关系），于是这次我准备配个好镜片，去了解了一下之后，得到的信息是好的镜片有依视路和蔡司这两个品牌，两个都看了一下，最后选了依视路的。品牌选好之后就该选规格了，我近视不高，所以选的是 1.56 折射率的镜片，折射率越高越薄，但是越贵。因为天天对着电脑写代码，所以我选了防蓝光的镜片。</p>

<p>我两只眼睛都在 200 度左右，无散光，最后选的依视路爱钻 A4 防蓝光镜片，花了 517.4 元。</p>

<p><strong>再说说镜框</strong></p>

<p>我找的淘宝店是买镜片送镜框，店铺里面的大多数镜框都可以选，差不多就上百个款式了吧，由于不能像实体店那样试戴，所以这个算是线上配眼镜的劣势了，最后镜框把我选的眼花缭乱，选镜框至少花了一两个小时。</p>

<p>最后选了一款派丽蒙的镜框。</p>

<h2 id="section-5">最后</h2>

<p>带了这个镜框半年多了，最后再说说自己的感受吧。虽然现在很多眼镜店免费验光，但是设备都比较简陋，不如去三甲医院花点钱验光好，一个医院验光不满意，那就多跑一家医院（不然还能怎样？）。大多数地区线上配眼镜价格是有很大的优势，除非你离丹阳比较近。所以我这次网上配眼镜一共花费是 168+11+517.4 = 696.4 元。</p>

<p>配的这个眼镜好看是好看，但是不知道是因为太重还是因为镜框没选好，带久了鼻梁上就有『小红坑』，不知道大伙有没有好的解决办法？除此之外没任何问题了。</p>

<p>另外，网上也有很多人推荐 JINS 的，没用过，不评价。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[最终我还是买了 Nintendo Switch]]></title>
    <link href="https://blog.forecho.com/buy-nintendo-switch.html"/>
    <updated>2019-10-23T14:48:22+00:00</updated>
    <id>https://blog.forecho.com/buy-nintendo-switch</id>
    <content type="html"><![CDATA[<ul id="markdown-toc">
  <li><a href="#section" id="markdown-toc-section">引言</a></li>
  <li><a href="#section-1" id="markdown-toc-section-1">购买经验</a></li>
  <li><a href="#section-2" id="markdown-toc-section-2">游戏体验</a>    <ul>
      <li><a href="#section-3" id="markdown-toc-section-3">有氧拳击</a></li>
      <li><a href="#section-4" id="markdown-toc-section-4">马里奥赛车 8</a></li>
      <li><a href="#section-5" id="markdown-toc-section-5">奥德赛</a></li>
    </ul>
  </li>
  <li><a href="#section-6" id="markdown-toc-section-6">最后</a></li>
</ul>

<p><img src="https://blog-1251237404.cos.ap-guangzhou.myqcloud.com/20191023170804.png" alt="" /></p>

<h2 id="section">引言</h2>

<p>经常看我博客的朋友可能知道我在去年春节之前租了一个 Switch 回家玩了，为此我还特意写了一篇文章 <a href="https://blog.forecho.com/rent-a-switch-to-play.html">《租 Switch 玩》</a>。</p>

<p>半个月前在兔子的『要求』下我最终还是买了一台 Switch，这篇文章就讲讲购买经验，以及继续分享玩过的三个游戏体验。</p>

<!--more-->

<h2 id="section-1">购买经验</h2>

<p>去年淘宝上 Switch 最低价格差不多都在 2000 多点，半个月前我买的时候发现降价了，不到 1900 就可以买到了，发自上海，日版，没有税。京东也差不多这个价格，不过要收税。我觉得降价应该跟 Switch Lite 发布有一定的关系吧，我喜欢投屏玩，所以 Lite 肯定就不考虑了，还有一个续航增强版，贵几百块钱，但是对于我这种喜欢把 Switch 当主机来用的人来说，续航增强版没多大意义。所以我买的就是普通版。</p>

<p>买的第一个游戏是《有氧拳击》，不知道兔子在哪儿看到的这个游戏，反正我之前好像都不知道还有这个游戏。</p>

<h2 id="section-2">游戏体验</h2>

<h3 id="section-3">有氧拳击</h3>

<p>是一款体感游戏，主打健身。完全是超出预期的游戏。把有氧运动和游戏完美的结合。游戏玩法就非常的简单，里面有教练，跟着教练照着做就可以了。我认为的游戏特点：</p>

<ul>
  <li>每日训练计划，首选让你选择目的，时长，会自动生成计划任务</li>
  <li>优秀的声优</li>
  <li>多个卡通教练可选</li>
  <li>奖励系统，通过玩游戏（打拳）行为，获得教练的衣服、鞋子等装饰物品</li>
  <li>统计功能，每天的打拳时间，打拳次数、消耗的卡路里以及根据你的数据推测出年龄（这个非常有意思）</li>
</ul>

<p>曾经看过一本书，让我写了<a href="https://blog.forecho.com/readeep-014.html">《【深度阅读014】使用游戏机制，改变生活》</a>这篇文章，运用书中的理论分析出：</p>

<ul>
  <li>史诗意义与使命感：能减肥</li>
  <li>进步与成就感：有统计数据以及走势图，能看到进步</li>
  <li>创意授权与反馈：无</li>
  <li>所有权与拥有感：无</li>
  <li>社交影响力与关联性：可以两人一起玩，但是最好要再买一副手柄，体验才好</li>
  <li>稀缺性与渴望：无</li>
  <li>未知性和好奇心：打拳打到后面会有新动作出现</li>
  <li>亏损与逃避：无</li>
</ul>

<p>这个游戏玩了半个月感受就是：</p>

<ul>
  <li>第一次玩，打了 10 分钟，打的很用力，虽然动作有些不标准，但没想到的是肌肉酸痛了 2 天，只好休息。</li>
  <li>第二次玩就好很多，后面就开始慢慢加时间了。现在每日计划是 40 分钟了。</li>
  <li>现在每次打完拳都是一身汗，能不能减脂我现在还不能确定，等过一阵子我再看。</li>
  <li>之前租 Switch 担心是自己没玩时间，事实上却是时间不多，如果遇到加班日就真的不能玩了。但是如果不加班，回去吃完晚饭，休息一下，再完成今日计划，时间完全是够的。</li>
  <li>现在的情况虽然也不是天天有时间打拳，但是经常下班就想回家打拳，一个星期打个 3、4 次基本上没问题。</li>
</ul>

<h3 id="section-4">马里奥赛车 8</h3>

<p>前几天刚买的游戏，算是一款中规中矩的游戏，但是这个游戏主要是可以多人一起比赛玩，这种回合、多人制的游戏，非常适合时间不多的人玩，既可以和家人、朋友一起玩，又不会让人上瘾。</p>

<h3 id="section-5">奥德赛</h3>

<p>也是前几天刚买的游戏，可以说是非常优秀的一款游戏了，说是有双人模式，但是第二个人只负责扔帽子 😅，所以我们还是用单人模式在玩。有非常多好玩的地方，而且还能体验经典的『超级马里奥』。</p>

<p>好处说完了再说说缺点：</p>

<ul>
  <li>不太适合双人模式，虽然有。</li>
  <li>不适合手残党 😭</li>
</ul>

<h2 id="section-6">最后</h2>

<p>任天堂无疑是一个优秀的公司，它能让人体验到玩游戏的乐趣，虽然 PS 和 XBox 的主机性能更好，但是我更注重的是玩游戏本身。这就是我为什么买 Switch 而不考虑其他游戏主机的原因。</p>

<p>话说最近任天堂的一款新的健身游戏（健身大冒险）已经发布了，我已经准备购买了（游戏太火，前几天刚发布，现在都没现货了）。另外想说的是，我在逛淘宝买二手 Switch 游戏的时候发现有些店铺支持回收游戏，买了游戏，玩腻了，再减去 15 块钱还可以卖给店铺，有这种店铺我就再也不用担心游戏贵的事情了（有些游戏打通关了就不想玩了）。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[重学 Vim]]></title>
    <link href="https://blog.forecho.com/re-study-vim.html"/>
    <updated>2019-10-08T14:48:22+00:00</updated>
    <id>https://blog.forecho.com/re-study-vim</id>
    <content type="html"><![CDATA[<ul id="markdown-toc">
  <li><a href="#section" id="markdown-toc-section">引言</a></li>
  <li><a href="#section-1" id="markdown-toc-section-1">模式</a>    <ul>
      <li><a href="#section-2" id="markdown-toc-section-2">普通模式</a></li>
      <li><a href="#section-3" id="markdown-toc-section-3">插入模式</a></li>
      <li><a href="#section-4" id="markdown-toc-section-4">可视模式</a></li>
      <li><a href="#section-5" id="markdown-toc-section-5">命令行模式</a></li>
    </ul>
  </li>
  <li><a href="#section-6" id="markdown-toc-section-6">移动光标</a></li>
  <li><a href="#section-7" id="markdown-toc-section-7">动作</a></li>
  <li><a href="#vim" id="markdown-toc-vim">配置 Vim</a></li>
  <li><a href="#section-8" id="markdown-toc-section-8">插件</a>    <ul>
      <li><a href="#vim-abolishhttpsgithubcomtpopevim-abolish" id="markdown-toc-vim-abolishhttpsgithubcomtpopevim-abolish">vim-abolish</a></li>
      <li><a href="#ybiansmartimhttpsgithubcomybiansmartim" id="markdown-toc-ybiansmartimhttpsgithubcomybiansmartim">ybian/smartim</a></li>
    </ul>
  </li>
  <li><a href="#section-9" id="markdown-toc-section-9">最后</a></li>
  <li><a href="#section-10" id="markdown-toc-section-10">参考链接</a></li>
</ul>

<h2 id="section">引言</h2>

<p>2013 年的时候我才开始接触 Vim，简单学了一下，也没用起来，后来只记得普通模式以及怎么进入插入模式，然后就是保存退出这几个命令了。</p>

<p>直到最近买了一个 HHKB 键盘以及发现使用 Vim 编码效率要高很多，所以我决定重拾 Vim，为了加强自己的记忆，于是我就整理了这篇文章。</p>

<!--more-->

<h2 id="section-1">模式</h2>

<p>这个是 Vim 区别普通编辑器的最大差别。Vim 有好几种模式，在不同的模式下可以干不同的事情。</p>

<h3 id="section-2">普通模式</h3>

<p>这个是 Vim 的默认模式，在这种模式下，你可以通过键盘移动光标，可以删除文字。</p>

<p><strong>方向键</strong></p>

<ul>
  <li><code>h</code>：左 ←</li>
  <li><code>j</code>：下 ↓</li>
  <li><code>k</code>：上 ↑</li>
  <li><code>l</code>：右 →</li>
</ul>

<p>这几个是最常用的方向键盘，怎么记呢？除了记住『<code>j</code> 长得有点像 ↓』之外就是勤加练习了。</p>

<p><strong>其他</strong></p>

<ul>
  <li><code>dd</code>：删除当前行</li>
  <li><code>d$</code> 或者 <code>D</code>：删除当前光标到行尾</li>
  <li><code>d0</code>：删除当前光标到行首</li>
  <li><code>yy</code>：剪切当前行</li>
  <li><code>p</code>：粘贴内容到下一行</li>
  <li><code>v$yjp</code>：选中光标到行尾内容，跳转下一行粘贴内容</li>
</ul>

<h3 id="section-3">插入模式</h3>

<p>专门用来插入文字的模式，你可以把其他编辑器的默认模式理解为 Vim 的插入模式。</p>

<p><strong>如何从普通模式进入插入模式?</strong></p>

<ul>
  <li><code>i</code>：在光标之前插入（insert 插入）</li>
  <li><code>a</code>：在光标之后插入（append 追加）</li>
  <li><code>I</code>：在光标行行首插入</li>
  <li><code>A</code>：在光标行行尾插入</li>
  <li><code>o</code>：在光标行下面插入新一行并且保持插入模式</li>
  <li><code>O</code>：在光标行上面插入新一行并且保持插入模式</li>
</ul>

<p>除了以上命令我们还可以使用 <code>c</code> 命令进入插入模式：</p>

<ul>
  <li><code>cc</code>：删除当前行内容，并且进入插入模式</li>
  <li><code>c$</code> 或者 <code>C</code>：删除当前光标到行尾，并且进入插入模式</li>
  <li><code>cw</code>：从光标处删除到单词结尾并且进入插入模式</li>
  <li><code>caw</code>：删除整个单词并且进入插入模式（即使你的光标在单词中间）</li>
</ul>

<p><strong>如何回到普通模式？</strong></p>

<p>按 <code>Esc</code> 键最方便。</p>

<h3 id="section-4">可视模式</h3>

<p>可以理解为选中模式，通过一些命令选中字符、行、块，再针对选中区域做操作。</p>

<p><strong>普通模式和可视模式可以这样互相切换</strong></p>

<ul>
  <li><code>v</code>：切换面向字符的可视模式</li>
  <li><code>V</code>：切换面向行的可视模式</li>
  <li><code>Control</code> + <code>v</code>：切换面向块的可视模式（当你需要对几行字符做相同操作的时候，这种模式非常有用）</li>
</ul>

<p><strong>相关命令</strong></p>

<ul>
  <li><code>gv</code>：进入上次可视模式状态</li>
  <li><code>o</code>：切换选中区域的活动端（试一下 <code>vwwoe</code> 自己感受一下）</li>
</ul>

<p><strong>实际场景示例</strong></p>

<ul>
  <li><code>vi'c</code>：从当前光标位置删除 <code>'</code> 之前的内容，并且进入插入模式</li>
  <li><code>vi}</code>：选中 <code>{}</code> 之间的内容，同理 <code>}</code> 可以换成 <code>'</code>、<code>"</code>、<code>]</code> 等（i 可以立即为 inside）</li>
  <li><code>va}</code>：选中 <code>{}</code> 以及其之间的内容，同理 <code>}</code> 可以换成 <code>'</code>、<code>"</code>、<code>]</code> 等（a 可以理解为 around）</li>
  <li><code>vit</code>：选中两个标签之间的内容</li>
  <li><code>viw</code>：选中当前字符</li>
  <li><code>viW</code>：选中当前字串（字串含义见后面内容）</li>
</ul>

<p>更多可以参考下图，来源<a href="http://yyq123.blogspot.com/2016/12/vim-text-objects.html">《VIM学习笔记 文本对象（Text Objects）》</a></p>

<p><img src="https://blog-1251237404.cos.ap-guangzhou.myqcloud.com/20191011095932.png" alt="" /></p>

<h3 id="section-5">命令行模式</h3>

<p>进入命令行模式之后我们可以执行一些命令对文本进行操作。</p>

<p><strong>进入命令行模式</strong></p>

<ul>
  <li><code>:</code>：进入命令行模式</li>
  <li><code>/</code>：向下进行搜索，按 <code>n</code> 跳转到下一个，按 <code>N</code> 跳转到上一个</li>
  <li><code>?</code>：向上进行搜索，按 <code>n</code> 跳转到下一个，按 <code>N</code> 跳转到上一个</li>
</ul>

<p><strong>一些常用的命令</strong></p>

<ul>
  <li><code>:x</code>：保存并且退出</li>
  <li><code>:wq</code>：保存并且退出</li>
  <li><code>:w</code>：保存</li>
  <li><code>:q</code>：退出</li>
  <li><code>:0</code>：跳转到文件头，0 代表行号</li>
  <li><code>:t</code>：复制，把一行或者多行复制到指定位置</li>
  <li><code>:m</code>：移动，在用法上和复制类似</li>
</ul>

<p><strong>一些示例</strong></p>

<ul>
  <li><code>:2,3t.</code>：把第2 和 3 行的内容复制到当前光标行下方</li>
  <li><code>:2,.t5</code>：把第2 行到当前光标行复制到第 5 行下方</li>
  <li><code>:2m.</code>：把第2 行移动到当前行下方</li>
  <li><code>:t5</code>：把当前行复制到第5 行下方</li>
  <li><code>:t$</code>：把当前行复制到最后一行</li>
  <li><code>:t.</code>：把当前行复制到下一行，同 <code>yyp</code></li>
  <li><code>:%s/echocai/forecho</code>：把当前文件每行第一个 <code>echocai</code> 替换为 <code>forecho</code></li>
  <li><code>:%s/echocai/forecho/g</code>：把当前文件的所有 <code>echocai</code> 替换为 <code>forecho</code></li>
  <li><code>:'&lt;,'&gt;s/field/echo</code>：把当前高亮区域中所有的 <code>field</code> 替换为 <code>echo</code> （高亮区域可以事先通过 <code>Vjjj</code> 选中，再输入 <code>:</code> 的时候，会自动输入 <code>'&lt;,'&gt;</code>）</li>
  <li><code>:![cmd]</code>：运行 shell 命令（示例：<code>:!pwd</code>、<code>:!ls</code>）</li>
</ul>

<h2 id="section-6">移动光标</h2>

<p>这个是非常常用的功能，在普通模式下我们除了使用 <code>h</code>、<code>j</code>、<code>k</code>、<code>l</code> 移动外，我们还可以：</p>

<ul>
  <li><code>Control</code> + <code>d</code>：向下滚动半屏幕</li>
  <li><code>Control</code> + <code>u</code>：向上滚动半屏幕</li>
  <li><code>gg</code>：跳转到文件头部</li>
  <li><code>12gg</code>：跳转到第 12 行</li>
  <li><code>G</code>：跳转到文件末尾</li>
  <li><code>f{char}</code>：行内搜索，跳转到下一个{char}所在的位置上（示例：<code>fx</code> 跳转到下一个x 所在的位置）</li>
  <li><code>F{char}</code>：行内搜索，跳转到上一个{char}所在的位置上。（示例：<code>Fx</code> 跳转到上一个x 所在的位置）</li>
  <li><code>t{char}</code>：行内搜索，跳转到下一个{char}的前一个位置上。（示例：光标在行首的时候，在有 ActiveForm 的行内使用 <code>tc</code> 跳转到 A 所在的位置）</li>
  <li><code>T{char}</code>：行内搜索，跳转到上一个{char}的前一个位置上。</li>
  <li><code>w</code>：跳转到下一个单词的第一个单词上</li>
  <li><code>b</code>：跳转到上一个单词的第一个单词上</li>
  <li><code>e</code>：跳转到下一个单词的最后一个单词上</li>
  <li><code>ge</code>：跳转到上一个单词的最后一个单词上</li>
  <li><code>zz</code>：让光标处于屏幕正中间，不会移动光标。</li>
</ul>

<p>上面的 <code>w</code>、<code>b</code>、<code>e</code> 都有对应的大写 <code>W</code>、<code>B</code>、<code>E</code>，区别就是大写范围更大。小写范围是单词（word），大写范围是字串（WORD），区别：</p>

<ul>
  <li>单词（word）：由数字、字母、下划线或者其他非空白字符串组成</li>
  <li>字串（WORD）：以空白字符串分割</li>
</ul>

<p>另外在使用 <code>f</code>、<code>F</code>、<code>t</code>、<code>T</code> 命令的时候，要注意：</p>

<ul>
  <li>尽量找低频字母</li>
  <li><code>;</code>：重复上一次行内搜索，可以理解为跳转到下一个目标位置</li>
  <li><code>,</code>：撤回上一次行内搜索，可以理解为跳转到上一个目标位置</li>
</ul>

<h2 id="section-7">动作</h2>

<p>动作是指再普通模式下执行的一些行为，需要跟其他指令一起使用。最常用的有这些：</p>

<ul>
  <li><code>d</code>：删除</li>
  <li><code>c</code>：删除并且进入插入模式</li>
  <li><code>r</code>：替换，在普通模式下替换一个字符，比方说把光标移动 t 上，按下 <code>rT</code> 会直接把 t 替换为 T 并且还处于普通模式下</li>
  <li><code>R</code>: 进入替换模式，会替换光标所在的文字，直到按 <code>Esc</code> 为止</li>
  <li><code>x</code>：普通模式下删除一个字符，保持普通模式</li>
  <li><code>u</code>：撤销操作</li>
  <li><code>Control</code> + <code>r</code>：重做</li>
</ul>

<p>以上这些动作都可以用数字或者其他指令组合，一些示例：</p>

<ul>
  <li><code>daw</code>：即使你处于单词中间，你也可以通过这个命令把整个单词删除。</li>
  <li><code>4dd</code>：<code>dd</code> 是删除一行，<code>4dd</code> 是删除 4 行</li>
</ul>

<h2 id="vim">配置 Vim</h2>

<h2 id="section-8">插件</h2>

<p>安装插件有几种方式，我是使用的是 <a href="https://github.com/tpope/vim-pathogen">pathogen.vim</a> 的方式，方法：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class=""><span class="line">mkdir -p ~/.vim/autoload ~/.vim/bundle &amp;&amp; \
</span><span class="line">curl -LSso ~/.vim/autoload/pathogen.vim https://tpo.pe/pathogen.vim
</span><span class="line">vim ~/.vimrc</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>然后插入：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class=""><span class="line">execute pathogen#infect()
</span><span class="line">syntax on
</span><span class="line">filetype plugin indent on</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>下面推荐几个插件</p>

<h3 id="vim-abolishhttpsgithubcomtpopevim-abolish"><a href="https://github.com/tpope/vim-abolish">vim-abolish</a></h3>

<p>转换单词，示例：</p>

<ul>
  <li><code>crm</code>：把下划线风格转换成大驼峰风格（<code>foo_bar</code> 转换为 <code>FooBar</code>）</li>
  <li><code>crc</code>：把下划线风格转换成小驼峰风格（<code>foo_bar</code> 转换为 <code>fooBar</code>）</li>
  <li><code>crs</code>：把小驼峰风格转换成下划线风格（<code>fooBar</code> 转换为 <code>foo_bar</code>）</li>
  <li><code>cru</code>：转化为下划线分割全大写风格</li>
  <li><code>cr-</code>：转化为小写中划线分割风格</li>
  <li><code>cr.</code>：转化为小写点分割风格</li>
  <li><code>cr.</code>：转化为小写点分割风格</li>
  <li><code>cr.</code>：转化为小写点分割风格</li>
  <li>其他功能看文档吧</li>
</ul>

<p>安装</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class=""><span class="line">cd ~/.vim/bundle
</span><span class="line">git clone git://github.com/tpope/vim-abolish.git</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="ybiansmartimhttpsgithubcomybiansmartim"><a href="https://github.com/ybian/smartim">ybian/smartim</a></h3>

<p>自动切换输入法，保证回到普通模式的时候是英文输入法。</p>

<p>安装</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class=""><span class="line">cd ~/.vim/bundle
</span><span class="line">git clone git@github.com:ybian/smartim.git
</span><span class="line">im-select</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>如果不是 <code>com.apple.keylayout.US</code> 就要修改设置：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">vim ~/.vimrc</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>添加这行</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">let g:smartim_default = 'com.apple.keylayout.ABC'</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="section-9">最后</h2>

<p>Vim 要了解 Vim 的哲学，学 Vim 带来的收益我认为是<a href="https://zh.wikipedia.org/wiki/%E6%8C%87%E6%95%B8%E5%A2%9E%E9%95%B7">指数增长</a>的，但是绝对是值得的，虽然现在很少有人直接在终端用 Vim 写代码，但是几乎所有的编辑器都可以开启 Vim 模式了。</p>

<p>《Vim 实用技巧 第二版》这本书我还没看完，所以本篇文章会持续更新。</p>

<h2 id="section-10">参考链接</h2>

<ul>
  <li><a href="http://einverne.github.io/post/2015/05/vim-mode.html">Vim 多模式介绍</a></li>
  <li><a href="https://github.com/wsdjeg/vim-galore-zh_cn/blob/master/README.md">Vim 从入门到精通</a></li>
  <li><a href="http://yyq123.github.io/learn-vim/learn-vi-00-List.html">VIM学习笔记</a></li>
</ul>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[聊聊 9 月份的一些『节点』]]></title>
    <link href="https://blog.forecho.com/talk-about-some-things-in-september.html"/>
    <updated>2019-09-30T14:48:22+00:00</updated>
    <id>https://blog.forecho.com/talk-about-some-things-in-september</id>
    <content type="html"><![CDATA[<ul id="markdown-toc">
  <li><a href="#section" id="markdown-toc-section">引言</a></li>
  <li><a href="#section-1" id="markdown-toc-section-1">入职满一周年</a></li>
  <li><a href="#section-2" id="markdown-toc-section-2">29 岁生日</a></li>
  <li><a href="#section-3" id="markdown-toc-section-3">博客八周年</a></li>
  <li><a href="#section-4" id="markdown-toc-section-4">最后</a></li>
</ul>

<h2 id="section">引言</h2>

<p>又到了国庆的时候了，时间过得真快，截止到现在我还没确定用什么方式给祖国庆生。去年的国庆是带着父母去兔子家提亲。</p>

<p>好了，废话不多说，下面进入主题，聊聊这个月的一些『节点』。</p>

<!--more-->

<h2 id="section-1">入职满一周年</h2>

<p>9 月中旬正是我在现在这个公司待满一周年的时间，后来我发现我个人三次跳槽都是在 9 月份，还蛮巧合的。</p>

<p>虽然现在主要工作还是写 PHP，写业务需求，但是不同的是现在写代码要考虑性能问题了，因为真的会有并发操作，而且测试也会专门做性能测试。团队每周也都有技术分享，氛围也不错。</p>

<p>顺便分享一下在这家公司使用的一些 SAAS 服务：</p>

<ul>
  <li>Github 商业版以及围绕着 Github 周围的一些付费版服务真得不错，可惜因为一些原因我们要迁回自建的 GitLab 了，GitLab 能配置的功能还是有点弱。</li>
  <li>Slack 作为企业沟通工具真的挺好用的，国内的话钉钉还算可以用，但是企业微信的话，功能跟钉钉差距不是一点点。但是我们最近要切为企业微信了。</li>
  <li><a href="https://gsuite.google.com/">G Suite</a> 以及其周围生态也是很好用，国内的石墨和腾讯文档这种协作类型的文档都不行（比方说他们居然不支持自定义格式的文档）。可惜现在我们也不能用了。</li>
  <li><a href="https://www.atlassian.com/software">atlassian</a> 和 Github 配合使用，可以完成很多自动化的工作，国内 TAPD 这方面还是很弱。</li>
</ul>

<p>总得来说，国外的一些工作 SAAS 服务要完善的多，国内还是差很多。</p>

<h2 id="section-2">29 岁生日</h2>

<p>年纪越大越懒得过生日了，这次生日也只有我弟和一个大学室友记得，兔子和老妈都忘记了。跟去年一样，也是叫上弟弟和兔子一起吃了一顿牛肉火锅。明年就 30 岁了，到时候过生日要整点不一样的方式来度过。</p>

<p>后来给自己补了一个生日礼物：一个二手的 HHKB 键盘，为了更加完美的使用此键盘，最近是苦练 Vim。</p>

<h2 id="section-3">博客八周年</h2>

<p>虽然今年很忙，但是还是基本上遵守了承诺完成了每月至少两篇的更新。其他变化：</p>

<ul>
  <li>深度阅读专栏还没恢复。今年因为接了一个朋友的项目，业余时间忙的跟狗一样，而且这一忙就忙了 5 个月，立个 flag，以后我再做接任何单子，我就是狗。</li>
  <li>搞了一个博客联盟，通过这个认识了一些朋友，也发现了一些好的博客。</li>
</ul>

<p>目标：</p>

<ul>
  <li>先把项目收尾，早日恢复深度阅读专栏。</li>
  <li>继续保持每月至少两篇的更新量。</li>
</ul>

<p>Octopress 已经不维护了，而且写文章如果代码段里面有空行的话，生成网站的时候会报错，这个问题上次又碰到了。有时候真想换到 Hexo 上去，但是又一直在提醒自己要忍住，<strong>博客样式不重要，重要的是内容</strong>。</p>

<h2 id="section-4">最后</h2>

<p>家里也是推了一推书要看，也买了很多电子书，但是还是没时间看，最后我反思和总结，发现每次吃完饭的时候我都用看电视的习惯，后来去掉这个习惯之后，立马发现时间变多了，早点去洗澡，早点上床就有时间看书了。</p>

<p>另外想对自己说的是，不要做工作狂，工作太久，大脑也需要休息，学会适当的放松，比方说打打游戏什么的，也算是一种方式。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用 HHKB]]></title>
    <link href="https://blog.forecho.com/use-hhkb.html"/>
    <updated>2019-09-11T13:48:22+00:00</updated>
    <id>https://blog.forecho.com/use-hhkb</id>
    <content type="html"><![CDATA[<ul id="markdown-toc">
  <li><a href="#section" id="markdown-toc-section">引言</a>    <ul>
      <li><a href="#hhkb-" id="markdown-toc-hhkb-">HHKB 的键盘模式</a></li>
      <li><a href="#section-1" id="markdown-toc-section-1">使用感受</a></li>
    </ul>
  </li>
  <li><a href="#section-2" id="markdown-toc-section-2">切换中英文输入法利器</a></li>
  <li><a href="#cvim-" id="markdown-toc-cvim-">cVim 常用命令</a>    <ul>
      <li><a href="#section-3" id="markdown-toc-section-3">移动相关</a></li>
      <li><a href="#section-4" id="markdown-toc-section-4">链接相关</a></li>
      <li><a href="#section-5" id="markdown-toc-section-5">标签栏</a></li>
      <li><a href="#section-6" id="markdown-toc-section-6">其他</a></li>
    </ul>
  </li>
  <li><a href="#control-" id="markdown-toc-control-">跟 Control 相关的一些快捷键</a></li>
  <li><a href="#section-7" id="markdown-toc-section-7">最后</a></li>
</ul>

<h2 id="section">引言</h2>

<p>最近干了两件事情，让我的工作效率立马变得很慢了:</p>

<ul>
  <li>一是换了一把键盘，买了 HHKB Pro2。之前一直在用酷冷至尊的烈焰枪87茶轴键盘，换成 HHKB 之后键位好不习惯，感觉要重新练习打字了。😢</li>
  <li>二是把所有编辑器都安装了 vim 插件，开启了 vim 模式，甚至上 Chrome 浏览器都安装了 <a href="https://github.com/1995eaton/chromium-vim">cVim</a> 扩展，强迫自己学习 Vim。</li>
</ul>

<p>这篇文章主要是记录自己习惯 HHKB 的历程，希望对大家有用。之后再写篇文章记录重拾 Vim 的经验。 本片文章适用于 Mac 用户。</p>

<!--more-->

<h3 id="hhkb-">HHKB 的键盘模式</h3>

<p>HHKB 有 6 个 PID 开关可以切换模式，如果你是 Mac 用户只需要把 2，3 拨到 on 那边就可以了。</p>

<p>顺便说一下 HHKB 的 USB 插卡不能用来充电，可以用来插蓝牙鼠标的 USB 接收器。</p>

<h3 id="section-1">使用感受</h3>

<p>键盘比机械键盘要轻，因为没有机械键盘的钢板了，声音也比我之前用的茶轴小，手感还可以。</p>

<p>再说说不习惯的地方：</p>

<ul>
  <li>方向键是组合键，需要按 Fn 键 + 对应的按键。方向键可是我之前的重度按键，这点非常不习惯。</li>
  <li>` 键从左边换到右边去了，非常容易按错。</li>
  <li><code>caps lock</code> 键位换成 <code>control</code> 键了，这个要多练习才习惯。</li>
</ul>

<h2 id="section-2">切换中英文输入法利器</h2>

<p>Mac 切换输入法是一个让人头疼的事情，想实现『只用搜狗输入法，通过 <code>Shift</code> 切换中英文』的功能是一个非常麻烦的事情，默认的 ABC 输入法想删点也是非常麻烦的事情，有时候切换输入法都要反复按几次快捷键才能得到想要的。真羡慕纯字母语言国家的人，不用切换输入法。</p>

<p>以上让人头疼的问题，今天终于被我解决了，下载安装 <a href="https://github.com/utatti/kawa">utatti/kawa</a>，可以给指定的输入法设置指定的快捷键，非常的便捷，我终于可以放心的安装多个输入法了。</p>

<h2 id="cvim-">cVim 常用命令</h2>

<h3 id="section-3">移动相关</h3>

<ul>
  <li><code>d</code>: 向下滚动半页</li>
  <li><code>e</code>，<code>u</code>: 向上滚动半页</li>
  <li><code>G</code>: 滚到最底</li>
  <li><code>gg</code>: 滚到最顶</li>
  <li><code>j</code>，<code>s</code>: 向下滚动</li>
  <li><code>k</code>，<code>w</code>: 向上滚动</li>
  <li><code>gi</code>: 转到第一个输入框</li>
</ul>

<h3 id="section-4">链接相关</h3>

<ul>
  <li><code>f</code>: 激活所有的超链接，然后输入相应的字母就会打开这个链接（相当于点击超链接）</li>
  <li><code>F</code>: 激活所有的超链接，然后输入相应的字母就会在新窗口打开这个链接（相当于使用鼠标滚轴点击超链接）</li>
</ul>

<h3 id="section-5">标签栏</h3>

<ul>
  <li><code>gt</code>，<code>K</code>，<code>R</code>：转到下一个选项卡</li>
  <li><code>gT</code>，<code>J</code>，<code>E</code>：转到上一个选项卡</li>
  <li><code>g0</code>: 跳到第一个选项卡</li>
  <li><code>g$</code>: 跳到最后一个选项卡</li>
  <li><code>x</code>: 关闭当前选项卡</li>
  <li><code>X</code>: 打开刚关闭的选项卡</li>
  <li><code>H</code>, <code>S</code>: 退回</li>
  <li><code>L</code>, <code>D</code>: 前进</li>
  <li><code>&gt;</code>, <code>&lt;</code> : 前后移动标签位置</li>
</ul>

<h3 id="section-6">其他</h3>

<ul>
  <li><code>r</code>: 刷新</li>
  <li><code>gR</code>: 刷新 + 清空本地缓存</li>
  <li><code>a</code>: 新窗口打开 Google 搜索的结果</li>
  <li><code>/</code>: 搜索当前页面，相当于 <code>command</code> + <code>f</code>，然后按 <code>N</code> 跳转到下一个结果，按 <code>n</code> 跳转到上一个结果</li>
  <li><code>I</code>: 搜索历史记录</li>
  <li><code>b</code>: 搜索书签</li>
  <li><code>P</code>: 新窗口打开粘贴板搜索结果</li>
</ul>

<h2 id="control-">跟 Control 相关的一些快捷键</h2>

<ul>
  <li><code>Control + p</code> shell中上一个命令,或者 文本中移动到上一行</li>
  <li><code>Control + n</code> shell中下一个命令,或者 文本中移动到下一行</li>
  <li><code>Control + r</code> 往后搜索历史命令</li>
  <li><code>Control + s</code> 往前搜索历史命令</li>
  <li><code>Control + f</code> 光标前移</li>
  <li><code>Control + b</code> 光标后退</li>
  <li><code>Control + a</code> 到行首</li>
  <li><code>Control + e</code> 到行尾</li>
  <li><code>Control + d</code> 删除一个字符,删除一个字符，相当于通常的 Delete 键</li>
  <li><code>Control + h</code> 退格删除一个字符,相当于通常的 Backspace 键</li>
  <li><code>Control + u</code> 删除到行首</li>
  <li><code>Control + k</code> 删除到行尾</li>
  <li><code>Control + l</code> 类似 clear 命令效果</li>
  <li><code>Control + y</code> 粘贴</li>
</ul>

<h2 id="section-7">最后</h2>

<p>使用 HHKB 的第一个星期可以说是非常的痛苦😖，特别是方向键的使用上，一度让我有放弃的念头天。</p>

<p>一个星期之后有所改善，而且我发现我用方向键的频率也没以前那么高了。现在就开始苦练 Vim 和疯狂记快捷键中。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[函数式编程初探]]></title>
    <link href="https://blog.forecho.com/a-preliminary-study-on-functional-programming.html"/>
    <updated>2019-08-29T13:48:22+00:00</updated>
    <id>https://blog.forecho.com/a-preliminary-study-on-functional-programming</id>
    <content type="html"><![CDATA[<ul id="markdown-toc">
  <li><a href="#section" id="markdown-toc-section">引言</a></li>
  <li><a href="#section-1" id="markdown-toc-section-1">什么是函数式编程</a></li>
  <li><a href="#section-2" id="markdown-toc-section-2">入门示例</a></li>
  <li><a href="#section-3" id="markdown-toc-section-3">函数式编程有哪些特性</a>    <ul>
      <li><a href="#first-class-functions" id="markdown-toc-first-class-functions">头等函数（First-class functions）</a></li>
      <li><a href="#pure-functions-" id="markdown-toc-pure-functions-">纯函数（Pure functions）和 不可变状态</a></li>
    </ul>
  </li>
  <li><a href="#section-4" id="markdown-toc-section-4">尾递归优化</a></li>
  <li><a href="#section-5" id="markdown-toc-section-5">对比命令式编程比较</a></li>
  <li><a href="#section-6" id="markdown-toc-section-6">函数式编程优缺点</a>    <ul>
      <li><a href="#section-7" id="markdown-toc-section-7">优点</a></li>
      <li><a href="#section-8" id="markdown-toc-section-8">缺点</a></li>
    </ul>
  </li>
  <li><a href="#section-9" id="markdown-toc-section-9">最后</a></li>
  <li><a href="#section-10" id="markdown-toc-section-10">参考链接</a></li>
</ul>

<h2 id="section">引言</h2>

<h2 id="section-1">什么是函数式编程</h2>

<p>函数式编程是是一种编程范式，它将计算机运算视为函数运算，并且避免使用程序状态以及易变对象。其中，λ演算（lambda calculus）为该语言最重要的基础。而且，λ演算的函数可以接受函数当作输入（引数）和输出（传出值）。</p>

<!--more-->

<h2 id="section-2">入门示例</h2>

<p>输出前 25 个整数的平方值，PHP 语言：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="php"><span class="line"><span class="k">for</span> <span class="p">(</span><span class="nv">$i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="nv">$i</span> <span class="o">&lt;</span> <span class="mi">25</span><span class="p">;</span> <span class="nv">$i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">	<span class="k">echo</span> <span class="nv">$i</span> <span class="o">*</span> <span class="nv">$i</span> <span class="o">.</span> <span class="s1">&#39;,&#39;</span><span class="p">;</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line"><span class="c1">// 0,1,4,9,16,25,36,49,64,81,100,121,144,169,196,225,256,289,324,361,400,441,484,529,576,</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>如果是函数式编程语言:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="haskell"><span class="line"><span class="nf">print</span><span class="p">(</span><span class="n">map</span> <span class="p">(</span><span class="o">^</span><span class="mi">2</span><span class="p">)</span> <span class="p">[</span><span class="mi">0</span> <span class="o">..</span> <span class="mi">25</span><span class="p">])</span>
</span><span class="line"><span class="c1">-- [0,1,4,9,16,25,36,49,64,81,100,121,144,169,196,225,256,289,324,361,400,441,484,529,576,625]</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p><code>print</code> 是一个函数，<code>map</code> 也是一个函数。</p>

<h2 id="section-3">函数式编程有哪些特性</h2>

<h3 id="first-class-functions">头等函数（First-class functions）</h3>

<p><strong>头等函数</strong>指的是函数与其他数据类型一样，处于平等地位，可以赋值给其他变量，也可以作为参数，传入另一个函数，或者作为别的函数的返回值。PHP 支持头等函数。围绕这一特性的应用有：</p>

<ul>
  <li><strong>高阶函数（Higher-order function）</strong>：一个函数满足至少一个参数是函数或者返回一个函数时，我们可以称这个函数为高阶函数。</li>
</ul>

<p>高阶函数的示例一（参数是函数），返回一个数组中的偶数：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
</pre></td><td class="code"><pre><code class="php"><span class="line"><span class="nv">$input</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">];</span>
</span><span class="line"><span class="c1">// 匿名函数赋值给变量</span>
</span><span class="line"><span class="nv">$filterEven</span> <span class="o">=</span> <span class="k">function</span><span class="p">(</span><span class="nv">$item</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">    <span class="k">return</span> <span class="p">(</span><span class="nv">$item</span> <span class="o">%</span> <span class="mi">2</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span><span class="p">;</span>
</span><span class="line"><span class="p">};</span>
</span><span class="line"><span class="nv">$output</span> <span class="o">=</span> <span class="nb">array_filter</span><span class="p">(</span><span class="nv">$input</span><span class="p">,</span> <span class="nv">$filterEven</span><span class="p">);</span>
</span><span class="line"><span class="nb">print_r</span><span class="p">(</span><span class="nv">$output</span><span class="p">);</span>
</span><span class="line"><span class="c1">// 不使用变量，直接使用闭包的版本</span>
</span><span class="line"><span class="nv">$output</span> <span class="o">=</span> <span class="nb">array_filter</span><span class="p">(</span><span class="nv">$input</span><span class="p">,</span> <span class="k">function</span><span class="p">(</span><span class="nv">$item</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">    <span class="k">return</span> <span class="p">(</span><span class="nv">$item</span> <span class="o">%</span> <span class="mi">2</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span><span class="p">;</span>
</span><span class="line"><span class="p">});</span>
</span><span class="line"><span class="nb">print_r</span><span class="p">(</span><span class="nv">$output</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>高阶函数的示例二（返回函数），返回一个数组中的偶数：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
</pre></td><td class="code"><pre><code class="php"><span class="line"><span class="sd">/**</span>
</span><span class="line"><span class="sd"> * 返回一个大于n的匿名函数</span>
</span><span class="line"><span class="sd"> */</span>
</span><span class="line"><span class="k">function</span> <span class="nf">criteriaGreaterThan</span><span class="p">(</span><span class="nv">$min</span><span class="p">)</span>
</span><span class="line"><span class="p">{</span>
</span><span class="line">    <span class="k">return</span> <span class="k">function</span><span class="p">(</span><span class="nv">$item</span><span class="p">)</span> <span class="k">use</span> <span class="p">(</span><span class="nv">$min</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">        <span class="k">return</span> <span class="nv">$item</span> <span class="o">&gt;</span> <span class="nv">$min</span><span class="p">;</span>
</span><span class="line">    <span class="p">};</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line"><span class="nv">$input</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">];</span>
</span><span class="line"><span class="nv">$output</span> <span class="o">=</span> <span class="nb">array_filter</span><span class="p">(</span><span class="nv">$input</span><span class="p">,</span> <span class="nx">criteriaGreaterThan</span><span class="p">(</span><span class="mi">3</span><span class="p">));</span>
</span><span class="line"><span class="nb">print_r</span><span class="p">(</span><span class="nv">$output</span><span class="p">);</span> <span class="c1">// items &gt; 3</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>PHP 自带的高阶函数还有 <code>array_map</code>、<code>array_reduce</code>……</p>

<ul>
  <li><strong>柯里化 (Currying)</strong>：又译为卡瑞化或加里化，是把接受多个参数的函数变换成接受一个单一参数（最初函数的第一个参数）的函数，并且返回接受余下的参数而且返回结果的新函数的技术。（<a href="https://zh.wikipedia.org/wiki/%E6%9F%AF%E9%87%8C%E5%8C%96">来源</a>）</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
</pre></td><td class="code"><pre><code class="php"><span class="line"><span class="c1">// 柯里化之前</span>
</span><span class="line"><span class="k">function</span> <span class="nf">foo</span><span class="p">(</span><span class="nv">$x</span><span class="p">,</span> <span class="nv">$y</span><span class="p">,</span> <span class="nv">$z</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">	<span class="k">echo</span> <span class="nv">$x</span> <span class="o">+</span> <span class="nv">$y</span> <span class="o">+</span> <span class="nv">$z</span><span class="p">;</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line"><span class="k">echo</span> <span class="nx">foo</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">);</span> <span class="c1">// 6</span>
</span><span class="line"><span class="c1">// 柯里化之后</span>
</span><span class="line"><span class="k">function</span> <span class="nf">fnFoo</span><span class="p">(</span><span class="nv">$x</span><span class="p">,</span> <span class="nv">$y</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">	<span class="k">return</span> <span class="k">function</span><span class="p">(</span><span class="nv">$z</span><span class="p">)</span> <span class="k">use</span><span class="p">(</span><span class="nv">$x</span><span class="p">,</span> <span class="nv">$y</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">		<span class="nx">foo</span><span class="p">(</span><span class="nv">$x</span><span class="p">,</span> <span class="nv">$y</span><span class="p">,</span> <span class="nv">$z</span><span class="p">);</span>
</span><span class="line">	<span class="p">};</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line"><span class="nv">$bar</span> <span class="o">=</span> <span class="nx">fnFoo</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">);</span>
</span><span class="line"><span class="k">echo</span> <span class="nv">$bar</span><span class="p">(</span><span class="mi">3</span><span class="p">);</span> <span class="c1">// 6</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>使用场合（或者说是优点）：</p>

<ul>
  <li>参数复用</li>
  <li>延迟执行</li>
</ul>

<h3 id="pure-functions-">纯函数（Pure functions）和 不可变状态</h3>

<p><strong>纯函数</strong></p>

<p>若一个函数符合以下要求，则它可能被认为是纯函数（也可以叫表达式）：</p>

<ul>
  <li>不依赖外部：该函数的返回结果只依赖于它的参数。</li>
  <li>不改变外部：该函数不能有语义上可观察的函数副作用，诸如『触发事件』，使输出设备输出，或更改输出值以外物件的内容等。</li>
</ul>

<p>我们来看一个例子：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
</pre></td><td class="code"><pre><code class="js"><span class="line"><span class="c1">// 不是纯函数</span>
</span><span class="line"><span class="kr">const</span> <span class="nx">a</span> <span class="o">=</span> <span class="mi">1</span>
</span><span class="line"><span class="kr">const</span> <span class="nx">foo</span> <span class="o">=</span> <span class="p">(</span><span class="nx">b</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="nx">a</span> <span class="o">+</span> <span class="nx">b</span>
</span><span class="line"><span class="nx">foo</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span> <span class="c1">// =&gt; 3</span>
</span><span class="line"><span class="c1">// 纯函数</span>
</span><span class="line"><span class="kr">const</span> <span class="nx">a</span> <span class="o">=</span> <span class="mi">1</span>
</span><span class="line"><span class="kr">const</span> <span class="nx">bar</span> <span class="o">=</span> <span class="p">(</span><span class="nx">x</span><span class="p">,</span> <span class="nx">b</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="nx">x</span> <span class="o">+</span> <span class="nx">b</span>
</span><span class="line"><span class="nx">bar</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span> <span class="c1">// =&gt; 3</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p><code>foo</code> 函数不是一个纯函数，因为它返回的结果依赖于外部变量 a，我们在不知道 a 的值的情况下，并不能保证 <code>foo(2)</code> 的返回值是 3。
<code>bar</code> 的返回结果只依赖于它的参数 x 和 b，<code>bar(1, 2)</code> 永远是 3。</p>

<p>纯函数的好处是没有副作用，保证了无论在什么时候调用函数，对于相同的输入，总会得到相同的输出。</p>

<p><strong>不可变状态</strong></p>

<p>在纯函数式编程语言中，变量被赋值之后就不可以修改值了。在其他类型的语言中，变量往往用来保存一个临时状态。没有变量就不能写复杂的程序了吗？</p>

<p>事实上函数式程序是可以保存状态的，只不过它们用的不是变量，而是函数。状态保存在函数的参数中，也就是说在栈上。如果你需要保存一个状态一段时间并且时不时的修改它，那么你可以编写一个递归函数。举个例子：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
</pre></td><td class="code"><pre><code class="php"><span class="line"><span class="c1">//递归实现字符串翻转</span>
</span><span class="line"><span class="k">function</span> <span class="nf">reverseString</span><span class="p">(</span><span class="nv">$str</span><span class="p">)</span>
</span><span class="line"><span class="p">{</span>
</span><span class="line">	<span class="k">if</span><span class="p">(</span><span class="nb">strlen</span><span class="p">(</span><span class="nv">$str</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">		<span class="nx">reverseString</span><span class="p">(</span><span class="nb">substr</span><span class="p">(</span><span class="nv">$str</span><span class="p">,</span><span class="mi">1</span><span class="p">));</span>
</span><span class="line">	<span class="p">}</span>
</span><span class="line">	<span class="k">echo</span> <span class="nb">substr</span><span class="p">(</span><span class="nv">$str</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span>
</span><span class="line">	<span class="k">return</span><span class="p">;</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line"><span class="nx">reverseString</span><span class="p">(</span><span class="s1">&#39;forecho&#39;</span><span class="p">);</span> <span class="c1">// ohcerof</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="section-4">尾递归优化</h2>

<p>在函数式编程中，由于没有可变状态，for, while 这些循环都只能通过递归来实现，因此函数式编程严重依赖递归，如上面的代码示例。</p>

<p>我们知道递归的害处，那就是如果递归很深的话，栈受不了，并会导致性能大幅度下降。所以为了防止函数栈肆意扩展(导致栈溢出)，通常函数式语言的编译器都会实现尾调用优化。</p>

<h2 id="section-5">对比命令式编程比较</h2>

<ul>
  <li>命令式编程（imperative）：命令『机器』如何去做事情(how)，这样不管你想要的是什么(what)，它都会按照你的命令实现。</li>
  <li>声明式编程（Declarative）：告诉『机器』你想要的是什么(what)，让机器想出如何去做(how)。</li>
</ul>

<p>以生活中打车到王府井大街作为例子：</p>

<ul>
  <li>命令式编程：下个路口左转 -&gt; 下个有红灯的路口右转 -&gt; 前进100米 -&gt; 在下个路口掉头 -&gt; 前进1500米 -&gt; 到达王府井大街出租车停车区</li>
  <li>声明式编程：带我到王府井大街。</li>
</ul>

<p>SQL 是典型的声明式编程语言，示例</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="sql"><span class="line"><span class="k">SELECT</span> <span class="o">*</span> <span class="k">from</span> <span class="o">`</span><span class="k">user</span><span class="o">`</span> <span class="k">WHERE</span> <span class="o">`</span><span class="n">username</span><span class="o">`</span> <span class="o">=</span> <span class="s1">&#39;forecho&#39;</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>如果用命令式编程语言改写的话：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
</pre></td><td class="code"><pre><code class="php"><span class="line"><span class="nv">$users</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;forecho&#39;</span><span class="p">,</span> <span class="s1">&#39;cai&#39;</span><span class="p">];</span>
</span><span class="line"><span class="k">foreach</span> <span class="p">(</span><span class="nv">$users</span> <span class="k">as</span> <span class="nv">$key</span> <span class="o">=&gt;</span> <span class="nv">$user</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">	<span class="k">if</span><span class="p">(</span><span class="nv">$user</span> <span class="o">==</span> <span class="s2">&quot;forecho&quot;</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">     <span class="k">print</span><span class="p">(</span><span class="s2">&quot;find&quot;</span><span class="p">);</span>
</span><span class="line">     <span class="k">break</span><span class="p">;</span>
</span><span class="line">    <span class="p">}</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>除了 SQL，网页编程中用到的 HTML 和 CSS 也都属于声明式编程，函数式编程也属于声明式编程，但是他又不仅仅局限于声明式编程。</p>

<h2 id="section-6">函数式编程优缺点</h2>

<h3 id="section-7">优点</h3>

<ul>
  <li>代码简洁，开发快速</li>
  <li>接近自然语言，易于理解</li>
  <li>更方便的代码调试与 debug：因为是纯函数</li>
  <li>易于『并发编程』：无副作用</li>
  <li>代码的热升级</li>
</ul>

<h3 id="section-8">缺点</h3>

<ul>
  <li>执行效率并不高，性能比命令式编程差</li>
  <li>函数式编程用类似管道的方式来处理数据，因此不适合处理可变状态。</li>
  <li>函数式编程不适合做 IO 操作，也不适合写 GUI。</li>
</ul>

<h2 id="section-9">最后</h2>

<p>除了本篇文章介绍的函数式编程，其他常见编程范式都有响应式编程、命令式编程、面向对象编程、结构式编程等等。</p>

<p>需要说明的是在整理这篇文章的时候其实我本人并没有函数式编程的经验，所以这里只做了初步分享，等以后我有了经验再来分享。</p>

<h2 id="section-10">参考链接</h2>

<ul>
  <li><a href="https://en.wikipedia.org/wiki/Functional_programming">函数式编程</a></li>
  <li><a href="https://coolshell.cn/articles/10822.html">函数式编程</a></li>
  <li><a href="https://zh.wikipedia.org/wiki/%CE%9B%E6%BC%94%E7%AE%97">λ演算</a></li>
  <li><a href="https://phptherightway.com/pages/Functional-Programming.html">Functional Programming in PHP</a></li>
  <li><a href="https://juejin.im/post/5af13664f265da0ba266efcf">大佬，JavaScript 柯里化，了解一下？</a></li>
  <li><a href="https://wudaijun.com/2018/05/understand-functional-programing/">理解函数式编程</a></li>
</ul>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[参加 OpenResty 技术沙龙活动]]></title>
    <link href="https://blog.forecho.com/participate-in-the-openresty-technical-salon.html"/>
    <updated>2019-08-17T13:48:22+00:00</updated>
    <id>https://blog.forecho.com/participate-in-the-openresty-technical-salon</id>
    <content type="html"><![CDATA[<ul id="markdown-toc">
  <li><a href="#section" id="markdown-toc-section">引言</a></li>
  <li><a href="#section-1" id="markdown-toc-section-1">关键词</a>    <ul>
      <li><a href="#perl" id="markdown-toc-perl">Perl</a></li>
      <li><a href="#section-2" id="markdown-toc-section-2">阅读</a></li>
      <li><a href="#section-3" id="markdown-toc-section-3">编程</a></li>
      <li><a href="#openresty" id="markdown-toc-openresty">OpenResty</a></li>
      <li><a href="#section-4" id="markdown-toc-section-4">机器写代码</a></li>
      <li><a href="#section-5" id="markdown-toc-section-5">性能优化</a></li>
      <li><a href="#section-6" id="markdown-toc-section-6">其他</a></li>
    </ul>
  </li>
  <li><a href="#section-7" id="markdown-toc-section-7">最后</a></li>
</ul>

<p><img src="https://i.loli.net/2019/08/19/MnqFwm5hd4GQEAK.jpg" alt="" /></p>

<h2 id="section">引言</h2>

<p>起因是公司另外一个项目组老大说，章亦春（下文简称春哥）最近回国，他可以请春哥来公司做个小分享会。之前就对春哥略有耳闻，这次可以见他本人，也是难得的机会。</p>

<p>前两天听完春哥在公司的分享，两个小时他讲了很多他的编程经验和经历，听完收益很大，但是两个小时根本不够他讲，我也没听过瘾，于是又报名了他的<a href="https://www.huodongxing.com/event/7502793207200">《OpenResty 2019 深圳技术沙龙》</a>活动，又跑去听了他讲了 5 个小时。</p>

<p>这篇文章我主要是分享一下他分享的几个点（仅限于我能理解和认为的），以及我的收获。</p>

<blockquote>
  <p>如果你还不知道春哥是谁的话，可以先读读这篇文章<a href="http://www.ituring.com.cn/article/504549">《从抄书到开源之巅：章亦春的程序人生》</a></p>
</blockquote>

<!--more-->

<h2 id="section-1">关键词</h2>

<h3 id="perl">Perl</h3>

<p>春哥很早就接触了编程，说是1999年。而且他非常喜欢 <a href="https://www.perl.org/">Perl</a> 语言。到现在他也一直在用 Perl，甚至自己去实现了 Perl6 的方言，他称之为 <a href="https://doc.openresty.com.cn/en/fanlang/">Fanlang</a>，效率比 Perl6 要高，不开源。</p>

<p>这之前我一直以为 Perl 是一个过时的语言，没想到现在还有人用。这次听完分享会，也看了春哥现场写的代码，改变了我对 Perl 的印象，决定去学一学。</p>

<h3 id="section-2">阅读</h3>

<p>春哥抄书学习，大家都有听过了。抄书、抄代码学习的关键在于<strong>延缓阅读速度，不至遗漏每一个重要的细节：眼到，手到，心到。</strong></p>

<p>至于阅读，春哥有自己的一套方法，先阅读 30% 的内容，再猜测结论，然后接着阅读剩下的 70%。有时候猜测的结论与作者截然相反，即撞车的情况，但有时候会出现与自己的猜测一直的情况。</p>

<p>再有就是多读书，多读一手的书（即英文原版），远离二手知识，会影响独立思考。</p>

<h3 id="section-3">编程</h3>

<p>多学习和接触不同的语言，每一类语言都有自己的思维方式，除了可以开阔眼界，也可以开阔思维。春哥是推荐一个月学习一门语言。这里我推荐<a href="http://www.ituring.com.cn/book/829">《七周七语言：理解多种编程范型》</a> 这本书。</p>

<p>上面做的一类语言，可以理解为 PHP、JavaScript、Perl 等脚本语言算一类语言，<a href="https://www.haskell.org/">Haskell</a> 等函数式又算另一类语言。</p>

<p>春哥自己发明了很多小语种，每一种小语种做一个领域的事情。想在线体验这些语言可以访问 <a href="https://demo.openresty.com.cn/langs/fanlang">https://demo.openresty.com.cn/langs/fanlang</a> 体验，还有文档，弹出要输入 Email 的输入框，随便输入一个以 <code>@openresty.com</code> 结尾的邮箱即可。这些小语言的编译器都是春哥用上面提到的 Fanlang 实现的。</p>

<p>特别是给我们大家演示 <a href="https://doc.openresty.com.cn/en/navlang/">Navlang</a> 的时候，我被惊艳到了。Navlang 可以实现基于视觉的自动化操作，可以用来自动化测试、也可以用来写爬虫、还能用来写产品文档，这个时候还可以自动录音、截图。你只要负责写脚本，剩下的交给 Navlang 就可以了。<a href="https://doc.openresty.com.cn/en/mini-cdn-demo/ep01-intro.html">Mini CDN Demo</a> 的文档就是用这种方式实现的，反正我对这个语言最感兴趣了。听说他们 9 月份上线（付费使用），到时候可以想试试。</p>

<p>能写编译器的程序员不简单的，必须要有很强的能力。如果对编译器感兴趣的朋友，春哥推荐三个：</p>

<ul>
  <li>一本书：<a href="https://book.douban.com/subject/5288601/">《Engineering a Compiler, Second Edition》</a></li>
  <li>学好正则表达式</li>
  <li>学好 Linux 的 awk 命令，特别是多看看复杂的 awk 命令</li>
</ul>

<p>另外就是在学习软件开发的时候可以多看看源码或者参与开源项目，在参与开源项目之前可以先看看 <a href="https://book.douban.com/subject/1459281/">《The Practice of Programming》</a>。代码都是有气味的，在参与开源项目之前先把自己的气味修正，即多注重代码细节。</p>

<h3 id="openresty">OpenResty</h3>

<p>命令的由来，是因为当初 OpenAPI 这个词非常火，然后 <code>resty</code> 是来自于 <code>restful</code>。</p>

<p>第一代 OpenResty 是基于 Perl。第二代 OpenResty 是基于 Nginx + Lua。</p>

<p>现在几乎所有的 CND 服务都是基于 OpenResty，这得意与春哥在 <a href="https://www.cloudflare.com/">CloudFlare</a> 工作了四年多的原因。</p>

<h3 id="section-4">机器写代码</h3>

<p>春哥高中的时候就开始开发程序让机器解高考题。后来自己创业开公司也是因为想继续做这方面的事情，让机器写代码。这个挺有意思的，包括他讲述他在淘宝根据文档生成代码的故事，让我大开眼界。</p>

<h3 id="section-5">性能优化</h3>

<p>技术沙龙的时候讲了很多这方面的点，由于我没有从事这方面的工作，就记录以下几个关键点：</p>

<ul>
  <li>DTrace：动态追踪技术</li>
  <li><a href="https://sourceware.org/systemtap/">systemtap</a>：内核调试神器</li>
  <li><a href="http://www.brendangregg.com/">Brendan Gregg</a>：性能优化领域专家</li>
</ul>

<h3 id="section-6">其他</h3>

<ul>
  <li><a href="https://github.com/google/AFL">google/AFL</a>: 模糊测试工具</li>
  <li><a href="https://github.com/Olivine-Labs/busted">Olivine-Labs/busted</a>: Lua 单元测试</li>
  <li><a href="https://www.graphviz.org/">Graphviz</a>：一个开源的图可视化工具</li>
  <li><a href="https://github.com/openresty/programming-openresty">openresty/programming-openresty</a>：一本基于 OpenResty 编程的书</li>
</ul>

<h2 id="section-7">最后</h2>

<p>春哥再次让我体会到了，牛逼的程序员可以顶十个甚至百个普通的程序员。虽然春哥分享的经历我们能借鉴的不多（写编译器这种事情不是每个程序员都能做的），但是我们可以：</p>

<ul>
  <li>尝试他的阅读方法</li>
  <li>多接触不同类型的语言</li>
  <li>看他分享的两本书</li>
  <li>……</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MWS 开发 - 产品上传篇]]></title>
    <link href="https://blog.forecho.com/mws-product.html"/>
    <updated>2019-08-08T14:58:22+00:00</updated>
    <id>https://blog.forecho.com/mws-product</id>
    <content type="html"><![CDATA[<ul id="markdown-toc">
  <li><a href="#section" id="markdown-toc-section">引言</a></li>
  <li><a href="#section-1" id="markdown-toc-section-1">上传产品</a>    <ul>
      <li><a href="#section-2" id="markdown-toc-section-2">思路</a></li>
      <li><a href="#section-3" id="markdown-toc-section-3">实现</a></li>
    </ul>
  </li>
  <li><a href="#section-4" id="markdown-toc-section-4">注意事项</a>    <ul>
      <li><a href="#section-5" id="markdown-toc-section-5">编码问题</a></li>
      <li><a href="#section-6" id="markdown-toc-section-6">产品图片</a></li>
      <li><a href="#upcean" id="markdown-toc-upcean">UPC/EAN</a></li>
      <li><a href="#section-7" id="markdown-toc-section-7">关于产品描述</a></li>
      <li><a href="#sku-" id="markdown-toc-sku-">SKU 异常</a></li>
    </ul>
  </li>
  <li><a href="#section-8" id="markdown-toc-section-8">总结</a></li>
  <li><a href="#section-9" id="markdown-toc-section-9">相关文章</a></li>
</ul>

<h2 id="section">引言</h2>

<p>上次我们讲了 <a href="https://blog.forecho.com/mws-order.html">MWS 与订单相关的开发</a>，这次我们就来讲如何通过 MWS 接口上传产品。</p>

<!--more-->

<h2 id="section-1">上传产品</h2>

<p>上传产品有几种方式，此处我们采用的是提交类型为 <a href="https://docs.developer.amazonservices.com/en_US/feeds/Feeds_FeedType.html"><code>_POST_FLAT_FILE_LISTINGS_DATA_</code></a> 的 Feed 方式来上传产品。因为这种方式兼容性比较强。</p>

<h3 id="section-2">思路</h3>

<p>思路就是先生成一个包含产品信息的 csv 文件，再去请求 MWS 接口。</p>

<h3 id="section-3">实现</h3>

<p><a href="https://blog.forecho.com/mws-order.html">《订单篇》</a>我有提到一个 MWS PHP 的库，但是再开发产品上传功能的时候，被这个库坑惨了，由于作者不维护了，即使提了 PR 也没人合并，所以我 Fork 了一份，自己直接改了代码，修复了 bug，欢迎你们使用我的这个库 <a href="https://github.com/forecho/amazon-mws">forecho/amazon-mws</a>。</p>

<p><strong>安装库</strong></p>

<p>使用方式，先修改你项目的 <code>composer.json</code> 文件，添加如下代码</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
</pre></td><td class="code"><pre><code class=""><span class="line">"require": {
</span><span class="line">    // ...
</span><span class="line">    "mcs/amazon-mws": "*",
</span><span class="line">    // ...
</span><span class="line">},
</span><span class="line">"repositories": [
</span><span class="line">    {
</span><span class="line">        "name": "mcs/amazon-mws",
</span><span class="line">        "type": "git",
</span><span class="line">        "url": "git@github.com:forecho/amazon-mws.git"
</span><span class="line">    }
</span><span class="line">]</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>然后再执行如下命令：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">composer require mcs/amazon-mws</span></code></pre></td></tr></table></div></figure></notextile></div>

<blockquote>
  <p>如果在执行命令行的时候提示需要输入 <code>Token</code> 的话，解决办法就是去 GitHub 的 <a href="https://github.com/settings/tokens">Personal access tokens</a> 页面，点击 「Generate new token」 新建一个 Token，选择 <code>public_repo</code> ，然后就会得到一个 Token，然后去终端输入这个值就可以继续了。</p>
</blockquote>

<p>原来的库上传产品非常简单，更是没有提供 <code>_POST_FLAT_FILE_LISTINGS_DATA_</code> 的方式上传产品，我在这个 issue#30 - <a href="https://github.com/meertensm/amazon-mws/issues/30">Add Product Error</a> 的基础上加了此功能。</p>

<p><strong>上传产品的伪代码</strong></p>

<p>下面是我上传产品的伪代码，可以拿来参考：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
<span class="line-number">40</span>
<span class="line-number">41</span>
<span class="line-number">42</span>
<span class="line-number">43</span>
<span class="line-number">44</span>
<span class="line-number">45</span>
<span class="line-number">46</span>
<span class="line-number">47</span>
<span class="line-number">48</span>
<span class="line-number">49</span>
<span class="line-number">50</span>
<span class="line-number">51</span>
<span class="line-number">52</span>
<span class="line-number">53</span>
<span class="line-number">54</span>
<span class="line-number">55</span>
<span class="line-number">56</span>
<span class="line-number">57</span>
<span class="line-number">58</span>
<span class="line-number">59</span>
<span class="line-number">60</span>
<span class="line-number">61</span>
<span class="line-number">62</span>
<span class="line-number">63</span>
<span class="line-number">64</span>
<span class="line-number">65</span>
<span class="line-number">66</span>
<span class="line-number">67</span>
<span class="line-number">68</span>
<span class="line-number">69</span>
<span class="line-number">70</span>
<span class="line-number">71</span>
<span class="line-number">72</span>
<span class="line-number">73</span>
<span class="line-number">74</span>
<span class="line-number">75</span>
<span class="line-number">76</span>
<span class="line-number">77</span>
<span class="line-number">78</span>
<span class="line-number">79</span>
<span class="line-number">80</span>
<span class="line-number">81</span>
<span class="line-number">82</span>
<span class="line-number">83</span>
<span class="line-number">84</span>
<span class="line-number">85</span>
<span class="line-number">86</span>
<span class="line-number">87</span>
<span class="line-number">88</span>
<span class="line-number">89</span>
<span class="line-number">90</span>
<span class="line-number">91</span>
<span class="line-number">92</span>
<span class="line-number">93</span>
<span class="line-number">94</span>
<span class="line-number">95</span>
<span class="line-number">96</span>
<span class="line-number">97</span>
<span class="line-number">98</span>
<span class="line-number">99</span>
<span class="line-number">100</span>
<span class="line-number">101</span>
</pre></td><td class="code"><pre><code class="php"><span class="line"><span class="o">&lt;?</span><span class="nx">php</span>
</span><span class="line"><span class="k">public</span> <span class="k">function</span> <span class="nf">uploadAmazon</span><span class="p">(</span><span class="nx">string</span> <span class="nv">$productType</span><span class="p">,</span> <span class="nx">Product</span> <span class="nv">$product</span><span class="p">,</span> <span class="nx">int</span> <span class="nv">$productNode</span><span class="p">,</span> <span class="nv">$otherAttributes</span> <span class="o">=</span> <span class="p">[])</span>
</span><span class="line"><span class="p">{</span>
</span><span class="line">    <span class="nv">$client</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">MCS\MWSClient</span><span class="p">([</span>
</span><span class="line">        <span class="s1">&#39;Marketplace_Id&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;&#39;</span><span class="p">,</span>
</span><span class="line">        <span class="s1">&#39;Seller_Id&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;&#39;</span><span class="p">,</span>
</span><span class="line">        <span class="s1">&#39;Access_Key_ID&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;&#39;</span><span class="p">,</span>
</span><span class="line">        <span class="s1">&#39;Secret_Access_Key&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;&#39;</span><span class="p">,</span>
</span><span class="line">        <span class="s1">&#39;MWSAuthToken&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;&#39;</span> <span class="c1">// Optional. Only use this key if you are a third party user/developer</span>
</span><span class="line">    <span class="p">]);</span>
</span><span class="line">    <span class="nv">$amazonProducts</span> <span class="o">=</span> <span class="p">[];</span>
</span><span class="line">    <span class="nv">$postItems</span> <span class="o">=</span> <span class="p">[];</span>
</span><span class="line">    <span class="nv">$amazonProduct</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">AmazonMarketPlaceProduct</span><span class="p">();</span>
</span><span class="line">    <span class="k">if</span> <span class="p">(</span><span class="nv">$product</span><span class="o">-&gt;</span><span class="na">productSku</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">        <span class="nv">$amazonProduct</span><span class="o">-&gt;</span><span class="na">setSku</span><span class="p">(</span><span class="nv">$product</span><span class="o">-&gt;</span><span class="na">parent_sku</span><span class="p">)</span>
</span><span class="line">            <span class="o">-&gt;</span><span class="na">setFeedProductType</span><span class="p">(</span><span class="nv">$productType</span><span class="p">)</span>
</span><span class="line">            <span class="o">-&gt;</span><span class="na">setBrand</span><span class="p">(</span><span class="nv">$product</span><span class="o">-&gt;</span><span class="na">brand</span><span class="p">)</span>
</span><span class="line">            <span class="o">-&gt;</span><span class="na">setTitle</span><span class="p">(</span><span class="nv">$product</span><span class="o">-&gt;</span><span class="na">title</span><span class="p">)</span>
</span><span class="line">            <span class="o">-&gt;</span><span class="na">setManufacturer</span><span class="p">(</span><span class="nv">$product</span><span class="o">-&gt;</span><span class="na">manufacturer</span><span class="p">)</span>
</span><span class="line">            <span class="o">-&gt;</span><span class="na">setRecommendedBrowseNodes</span><span class="p">(</span><span class="nv">$productNode</span><span class="p">)</span>
</span><span class="line">            <span class="o">-&gt;</span><span class="na">setParentChild</span><span class="p">(</span><span class="s1">&#39;Parent&#39;</span><span class="p">)</span>
</span><span class="line">            <span class="o">-&gt;</span><span class="na">setOtherAttributes</span><span class="p">(</span><span class="nx">\app\core\helpers\ArrayHelper</span><span class="o">::</span><span class="na">clearValue</span><span class="p">(</span><span class="nv">$otherAttributes</span><span class="p">))</span>
</span><span class="line">            <span class="o">-&gt;</span><span class="na">setVariationTheme</span><span class="p">(</span><span class="nv">$product</span><span class="o">-&gt;</span><span class="na">variation_theme</span><span class="p">);</span>
</span><span class="line">        <span class="nb">array_push</span><span class="p">(</span><span class="nv">$amazonProducts</span><span class="p">,</span> <span class="nv">$amazonProduct</span><span class="p">);</span>
</span><span class="line">        <span class="nb">array_push</span><span class="p">(</span><span class="nv">$postItems</span><span class="p">,</span> <span class="nv">$amazonProduct</span><span class="o">-&gt;</span><span class="na">toArray</span><span class="p">(</span><span class="k">false</span><span class="p">));</span>
</span><span class="line">
</span><span class="line">        <span class="k">foreach</span> <span class="p">(</span><span class="nv">$product</span><span class="o">-&gt;</span><span class="na">productSku</span> <span class="k">as</span> <span class="nv">$productSku</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">            <span class="nv">$retailPrice</span> <span class="o">=</span> <span class="nv">$productSku</span><span class="o">-&gt;</span><span class="na">retail_price</span> <span class="o">?:</span> <span class="mi">0</span><span class="p">;</span>
</span><span class="line">            <span class="nv">$salePrice</span> <span class="o">=</span> <span class="nv">$productSku</span><span class="o">-&gt;</span><span class="na">sale_price</span> <span class="o">?:</span> <span class="mi">0</span><span class="p">;</span>
</span><span class="line">            <span class="nv">$saleDate</span> <span class="o">=</span> <span class="nv">$salePrice</span> <span class="o">?</span> <span class="nb">explode</span><span class="p">(</span><span class="s1">&#39;~&#39;</span><span class="p">,</span> <span class="nv">$productSku</span><span class="o">-&gt;</span><span class="na">sale_date</span><span class="p">)</span> <span class="o">:</span> <span class="p">[];</span>
</span><span class="line">
</span><span class="line">            <span class="nv">$_amazonProduct</span> <span class="o">=</span> <span class="k">clone</span> <span class="nv">$amazonProduct</span><span class="p">;</span>
</span><span class="line">            <span class="nv">$_amazonProduct</span><span class="o">-&gt;</span><span class="na">setSku</span><span class="p">(</span><span class="nv">$productSku</span><span class="o">-&gt;</span><span class="na">product_sku</span><span class="p">)</span>
</span><span class="line">                <span class="o">-&gt;</span><span class="na">setFeedProductType</span><span class="p">(</span><span class="nv">$productType</span><span class="p">)</span>
</span><span class="line">                <span class="o">-&gt;</span><span class="na">setBrand</span><span class="p">(</span><span class="nv">$product</span><span class="o">-&gt;</span><span class="na">brand</span><span class="p">)</span>
</span><span class="line">                <span class="o">-&gt;</span><span class="na">setTitle</span><span class="p">(</span><span class="nv">$product</span><span class="o">-&gt;</span><span class="na">title</span><span class="p">)</span>
</span><span class="line">                <span class="o">-&gt;</span><span class="na">setManufacturer</span><span class="p">(</span><span class="nv">$product</span><span class="o">-&gt;</span><span class="na">manufacturer</span><span class="p">)</span>
</span><span class="line">                <span class="o">-&gt;</span><span class="na">setPrice</span><span class="p">(</span><span class="nv">$retailPrice</span> <span class="o">&gt;</span> <span class="mi">0</span> <span class="o">?</span> <span class="nx">CurrencyConverter</span><span class="o">::</span><span class="na">CNYConverter</span><span class="p">(</span><span class="nv">$currency</span><span class="p">,</span> <span class="nv">$retailPrice</span><span class="p">)</span> <span class="o">:</span> <span class="s1">&#39;&#39;</span><span class="p">)</span>
</span><span class="line">                <span class="o">-&gt;</span><span class="na">setSalePrice</span><span class="p">(</span><span class="nv">$salePrice</span> <span class="o">&gt;</span> <span class="mi">0</span> <span class="o">?</span> <span class="nx">CurrencyConverter</span><span class="o">::</span><span class="na">CNYConverter</span><span class="p">(</span><span class="nv">$currency</span><span class="p">,</span> <span class="nv">$salePrice</span><span class="p">)</span> <span class="o">:</span> <span class="s1">&#39;&#39;</span><span class="p">)</span>
</span><span class="line">                <span class="o">-&gt;</span><span class="na">setProductId</span><span class="p">(</span><span class="nv">$amazonProductId</span><span class="p">)</span>
</span><span class="line">                <span class="o">-&gt;</span><span class="na">setSizeName</span><span class="p">(</span><span class="nv">$productSku</span><span class="o">-&gt;</span><span class="na">size</span> <span class="o">?:</span> <span class="s1">&#39;&#39;</span><span class="p">)</span>
</span><span class="line">                <span class="o">-&gt;</span><span class="na">setColorName</span><span class="p">(</span><span class="nv">$productSku</span><span class="o">-&gt;</span><span class="na">color</span> <span class="o">?:</span> <span class="s1">&#39;&#39;</span><span class="p">)</span>
</span><span class="line">                <span class="o">-&gt;</span><span class="na">setProductIdType</span><span class="p">(</span><span class="s1">&#39;EAN&#39;</span><span class="p">)</span>
</span><span class="line">                <span class="o">-&gt;</span><span class="na">setCurrency</span><span class="p">(</span><span class="nv">$currency</span><span class="p">)</span>
</span><span class="line">                <span class="o">-&gt;</span><span class="na">setConditionType</span><span class="p">(</span><span class="s1">&#39;New&#39;</span><span class="p">)</span>
</span><span class="line">                <span class="o">-&gt;</span><span class="na">setWeight</span><span class="p">(</span><span class="nv">$product</span><span class="o">-&gt;</span><span class="na">weight</span><span class="p">)</span>
</span><span class="line">                <span class="o">-&gt;</span><span class="na">setQuantity</span><span class="p">(</span><span class="nv">$product</span><span class="o">-&gt;</span><span class="na">quantity</span><span class="p">)</span>
</span><span class="line">                <span class="o">-&gt;</span><span class="na">setParentChild</span><span class="p">(</span><span class="s1">&#39;Child&#39;</span><span class="p">)</span>
</span><span class="line">                <span class="o">-&gt;</span><span class="na">setParentSku</span><span class="p">(</span><span class="nv">$parentSku</span><span class="p">)</span>
</span><span class="line">                <span class="o">-&gt;</span><span class="na">setSaleFromDate</span><span class="p">(</span><span class="nb">count</span><span class="p">(</span><span class="nv">$saleDate</span><span class="p">)</span> <span class="o">==</span> <span class="mi">2</span> <span class="o">?</span> <span class="nv">$saleDate</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">:</span> <span class="s1">&#39;&#39;</span><span class="p">)</span>
</span><span class="line">                <span class="o">-&gt;</span><span class="na">setSaleEndDate</span><span class="p">(</span><span class="nb">count</span><span class="p">(</span><span class="nv">$saleDate</span><span class="p">)</span> <span class="o">==</span> <span class="mi">2</span> <span class="o">?</span> <span class="nv">$saleDate</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">:</span> <span class="s1">&#39;&#39;</span><span class="p">)</span>
</span><span class="line">                <span class="o">-&gt;</span><span class="na">setVariationTheme</span><span class="p">(</span><span class="nv">$product</span><span class="o">-&gt;</span><span class="na">variation_theme</span><span class="p">)</span>
</span><span class="line">                <span class="o">-&gt;</span><span class="na">setKeywords</span><span class="p">(</span><span class="nv">$product</span><span class="o">-&gt;</span><span class="na">search_keyword</span><span class="p">)</span>
</span><span class="line">                <span class="o">-&gt;</span><span class="na">setRecommendedBrowseNodes</span><span class="p">(</span><span class="nv">$productNode</span><span class="p">)</span>
</span><span class="line">                <span class="o">-&gt;</span><span class="na">setBulletPoint</span><span class="p">(</span><span class="nv">$features</span><span class="p">)</span>
</span><span class="line">                <span class="o">-&gt;</span><span class="na">setDescription</span><span class="p">(</span><span class="nv">$product</span><span class="o">-&gt;</span><span class="na">description</span><span class="p">)</span>
</span><span class="line">                <span class="o">-&gt;</span><span class="na">setOtherAttributes</span><span class="p">(</span><span class="nv">$otherAttributes</span><span class="p">)</span>
</span><span class="line">                <span class="o">-&gt;</span><span class="na">setImage</span><span class="p">(</span><span class="nv">$productSku</span><span class="o">-&gt;</span><span class="na">images</span><span class="p">);</span>
</span><span class="line">            <span class="nb">array_push</span><span class="p">(</span><span class="nv">$amazonProducts</span><span class="p">,</span> <span class="nv">$_amazonProduct</span><span class="p">);</span>
</span><span class="line">            <span class="nb">array_push</span><span class="p">(</span><span class="nv">$postItems</span><span class="p">,</span> <span class="nv">$_amazonProduct</span><span class="o">-&gt;</span><span class="na">toArray</span><span class="p">(</span><span class="k">false</span><span class="p">));</span>
</span><span class="line">        <span class="p">}</span>
</span><span class="line">    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class="line">        <span class="nv">$retailPrice</span> <span class="o">=</span> <span class="nv">$product</span><span class="o">-&gt;</span><span class="na">price</span> <span class="o">?:</span> <span class="mi">0</span><span class="p">;</span>
</span><span class="line">        <span class="nv">$salePrice</span> <span class="o">=</span> <span class="nv">$product</span><span class="o">-&gt;</span><span class="na">sale_price</span> <span class="o">?:</span> <span class="mi">0</span><span class="p">;</span>
</span><span class="line">        <span class="nv">$saleDate</span> <span class="o">=</span> <span class="nv">$salePrice</span> <span class="o">?</span> <span class="nb">explode</span><span class="p">(</span><span class="s1">&#39;~&#39;</span><span class="p">,</span> <span class="nv">$product</span><span class="o">-&gt;</span><span class="na">sale_date</span><span class="p">)</span> <span class="o">:</span> <span class="p">[];</span>
</span><span class="line">
</span><span class="line">        <span class="nv">$amazonProduct</span><span class="o">-&gt;</span><span class="na">setSku</span><span class="p">(</span><span class="nv">$parentSku</span><span class="p">)</span>
</span><span class="line">            <span class="o">-&gt;</span><span class="na">setFeedProductType</span><span class="p">(</span><span class="nv">$productType</span><span class="p">)</span>
</span><span class="line">            <span class="o">-&gt;</span><span class="na">setBrand</span><span class="p">(</span><span class="nv">$product</span><span class="o">-&gt;</span><span class="na">brand</span><span class="p">)</span>
</span><span class="line">            <span class="o">-&gt;</span><span class="na">setTitle</span><span class="p">(</span><span class="nv">$product</span><span class="o">-&gt;</span><span class="p">{</span><span class="nv">$titleAttribute</span><span class="p">})</span>
</span><span class="line">            <span class="o">-&gt;</span><span class="na">setManufacturer</span><span class="p">(</span><span class="nv">$product</span><span class="o">-&gt;</span><span class="na">manufacturer</span><span class="p">)</span>
</span><span class="line">            <span class="o">-&gt;</span><span class="na">setPrice</span><span class="p">(</span><span class="nv">$retailPrice</span> <span class="o">&gt;</span> <span class="mi">0</span> <span class="o">?</span> <span class="nx">CurrencyConverter</span><span class="o">::</span><span class="na">CNYConverter</span><span class="p">(</span><span class="nv">$currency</span><span class="p">,</span> <span class="nv">$retailPrice</span><span class="p">)</span> <span class="o">:</span> <span class="s1">&#39;&#39;</span><span class="p">)</span>
</span><span class="line">            <span class="o">-&gt;</span><span class="na">setSalePrice</span><span class="p">(</span><span class="nv">$salePrice</span> <span class="o">&gt;</span> <span class="mi">0</span> <span class="o">?</span> <span class="nx">CurrencyConverter</span><span class="o">::</span><span class="na">CNYConverter</span><span class="p">(</span><span class="nv">$currency</span><span class="p">,</span> <span class="nv">$salePrice</span><span class="p">)</span> <span class="o">:</span> <span class="s1">&#39;&#39;</span><span class="p">)</span>
</span><span class="line">            <span class="o">-&gt;</span><span class="na">setProductId</span><span class="p">(</span><span class="nv">$amazonProductId</span><span class="p">)</span>
</span><span class="line">            <span class="o">-&gt;</span><span class="na">setProductIdType</span><span class="p">(</span><span class="s1">&#39;EAN&#39;</span><span class="p">)</span>
</span><span class="line">            <span class="o">-&gt;</span><span class="na">setCurrency</span><span class="p">(</span><span class="nv">$currency</span><span class="p">)</span>
</span><span class="line">            <span class="o">-&gt;</span><span class="na">setConditionType</span><span class="p">(</span><span class="s1">&#39;New&#39;</span><span class="p">)</span>
</span><span class="line">            <span class="o">-&gt;</span><span class="na">setWeight</span><span class="p">(</span><span class="nv">$product</span><span class="o">-&gt;</span><span class="na">weight</span><span class="p">)</span>
</span><span class="line">            <span class="o">-&gt;</span><span class="na">setQuantity</span><span class="p">(</span><span class="nv">$product</span><span class="o">-&gt;</span><span class="na">quantity</span><span class="p">)</span>
</span><span class="line">            <span class="o">-&gt;</span><span class="na">setSaleFromDate</span><span class="p">(</span><span class="nb">count</span><span class="p">(</span><span class="nv">$saleDate</span><span class="p">)</span> <span class="o">==</span> <span class="mi">2</span> <span class="o">?</span> <span class="nv">$saleDate</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">:</span> <span class="s1">&#39;&#39;</span><span class="p">)</span>
</span><span class="line">            <span class="o">-&gt;</span><span class="na">setSaleEndDate</span><span class="p">(</span><span class="nb">count</span><span class="p">(</span><span class="nv">$saleDate</span><span class="p">)</span> <span class="o">==</span> <span class="mi">2</span> <span class="o">?</span> <span class="nv">$saleDate</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">:</span> <span class="s1">&#39;&#39;</span><span class="p">)</span>
</span><span class="line">            <span class="o">-&gt;</span><span class="na">setKeywords</span><span class="p">(</span><span class="nv">$product</span><span class="o">-&gt;</span><span class="na">search_keyword</span><span class="p">)</span>
</span><span class="line">            <span class="o">-&gt;</span><span class="na">setRecommendedBrowseNodes</span><span class="p">(</span><span class="nv">$productNode</span><span class="p">)</span>
</span><span class="line">            <span class="o">-&gt;</span><span class="na">setBulletPoint</span><span class="p">(</span><span class="nv">$features</span><span class="p">)</span>
</span><span class="line">            <span class="o">-&gt;</span><span class="na">setDescription</span><span class="p">(</span><span class="nv">$product</span><span class="o">-&gt;</span><span class="na">description</span><span class="p">)</span>
</span><span class="line">            <span class="o">-&gt;</span><span class="na">setOtherAttributes</span><span class="p">(</span><span class="nv">$otherAttributes</span><span class="p">)</span>
</span><span class="line">            <span class="o">-&gt;</span><span class="na">setImage</span><span class="p">(</span><span class="nv">$product</span><span class="o">-&gt;</span><span class="na">images</span><span class="p">);</span>
</span><span class="line">        <span class="nb">array_push</span><span class="p">(</span><span class="nv">$amazonProducts</span><span class="p">,</span> <span class="nv">$amazonProduct</span><span class="p">);</span>
</span><span class="line">        <span class="nb">array_push</span><span class="p">(</span><span class="nv">$postItems</span><span class="p">,</span> <span class="nv">$amazonProduct</span><span class="o">-&gt;</span><span class="na">toArray</span><span class="p">(</span><span class="k">false</span><span class="p">));</span>
</span><span class="line">    <span class="p">}</span>
</span><span class="line">
</span><span class="line">    <span class="c1">// You can also submit an array of MWSProduct objects</span>
</span><span class="line">    <span class="nv">$feed</span> <span class="o">=</span> <span class="nv">$client</span><span class="o">-&gt;</span><span class="na">postProduct</span><span class="p">(</span>
</span><span class="line">        <span class="nv">$amazonProducts</span><span class="p">,</span>
</span><span class="line">        <span class="s1">&#39;fptcustomcustom&#39;</span><span class="p">,</span>
</span><span class="line">        <span class="s1">&#39;2019.0501&#39;</span><span class="p">,</span>
</span><span class="line">        <span class="s1">&#39;SE9NRV9MSUdIVElOR19BTkRfTEFNUFM=&#39;</span>
</span><span class="line">    <span class="p">);</span>
</span><span class="line">    <span class="nx">Yii</span><span class="o">::</span><span class="na">info</span><span class="p">(</span><span class="nv">$postItems</span><span class="p">,</span> <span class="nv">$product</span><span class="o">-&gt;</span><span class="na">id</span> <span class="o">.</span> <span class="s1">&#39;上传产品数据&#39;</span><span class="p">);</span>
</span><span class="line">    <span class="k">return</span> <span class="nv">$feed</span><span class="p">;</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>上传产品是一个异步接口，提交成功会返回如下数据:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
</pre></td><td class="code"><pre><code class="php"><span class="line"><span class="p">[</span>
</span><span class="line">  <span class="s1">&#39;FeedSubmissionId&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;xxxxxxx&#39;</span><span class="p">,</span> <span class="c1">// 一串数字</span>
</span><span class="line">  <span class="s1">&#39;FeedType&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;_POST_FLAT_FILE_LISTINGS_DATA_&#39;</span><span class="p">,</span>
</span><span class="line">  <span class="s1">&#39;SubmittedDate&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;2019-08-08T10:15:29+00:00&#39;</span><span class="p">,</span>
</span><span class="line">  <span class="s1">&#39;FeedProcessingStatus&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;_SUBMITTED_&#39;</span><span class="p">,</span>
</span><span class="line"><span class="p">]</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>要想获取结果，需要过两分钟之后再去请求另外一个接口，你可以用下面方法实现：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="php"><span class="line"><span class="nv">$client</span><span class="o">-&gt;</span><span class="na">GetFeedSubmissionResult</span><span class="p">(</span><span class="nv">$FeedSubmissionId</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>如果成功返回的信息是了类似这样的：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="php"><span class="line"><span class="nx">Feed</span> <span class="nx">Processing</span> <span class="nx">Summary</span><span class="o">:</span>
</span><span class="line">	<span class="nx">Number</span> <span class="nx">of</span> <span class="nx">records</span> <span class="nx">processed</span>		<span class="mi">2</span>
</span><span class="line">	<span class="nx">Number</span> <span class="nx">of</span> <span class="nx">records</span> <span class="nx">successful</span>		<span class="mi">2</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>如果失败就类似这样的：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
</pre></td><td class="code"><pre><code class="php"><span class="line"><span class="nx">Feed</span> <span class="nx">Processing</span> <span class="nx">Summary</span><span class="o">:</span>
</span><span class="line">	<span class="nx">Number</span> <span class="nx">of</span> <span class="nx">records</span> <span class="nx">processed</span>		<span class="mi">4</span>
</span><span class="line">	<span class="nx">Number</span> <span class="nx">of</span> <span class="nx">records</span> <span class="nx">successful</span>		<span class="mi">3</span>
</span><span class="line">
</span><span class="line"><span class="nx">original</span><span class="o">-</span><span class="nx">record</span><span class="o">-</span><span class="nx">number</span>	<span class="nx">sku</span>	<span class="nx">error</span><span class="o">-</span><span class="nx">code</span>	<span class="nx">error</span><span class="o">-</span><span class="nx">type</span>	<span class="nx">error</span><span class="o">-</span><span class="nx">message</span>
</span><span class="line"><span class="mi">14</span>	<span class="mi">3</span><span class="nx">uC000670</span><span class="o">-</span><span class="nx">Random</span> <span class="nx">combination</span><span class="o">-</span><span class="nx">Large</span><span class="o">*</span><span class="mi">2</span><span class="o">+</span><span class="nx">Sma</span>	<span class="mi">90118</span>	<span class="nx">Error</span>	<span class="nx">The</span> <span class="nx">item_sku</span> <span class="nx">field</span> <span class="nx">contains</span> <span class="nx">an</span> <span class="nx">invalid</span> <span class="nx">value</span><span class="o">:</span> <span class="mi">3</span><span class="nx">uC000670</span><span class="o">-</span><span class="nx">Random</span> <span class="nx">combination</span><span class="o">-</span><span class="nx">Large</span><span class="o">*</span><span class="mi">2</span><span class="o">+</span><span class="nx">Small</span><span class="o">*</span><span class="mf">2.</span> <span class="nx">The</span> <span class="nx">value</span> <span class="nx">exceeds</span> <span class="nx">the</span> <span class="nx">maximum</span> <span class="nx">number</span> <span class="nx">of</span> <span class="nx">bytes</span> <span class="nx">allowed</span><span class="o">:</span> <span class="mf">40.</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="section-4">注意事项</h2>

<h3 id="section-5">编码问题</h3>

<p>我最开始上传产品的时候，产品上传成功了，但是去亚马逊后台看，产品是乱码的，解决这个问题花了我几天时间。导致这个问题出现的原因就是编码问题。</p>

<p><a href="https://github.com/meertensm/amazon-mws/blob/master/src/MWSClient.php#L1221">meertensm/amazon-mws</a> 提交接口的时候使用的是 <code>iso-8859-1</code> 编码，这意味着上传 CSV 文件的时候，要先把内容转成对应的格式。问题是<strong>并非所有的亚马逊站点都是用这个编码，日本就是用 <code>UTF-8</code> 编码的</strong>，所以之前上传产品到日本站点总算乱码。听说中国站点也是 <code>UTF-8</code> 编码，不过这已经不重要了，因为亚马逊这部分业务已经退出中国了。<strong>此问题我已经在 <a href="https://github.com/forecho/amazon-mws">forecho/amazon-mws</a> 解决</strong>，你可以不用关心此细节。</p>

<p>另外一个需要注意的编码问题就是，在使用 <code>GetFeedSubmissionResult()</code> 方法获取刊登结果时候，日本站返回的数据是 <code>Shift-JIS</code> 的，这个需要你手动转一下：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="php"><span class="line"><span class="k">if</span> <span class="p">(</span><span class="nv">$isJp</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">    <span class="nv">$string</span> <span class="o">=</span> <span class="nb">mb_convert_encoding</span><span class="p">(</span><span class="nv">$string</span><span class="p">,</span> <span class="s1">&#39;UTF-8&#39;</span><span class="p">,</span> <span class="s1">&#39;Shift-JIS&#39;</span><span class="p">)</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="section-6">产品图片</h3>

<p>上传产品的时候图片我们是给的图片地址链接，如果图片放在国内，很容易出现亚马逊下载产品图片超时导致的刊登失败。所以我们要想办法把我们的图片存到海外，比方说使用阿里的 OSS。</p>

<p>如果因为用了阿里 OSS 的海外 Bucket，导致我们在使用的时候上传图片很慢，可以了解一下这个<a href="https://yq.aliyun.com/articles/688039">《OSS全球传输加速开启公测，助力企业业务全地域覆盖》</a>。</p>

<h3 id="upcean">UPC/EAN</h3>

<p>这个可以通过购买生成器生成 UPC 和 EAN，也可以购买合法 UPC/EAN。生成器生成的容易导致上传产品失败，换一个重新上传产品即可。有时候发现你上传的产品出现别人的图片，不要慌，这个就是因为 UPC/EAN 跟别人重复导致的，换一个重新上传产品即可。</p>

<h3 id="section-7">关于产品描述</h3>

<p>产品描述除了不能大于 2000 字符串之外，还不能使用除了 <code>&lt;br&gt;</code>（换行） 和 <code>&lt;b&gt;&lt;/b&gt;</code>（加粗） 之外的 HTML 标签。</p>

<h3 id="sku-">SKU 异常</h3>

<p>出现上传产品失败，错误信息 SKU 异常的，如 8008 错误，这种情况一般也是因为 UPC/EAN 有问题导致的，我们可以把异常的 SKU 的 UPC/EAN 在 <a href="http://gepir.gs1.org/index.php/search-by-gtin">美国统一代码委员会网站
</a> 查询，如果查询到有结果，说明你就不能使用此 UPC/EAN，换一个 UPC/EAN 重新上传即可。</p>

<h2 id="section-8">总结</h2>

<p>上传产品也是比较核心的功能，开发此功能比我开发同步订单花了更多时间，踩了不少坑，现在分享出来，让大家少走一点弯路。</p>

<h2 id="section-9">相关文章</h2>

<ul>
  <li><a href="https://blog.forecho.com/mws-order.html">《MWS 开发 - 订单篇》</a></li>
  <li><a href="https://blog.forecho.com/mws-product.html">《MWS 开发 - 产品上传篇》</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[GetYii 是如何防止垃圾内容]]></title>
    <link href="https://blog.forecho.com/How-does-GetYii-prevent-spam.html"/>
    <updated>2019-07-30T14:58:22+00:00</updated>
    <id>https://blog.forecho.com/How-does-GetYii-prevent-spam</id>
    <content type="html"><![CDATA[<h2 id="section">引言</h2>

<p>4 年多前 <a href="https://www.yiiframework.com/">Yii</a> 推出了 2.0 测试版，正好赶上年底，工作不忙，于是我抱着学习的态度写了一个开源论坛，那就是 <a href="https://github.com/iiyii/getyii">GetYii</a>。虽然后来没怎么维护了，但是还是会每天去逛逛。</p>

<p>最近发现有人在 GetYii 上发垃圾内容，灰产广告。这就不能忍了，这篇文章我就分享一下我是如何与他们『斗争』的。</p>

<!--more-->

<h2 id="section-1">方案</h2>

<p>为了防止垃圾评论我实施了以下方案，方案按照时间先后顺序排名。</p>

<h3 id="section-2">删帖冻结用户账号</h3>

<p>因为 GetYii 注册没有做邮箱验证，注册门槛非常低，这也给 Spammer 提供了便利。我也懒得再加上注册验证邮箱的步骤了。于是我就采用了采用了删帖同时冻结用户账号的操作，这个是最简单的方案了，但也是最累的方案了。而且不能根治。Spammer 能做到大量发放垃圾广告估计也是写了脚本。很快我也放弃了这种方案。</p>

<h3 id="section-3">发帖验证码 &amp;&amp; 设置新注册用户一定时长才可以发帖</h3>

<p>Yii2 自带验证码功能，而且开发一个『设置新注册用户一定时长才可以发帖』功能也很快，这比开发『注册验证邮箱』实现起来快的多。但是这种方案非常的简单粗暴，很不友好，虽然现在 GetYii 发帖人少了，但是我也不愿意牺牲这种体验，很快我也放弃了这种方案。</p>

<h3 id="spam-">开发识别 Spam 的扩展</h3>

<p>反 span，用的最多的方案应该是<a href="https://zh.wikipedia.org/wiki/%E8%B2%9D%E8%91%89%E6%96%AF%E5%9E%83%E5%9C%BE%E9%83%B5%E4%BB%B6%E9%81%8E%E6%BF%BE">贝叶斯垃圾邮件过滤</a>，网上也有一些基于反垃圾内容的 SAAS 系统，前者对于我这个小网站，有点杀鸡用牛刀，后者因为要收费，对于小网站也没必要。</p>

<p>于是我就自己写了一个简单的反垃圾程序 -  <a href="https://github.com/yiier/yii2-anti-spam">yiier/yii2-anti-spam</a>，思路很简单，特点在于支持两种类型匹配：</p>

<ul>
  <li>类型一：简单的模糊匹配。写一个敏感词库，模糊匹配内容是否包含在内。比如要匹配『军车』，敏感词写入『军{2}车』，那么类似『军XX车』的字符都能被匹配到。</li>
  <li>类型一：相似度匹配。类似 PHP 的 <a href="https://php.net/manual/zh/function.similar-text.php">similar_text</a>，是否好用待考察。</li>
</ul>

<p>目前 GetYii 就是用的这种方案，把『发帖验证码 &amp;&amp; 设置新注册用户一定时长才可以发帖』方案去掉了，前期遇到垃圾内容先加敏感词库，再删内容，虽然刚开始辛苦点，但是有明显效果。</p>

<h3 id="section-4">限制发帖频率</h3>

<p>虽然上个方案已经有一点效果了，但是我又想到了可以限制发帖频率来限制 Spammer 发垃圾内容刷屏现象，因为正常用户是不会频繁发帖的，比方说现在 GetYii 就限制了发帖间隔为 1 个小时。</p>

<p>后期还可以检测到频繁发帖的用户进行屏蔽 IP 的方案。</p>

<h2 id="section-5">总结</h2>

<p>想不到对于 GetYii 这么小流量的网站也会被 Spammer 盯上，但是如果想做个社区，此功能是必不可少的一部分。此外还有用户可以屏蔽其他用户功能。</p>

<h2 id="section-6">参考链接</h2>

<ul>
  <li><a href="https://ruby-china.org/topics/23718">一个简单的评论过滤系统的实现</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MWS 开发 - 订单篇]]></title>
    <link href="https://blog.forecho.com/mws-order.html"/>
    <updated>2019-07-08T14:58:22+00:00</updated>
    <id>https://blog.forecho.com/mws-order</id>
    <content type="html"><![CDATA[<ul id="markdown-toc">
  <li><a href="#section" id="markdown-toc-section">引言</a></li>
  <li><a href="#sdk" id="markdown-toc-sdk">SDK</a></li>
  <li><a href="#section-1" id="markdown-toc-section-1">订单相关的功能</a>    <ul>
      <li><a href="#section-2" id="markdown-toc-section-2">同步订单</a></li>
      <li><a href="#section-3" id="markdown-toc-section-3">发货</a></li>
    </ul>
  </li>
  <li><a href="#section-4" id="markdown-toc-section-4">总结</a></li>
  <li><a href="#section-5" id="markdown-toc-section-5">相关文章</a></li>
</ul>

<h2 id="section">引言</h2>

<p>最近这几个月都在帮一个朋友在开发亚马逊 ERP 系统，使用了 <a href="http://docs.developer.amazonservices.com/en_US/dev_guide/index.html">MWS 接口</a>，自己一路摸索，花了不少时间和精力，现在想把这些经验记录分享出来，让大家少走一些弯路。</p>

<p>这将是一系列文章，本篇主要讲与订单相关的接口。</p>

<!--more-->

<h2 id="sdk">SDK</h2>

<p>MWS 的接口文档在<a href="http://docs.developer.amazonservices.com/en_US/orders-2013-09-01/Orders_Overview.html">这里</a>（中文文档不是最新的）查看，但是官方给的 PHP SDK 非常的老了，而且每个功能模块还是分散的，于是我就去 Github 找到了 Star 最多的一个，即 <a href="https://github.com/meertensm/amazon-mws">meertensm/amazon-mws</a>，好用是好用，但是我使用之前没发现作者好像没维护了，有一些坑在里面。</p>

<p>好在这些坑我都帮你踩过了，你接着往下看就可以了。</p>

<h2 id="section-1">订单相关的功能</h2>

<h3 id="section-2">同步订单</h3>

<p><strong>订单列表</strong></p>

<p>文档地址：<a href="http://docs.developer.amazonservices.com/zh_CN/orders/2013-09-01/Orders_ListOrders.html">ListOrders</a></p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
</pre></td><td class="code"><pre><code class="php"><span class="line"><span class="nv">$client</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">MCS\MWSClient</span><span class="p">([</span>
</span><span class="line">    <span class="s1">&#39;Marketplace_Id&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;&#39;</span><span class="p">,</span>
</span><span class="line">    <span class="s1">&#39;Seller_Id&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;&#39;</span><span class="p">,</span>
</span><span class="line">    <span class="s1">&#39;Access_Key_ID&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;&#39;</span><span class="p">,</span>
</span><span class="line">    <span class="s1">&#39;Secret_Access_Key&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;&#39;</span><span class="p">,</span>
</span><span class="line">    <span class="s1">&#39;MWSAuthToken&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;&#39;</span> <span class="c1">// Optional. Only use this key if you are a third party user/developer</span>
</span><span class="line"><span class="p">]);</span>
</span><span class="line"><span class="nv">$fromDate</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">DateTime</span><span class="p">(</span><span class="s1">&#39;2016-01-01&#39;</span><span class="p">);</span>
</span><span class="line"><span class="nv">$states</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;Unshipped&#39;</span><span class="p">,</span><span class="s1">&#39;PartiallyShipped&#39;</span><span class="p">,</span><span class="s1">&#39;Shipped&#39;</span><span class="p">,</span><span class="s1">&#39;PendingAvailability&#39;</span><span class="p">,</span><span class="s1">&#39;Pending&#39;</span><span class="p">,</span><span class="s1">&#39;InvoiceUnconfirmed&#39;</span><span class="p">,</span><span class="s1">&#39;Canceled&#39;</span><span class="p">,</span><span class="s1">&#39;Unfulfillable&#39;</span><span class="p">];</span>
</span><span class="line"><span class="nv">$client</span><span class="o">-&gt;</span><span class="na">ListOrders</span><span class="p">(</span><span class="nv">$fromDate</span><span class="p">,</span> <span class="k">false</span><span class="p">,</span> <span class="nv">$states</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>SDK 的 <a href="https://github.com/meertensm/amazon-mws/blob/master/src/MWSClient.php#L383">ListOrders()</a> 默认的 <code>states</code> 只有两个状态。</p>

<p><strong>订单商品</strong></p>

<p>要想获取订单里的商品信息要调用 <a href="https://github.com/meertensm/amazon-mws/blob/master/src/MWSClient.php#L493">ListOrderItems()</a></p>

<p><strong>订单商品的属性和图片</strong></p>

<p>要想获取订单商品里的属性和图片信息得调用 <a href="https://github.com/meertensm/amazon-mws/blob/master/src/MWSClient.php#L553">GetMatchingProductForId()</a>，商品属性目前应该只有 <code>Size</code> 和 <code>Color</code>。</p>

<p>注意：如果接口返回 <code>Request is throttled</code>，那你就要考虑接口频率问题了，详情就得查看文档<a href="http://docs.developer.amazonservices.com/zh_CN/dev_guide/DG_Throttling.html">《限制：针对提交请求频率的限制》</a>了。</p>

<h3 id="section-3">发货</h3>

<p><strong>思路</strong></p>

<p>发货是一个异步接口，流程就是先创建一个类型为 <code>_POST_ORDER_FULFILLMENT_DATA_</code> 的 <code>SubmitFeed</code>，获取到一个 <code>FeedSubmissionId</code>，然后稍候通过另外一个接口传 <code>FeedSubmissionId</code> 查询发货结果。</p>

<p><strong>实践</strong></p>

<p>坑的是前面提到的 <a href="https://github.com/meertensm/amazon-mws">meertensm/amazon-mws</a> 库作者没有实现发货方法，提了 PR 作者也没时间管了，所以我自己实现了。</p>

<ul>
  <li>先创建一个 <code>core/replace/MWSClient.php</code> 文件:</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
<span class="line-number">40</span>
<span class="line-number">41</span>
<span class="line-number">42</span>
<span class="line-number">43</span>
<span class="line-number">44</span>
<span class="line-number">45</span>
<span class="line-number">46</span>
<span class="line-number">47</span>
<span class="line-number">48</span>
<span class="line-number">49</span>
<span class="line-number">50</span>
<span class="line-number">51</span>
<span class="line-number">52</span>
<span class="line-number">53</span>
<span class="line-number">54</span>
<span class="line-number">55</span>
<span class="line-number">56</span>
<span class="line-number">57</span>
<span class="line-number">58</span>
<span class="line-number">59</span>
<span class="line-number">60</span>
<span class="line-number">61</span>
<span class="line-number">62</span>
<span class="line-number">63</span>
<span class="line-number">64</span>
<span class="line-number">65</span>
</pre></td><td class="code"><pre><code class="php"><span class="line"><span class="o">&lt;?</span><span class="nx">php</span>
</span><span class="line"><span class="sd">/**</span>
</span><span class="line"><span class="sd"> * author     : forecho &lt;caizhenghai@gmail.com&gt;</span>
</span><span class="line"><span class="sd"> * createTime : 2019/6/11 9:53 PM</span>
</span><span class="line"><span class="sd"> * description:</span>
</span><span class="line"><span class="sd"> */</span>
</span><span class="line">
</span><span class="line"><span class="k">namespace</span> <span class="nx">app\core\helpers</span><span class="p">;</span>
</span><span class="line">
</span><span class="line"><span class="k">use</span> <span class="nx">Exception</span><span class="p">;</span>
</span><span class="line">
</span><span class="line"><span class="k">class</span> <span class="nc">MWSClient</span> <span class="k">extends</span> <span class="nx">\MCS\MWSClient</span>
</span><span class="line"><span class="p">{</span>
</span><span class="line">    <span class="sd">/**</span>
</span><span class="line"><span class="sd">     * Sets the shipping status of an order</span>
</span><span class="line"><span class="sd">     * @param array $data required data</span>
</span><span class="line"><span class="sd">     * @return array feed submission result</span>
</span><span class="line"><span class="sd">     * @throws Exception</span>
</span><span class="line"><span class="sd">     */</span>
</span><span class="line">    <span class="k">public</span> <span class="k">function</span> <span class="nf">setDeliveryState</span><span class="p">(</span><span class="k">array</span> <span class="nv">$data</span><span class="p">)</span>
</span><span class="line">    <span class="p">{</span>
</span><span class="line">        <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nb">isset</span><span class="p">(</span><span class="nv">$data</span><span class="p">[</span><span class="s2">&quot;shippingDate&quot;</span><span class="p">]))</span> <span class="p">{</span>
</span><span class="line">            <span class="nv">$data</span><span class="p">[</span><span class="s2">&quot;shippingDate&quot;</span><span class="p">]</span> <span class="o">=</span> <span class="nb">date</span><span class="p">(</span><span class="s2">&quot;c&quot;</span><span class="p">);</span>
</span><span class="line">        <span class="p">}</span>
</span><span class="line">
</span><span class="line">        <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nb">isset</span><span class="p">(</span><span class="nv">$data</span><span class="p">[</span><span class="s2">&quot;carrierCode&quot;</span><span class="p">])</span> <span class="o">&amp;&amp;</span> <span class="o">!</span><span class="nb">isset</span><span class="p">(</span><span class="nv">$data</span><span class="p">[</span><span class="s2">&quot;carrierName&quot;</span><span class="p">]))</span> <span class="p">{</span>
</span><span class="line">            <span class="k">throw</span> <span class="k">new</span> <span class="nx">Exception</span><span class="p">(</span><span class="s1">&#39;Missing required carrier data&#39;</span><span class="p">);</span>
</span><span class="line">        <span class="p">}</span>
</span><span class="line">
</span><span class="line">        <span class="nv">$feed</span> <span class="o">=</span> <span class="p">[</span>
</span><span class="line">            <span class="s1">&#39;MessageType&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;OrderFulfillment&#39;</span><span class="p">,</span>
</span><span class="line">            <span class="s1">&#39;Message&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
</span><span class="line">                <span class="s1">&#39;MessageID&#39;</span> <span class="o">=&gt;</span> <span class="nb">rand</span><span class="p">(),</span>
</span><span class="line">                <span class="s2">&quot;OrderFulfillment&quot;</span> <span class="o">=&gt;</span> <span class="p">[</span>
</span><span class="line">                    <span class="s2">&quot;AmazonOrderID&quot;</span> <span class="o">=&gt;</span> <span class="nv">$data</span><span class="p">[</span><span class="s2">&quot;orderId&quot;</span><span class="p">],</span>
</span><span class="line">                    <span class="s2">&quot;FulfillmentDate&quot;</span> <span class="o">=&gt;</span> <span class="nv">$data</span><span class="p">[</span><span class="s2">&quot;shippingDate&quot;</span><span class="p">]</span>
</span><span class="line">                <span class="p">]</span>
</span><span class="line">            <span class="p">]</span>
</span><span class="line">        <span class="p">];</span>
</span><span class="line">        <span class="nv">$fulfillmentData</span> <span class="o">=</span> <span class="p">[];</span>
</span><span class="line">
</span><span class="line">
</span><span class="line">        <span class="k">if</span> <span class="p">(</span><span class="nb">isset</span><span class="p">(</span><span class="nv">$data</span><span class="p">[</span><span class="s2">&quot;carrierCode&quot;</span><span class="p">]))</span> <span class="p">{</span>
</span><span class="line">            <span class="nv">$fulfillmentData</span><span class="p">[</span><span class="s2">&quot;CarrierCode&quot;</span><span class="p">]</span> <span class="o">=</span> <span class="nv">$data</span><span class="p">[</span><span class="s2">&quot;carrierCode&quot;</span><span class="p">];</span>
</span><span class="line">        <span class="p">}</span> <span class="k">elseif</span> <span class="p">(</span><span class="nb">isset</span><span class="p">(</span><span class="nv">$data</span><span class="p">[</span><span class="s2">&quot;carrierName&quot;</span><span class="p">]))</span> <span class="p">{</span>
</span><span class="line">            <span class="nv">$fulfillmentData</span><span class="p">[</span><span class="s2">&quot;CarrierName&quot;</span><span class="p">]</span> <span class="o">=</span> <span class="nv">$data</span><span class="p">[</span><span class="s2">&quot;carrierName&quot;</span><span class="p">];</span>
</span><span class="line">        <span class="p">}</span>
</span><span class="line">
</span><span class="line">        <span class="k">if</span> <span class="p">(</span><span class="nb">isset</span><span class="p">(</span><span class="nv">$data</span><span class="p">[</span><span class="s2">&quot;shippingMethod&quot;</span><span class="p">]))</span> <span class="p">{</span>
</span><span class="line">            <span class="nv">$fulfillmentData</span><span class="p">[</span><span class="s2">&quot;ShippingMethod&quot;</span><span class="p">]</span> <span class="o">=</span> <span class="nv">$data</span><span class="p">[</span><span class="s2">&quot;shippingMethod&quot;</span><span class="p">];</span>
</span><span class="line">        <span class="p">}</span>
</span><span class="line">
</span><span class="line">
</span><span class="line">        <span class="k">if</span> <span class="p">(</span><span class="nb">isset</span><span class="p">(</span><span class="nv">$data</span><span class="p">[</span><span class="s2">&quot;trackingCode&quot;</span><span class="p">]))</span> <span class="p">{</span>
</span><span class="line">            <span class="nv">$fulfillmentData</span><span class="p">[</span><span class="s2">&quot;ShipperTrackingNumber&quot;</span><span class="p">]</span> <span class="o">=</span> <span class="nv">$data</span><span class="p">[</span><span class="s2">&quot;trackingCode&quot;</span><span class="p">];</span>
</span><span class="line">        <span class="p">}</span>
</span><span class="line">
</span><span class="line">        <span class="k">if</span> <span class="p">(</span><span class="nb">sizeof</span><span class="p">(</span><span class="nv">$fulfillmentData</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">            <span class="nv">$feed</span><span class="p">[</span><span class="s2">&quot;Message&quot;</span><span class="p">][</span><span class="s2">&quot;OrderFulfillment&quot;</span><span class="p">][</span><span class="s2">&quot;FulfillmentData&quot;</span><span class="p">]</span> <span class="o">=</span> <span class="nv">$fulfillmentData</span><span class="p">;</span>
</span><span class="line">        <span class="p">}</span>
</span><span class="line">        <span class="nv">$feed</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">SubmitFeed</span><span class="p">(</span><span class="s1">&#39;_POST_ORDER_FULFILLMENT_DATA_&#39;</span><span class="p">,</span> <span class="nv">$feed</span><span class="p">);</span>
</span><span class="line">
</span><span class="line">        <span class="k">return</span> <span class="nv">$feed</span><span class="p">;</span>
</span><span class="line">    <span class="p">}</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>然后修改第一步调用 <code>MWSClient</code> 类的时候使用我们自己的类：</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
</pre></td><td class="code"><pre><code class="php"><span class="line"><span class="nv">$client</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">app\core\helpers\MWSClient</span><span class="p">([</span>
</span><span class="line">    <span class="s1">&#39;Marketplace_Id&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;&#39;</span><span class="p">,</span>
</span><span class="line">    <span class="s1">&#39;Seller_Id&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;&#39;</span><span class="p">,</span>
</span><span class="line">    <span class="s1">&#39;Access_Key_ID&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;&#39;</span><span class="p">,</span>
</span><span class="line">    <span class="s1">&#39;Secret_Access_Key&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;&#39;</span><span class="p">,</span>
</span><span class="line">    <span class="s1">&#39;MWSAuthToken&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;&#39;</span> <span class="c1">// Optional. Only use this key if you are a third party user/developer</span>
</span><span class="line"><span class="p">]);</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>这样之后我们就可以这样发货了：</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
</pre></td><td class="code"><pre><code class="php"><span class="line"><span class="nv">$client</span><span class="o">-&gt;</span><span class="na">setDeliveryState</span><span class="p">([</span>
</span><span class="line">    <span class="s2">&quot;orderId&quot;</span> <span class="o">=&gt;</span> <span class="mi">3456342</span><span class="p">,</span>
</span><span class="line">    <span class="s2">&quot;carrierCode&quot;</span> <span class="o">=&gt;</span> <span class="s2">&quot;UPS&quot;</span><span class="p">,</span>
</span><span class="line">    <span class="s2">&quot;trackingCode&quot;</span> <span class="o">=&gt;</span> <span class="s2">&quot;34JD943T6&quot;</span><span class="p">,</span>
</span><span class="line">    <span class="s2">&quot;shippingMethod&quot;</span> <span class="o">=&gt;</span> <span class="s2">&quot;1 Day&quot;</span><span class="p">,</span>
</span><span class="line"><span class="p">]);</span>
</span><span class="line">
</span><span class="line"><span class="nv">$client</span><span class="o">-&gt;</span><span class="na">setDeliveryState</span><span class="p">([</span>
</span><span class="line">    <span class="s2">&quot;orderId&quot;</span> <span class="o">=&gt;</span> <span class="mi">3456342</span><span class="p">,</span>
</span><span class="line">    <span class="s2">&quot;carrierName&quot;</span> <span class="o">=&gt;</span> <span class="s2">&quot;Mini transporters A.C.&quot;</span><span class="p">,</span>
</span><span class="line">    <span class="s2">&quot;trackingCode&quot;</span> <span class="o">=&gt;</span> <span class="s2">&quot;34JD943T6&quot;</span><span class="p">,</span>
</span><span class="line"><span class="p">]);</span>
</span><span class="line">
</span><span class="line"><span class="nv">$client</span><span class="o">-&gt;</span><span class="na">setDeliveryState</span><span class="p">([</span>
</span><span class="line">    <span class="s2">&quot;orderId&quot;</span> <span class="o">=&gt;</span> <span class="mi">3456342</span><span class="p">,</span>
</span><span class="line">    <span class="s2">&quot;carrierName&quot;</span> <span class="o">=&gt;</span> <span class="s2">&quot;Mini transporters A.C.&quot;</span><span class="p">,</span>
</span><span class="line">    <span class="s2">&quot;trackingCode&quot;</span> <span class="o">=&gt;</span> <span class="s2">&quot;34JD943T6&quot;</span><span class="p">,</span>
</span><span class="line">    <span class="s2">&quot;shippingDate&quot;</span> <span class="o">=&gt;</span> <span class="s2">&quot;2018-06-21T12:32:24+02:00&quot;</span>
</span><span class="line"><span class="p">]);</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>以上实践代码我是根据 <a href="https://github.com/meertensm/amazon-mws/issues/55">Update order - set delivery state #55</a> 这个 Issues 采坑而来的。</p>

<ul>
  <li>查询发货结果</li>
</ul>

<p>无论成功或者失败都可以通过 <a href="https://github.com/meertensm/amazon-mws/blob/master/src/MWSClient.php#L956">GetFeedSubmissionResult()</a> 方法获取结果。</p>

<p>PS: 可以分享一下我发货采坑的过程：</p>

<p>MWS 对应的接口都会有对应的参数 XMLSchema，是专门用来校验接口传过去的参数，我们可以找一个在线 XML 校验的网站，校验我们要传过去的值是否正确。异步接口调试非常的麻烦，而且亚马逊返回的错误信息又不足够详细。</p>

<ul>
  <li><a href="https://images-na.ssl-images-amazon.com/images/G/01/rainier/help/xsd/release_1_9/OrderFulfillment.xsd">OrderFulfillment 的 XMLSchema</a></li>
  <li><a href="https://www.liquid-technologies.com/online-xsd-validator">在线 XML 校验</a></li>
</ul>

<h2 id="section-4">总结</h2>

<p>发现国内使用 MWS 的文档和资料比较少，自己辛辛苦苦踩的坑，当然要分享出来，希望对你有用。</p>

<h2 id="section-5">相关文章</h2>

<ul>
  <li><a href="https://blog.forecho.com/mws-order.html">《MWS 开发 - 订单篇》</a></li>
  <li><a href="https://blog.forecho.com/mws-product.html">《MWS 开发 - 产品上传篇》</a></li>
</ul>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Bose QC30 vs AirPods]]></title>
    <link href="https://blog.forecho.com/bose-qc30-vs-airpods.html"/>
    <updated>2019-06-26T14:58:22+00:00</updated>
    <id>https://blog.forecho.com/bose-qc30-vs-airpods</id>
    <content type="html"><![CDATA[<h2 id="section">引言</h2>

<p><img src="https://blog-1251237404.cos.ap-guangzhou.myqcloud.com/20190703175829.png" alt="" /></p>

<p>618 在<a href="https://www.smzdm.com/">色魔张大妈</a>上看到之前一直项目的 Bose QC30 降噪耳机最低价了，虽然是在拼多多上，但还是心动了，成功说服了兔子之后就下单了。</p>

<p>这篇文章我就来谈谈自己在使用 AirPods 和  Bose QC30 的感受，希望对你有帮助。</p>

<!--more-->

<h2 id="section-1">对比</h2>

<h3 id="section-2">便携性</h3>

<p>AirPods 比较小，我一般都放口袋里面，携带非常方便。但是 QC30 是有一个『狗圈』的，你要么就带脖子上，要么就放包里面，而挂着脖子上如果不带上耳朵上的话，那个耳机线又有点长，甩来甩去的也挺烦的，如果是只是挂在脖子上没带上耳朵上跑步的话，甩的更明显。</p>

<p>所以 AirPods 便携性会很好多。</p>

<h3 id="section-3">续航能力</h3>

<p>AirPods 有盒子，相当于自带充电宝。QC30 有『狗圈』。两个设备的续航能力都能满足我的要求。</p>

<h3 id="section-4">使用体验</h3>

<p>AirPods 打破传统蓝牙耳机，耳机上没有开关和音量键，两边耳机上各有一个触控操作（需要轻点两下才触发），可以作为功能键，在 iPhone 上可以设置其有限的功能，比方说你可以设置点击右边耳机进行切换下一首歌，或者控制音量，再或者唤起 Siri。只要第一次配对手机成功，再次使用的时候，只要把 AirPods 从盒子拿出来就会自动连接<strong>最近使用的设备</strong>。不想使用了，就直接把耳机取下来放进盒子里就可以了。当你摘下一边耳机，会自动暂停音乐，再次带上被摘下的耳机，音乐会自动继续。整个过程体验可以说是非常的流畅，当初就是因为体验了一把 AirPods，立马就心动了。</p>

<p>QC30 自然是降噪能力（本文通指主动降噪），没用过降噪耳机，第一次体验的话，绝对会被惊艳到。降噪耳机虽然不能完全隔绝噪音，但是却能有效的帮助我们保护听力，这也是我这次买 QC30 最大的原因。QC30 还有一个额外的优点是最多同时连接两个设备，虽然只能有听到一个设备的声音，但是这功能对我来说非常有用，因为我经常会在笔记本和手机之间切换耳机，AirPods 就很麻烦，每次需要手动切换。</p>

<h3 id="section-5">吐槽</h3>

<p>AirPods 因为是白色容易脏，而且不好清理。😭</p>

<p>QC30 就是便携性不够。</p>

<h2 id="section-6">总结</h2>

<p>总的来说 AirPods 体验和便携性完爆 QC30，但是 QC30 能降噪啊，感觉现在耳朵听力大不如从前了，而且地铁上太吵，想听 Podcast 节目，不想开大声损伤耳朵，我只能选降噪耳机。</p>

<p>所以两个设备各有优点，期待以后得 AirPods 有降噪和连接多个设备的能力，那就完美了。</p>

<p>PS：最近太忙，这一篇不算长的文章我都写了快两个星期了，😭。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[年中总结]]></title>
    <link href="https://blog.forecho.com/2019-mid-year-summary.html"/>
    <updated>2019-06-17T14:58:22+00:00</updated>
    <id>https://blog.forecho.com/2019-mid-year-summary</id>
    <content type="html"><![CDATA[<h2 id="section">引言</h2>

<p>最近一阵子太忙了，今天终于有时间来更新博客了。今天要写的就是年中总结，回顾一下这半年来的目标，顺便说说近况。</p>

<h2 id="section-1">总结</h2>

<h3 id="section-2">健身</h3>

<p>除了端午节出了一趟门之外都有在坚持早上运动，基本上能保持每周运动至少 3 次，每次 30 分钟以上。运动频率有点高，一度导致早上没时间看书了。</p>

<p>自从 17 年年底买了个体脂称，都有计划一个星期称一次，一直到去年 10 月忙着结婚的事情就没称重了，之前的体重也一直保持在 61.5kg~63.5kg 之间，感觉没啥用处。后来再过 5 个月，也就是今年 3 月份再去称重的时候，发现自己不到 59kg 了，当时第一反应是体脂称不准了，还去找客服询问了解决办法。结果用了客服提供的办法之后还是那样，正当我对体脂称死心的时候，我去了家附近药店门口的体重秤称了一下，发现还真是 59kg 了，好吧，我错怪了体脂称，😭。</p>

<!--more-->

<p>一度想增肌的我，怎么就减肥了呢？我得反思一下自己的健身计划了。</p>

<ul>
  <li>每天工作太久，第二天肩膀痛，最近几个月都在做肩膀的运动。</li>
  <li>以前一直在练习小肌群，现在我得练大肌群了，就从背部开始。</li>
  <li>继续学习健身知识。</li>
  <li>还是得坚持每个星期称一次体脂。</li>
  <li>注意饮食。</li>
</ul>

<h3 id="section-3">旅游</h3>

<p>没时间做旅游计划，也游不起，端午节去了一趟广西，去兔子的老家。对我来是说第一次去，吃了一些那边的特产。除了过去交通很不方便外，其他都还好。</p>

<h3 id="section-4">工作</h3>

<p>目前工作上一直在处于写业务代码，最近几个月没有啥长进吧。</p>

<h3 id="section-5">业余折腾</h3>

<p>倒是今年年初的时候，接了一个兔子朋友的一个单子，一个外贸的 ERP 系统，我来写后端。真正开始也就从 5 月中旬到现在（一个月），我们第一阶段算是告一段落了。这个单子真是把我累死了，本来 965 的生活过的很滋润的，自从接了这个单子的一个月里，基本上是 9106 了，一个字累。</p>

<p>以后这种事情还是得三思，打破了很多原来的计划，看书和写作计划彻底被搁置了。目前在这个项目已经投入了 130 多个小时了，不知道是否值得。</p>

<p>计划是以后每周周六抽出一天时间来写这个单子的代码，要有计划，多休息。</p>

<h3 id="section-6">读书</h3>

<p>就读完一本书（《静观日本》），有几本都只读了一小半。</p>

<p>现在早上时间基本上都让给健身，自然是没时间阅读了，我得给阅读另外安排好时间，再准备重启《深度阅读》专栏计划。</p>

<h3 id="section-7">博客</h3>

<p>上个月只写了一篇文章，还差一篇文章没写，没兑现承诺。下半年得继续按计划执行。</p>

<h3 id="section-8">三立三</h3>

<ul>
  <li>上半年有找到一个小伙伴，一起开发一个 iOS App，但是后来我因为工作太忙，接口只给他写了一半。</li>
  <li>下半年计划增加『指定价提醒功能』</li>
</ul>

<h3 id="section-9">其他</h3>

<p>要说上半年的一个关键词，那就是『忙』，但是就算这么忙，我也把《权力的游戏》最终季给追完了。并且我还尝试了早上起来做饭，然后带午饭去公司吃。这事情我坚持了2个多月，只要你
挺过了第一周，然后你就会发现，其实这件事情也没有想象中的那么难。</p>

<p>自己带饭，不仅干净又好吃而且还省钱，唯一有点难的就是在买菜的时候不知道买啥。</p>

<h2 id="section-10">最后</h2>

<p>马上就是 618 了，再这个『节日』来临之际，反（tu）思（cao）一下自己前半年的生活状态，为了去年制定的目标在年终的时候不至于那么难堪。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Docker 使用定时任务]]></title>
    <link href="https://blog.forecho.com/docker-use-cron.html"/>
    <updated>2019-05-27T02:58:22+00:00</updated>
    <id>https://blog.forecho.com/docker-use-cron</id>
    <content type="html"><![CDATA[<h2 id="section">使用定时任务</h2>

<p>在宿主主机使用 <code>crontab -e</code> 添加如下示例命令就可以了，非常简单：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">*/15 * * * * docker exec laradock_workspace_1 php /var/www/erp/yii sync/order &gt;&gt; /tmp/out-docker.log 2&gt;&amp;1</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>说明：</p>

<ul>
  <li><code>*/15 * * * *</code> 代表 15 分钟执行一次</li>
  <li><code>&gt;&gt; /tmp/out-docker.log 2&gt;&amp;1</code> 代表把命令的输出结果输入到 <code>/tmp/out-docker.log</code> 文件中。</li>
</ul>

<p><strong>需要特别说明的是：</strong></p>

<p>以往我们进入一个 Docker 终端都带 <code>-it</code> 参数，如进入 <code>laradock_workspace_1</code> 容器的命令是 <code>docker exec -it laradock_workspace_1</code>，但是定时任务的时候不需要这个参数。</p>

<blockquote>
  <p>原因是加了 <code>-it</code> 就要开启了一个终端，而计划任务是无法进入任何终端的。</p>
</blockquote>

<!--more-->

<h2 id="section-1">解决定时任务无法工作</h2>

<p>定时任务如果没按照我们预期的工作，往往很难排查，但是我们可以通过以下几种方式来快速的定位问题：</p>

<h3 id="cron-">开启系统 cron 日志</h3>

<p>修改系统日志配置信息：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="sh"><span class="line">sudo vim /etc/rsyslog.d/50-default.conf
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>将 cron 前面的注释符去掉，完成之后的代码如下：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="sh"><span class="line">cron.*  /var/log/cron.log
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>重启 rsyslog</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="sh"><span class="line"><span class="c">#sudo /etc/init.d/rsyslog restart</span>
</span><span class="line">sudo service rsyslog restart
</span><span class="line">sudo service cron restart
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>然后通过查看 cron 日志文件确认定时任务是否执行：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="sh"><span class="line">sudo tail -n <span class="m">50</span> /var/log/cron.log
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="section-2">命令必须要有输出结果</h3>

<p>在我们写脚本的时候，无论成功或者失败都要养成写输出文字的习惯，这样我们就可以方便的使用 <code>&gt;&gt; /tmp/out-docker.log 2&gt;&amp;1</code> 的方式把输出结果输入一个日志文件中，我们通过查看这个日志文件进一步确认定时任务的结果。</p>

<h2 id="section-3">最后</h2>

<p>本篇文章主要分享了自己再使用 Docker ，在配置定时任务所踩过的坑，希望对你有用。</p>
]]></content>
  </entry>
  
</feed>
