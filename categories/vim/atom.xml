<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Vim | forecho 的独立博客]]></title>
  <link href="https://blog.forecho.com/categories/vim/atom.xml" rel="self"/>
  <link href="https://blog.forecho.com/"/>
  <updated>2020-01-11T03:56:41+00:00</updated>
  <id>https://blog.forecho.com/</id>
  <author>
    <name><![CDATA[forecho]]></name>
    <email><![CDATA[caizhenghai@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[重学 Vim]]></title>
    <link href="https://blog.forecho.com/re-study-vim.html"/>
    <updated>2019-10-08T14:48:22+00:00</updated>
    <id>https://blog.forecho.com/re-study-vim</id>
    <content type="html"><![CDATA[<ul id="markdown-toc">
  <li><a href="#section" id="markdown-toc-section">引言</a></li>
  <li><a href="#section-1" id="markdown-toc-section-1">模式</a>    <ul>
      <li><a href="#section-2" id="markdown-toc-section-2">普通模式</a></li>
      <li><a href="#section-3" id="markdown-toc-section-3">插入模式</a></li>
      <li><a href="#section-4" id="markdown-toc-section-4">可视模式</a></li>
      <li><a href="#section-5" id="markdown-toc-section-5">命令行模式</a></li>
    </ul>
  </li>
  <li><a href="#section-6" id="markdown-toc-section-6">移动光标</a></li>
  <li><a href="#section-7" id="markdown-toc-section-7">动作</a></li>
  <li><a href="#vim" id="markdown-toc-vim">配置 Vim</a></li>
  <li><a href="#section-8" id="markdown-toc-section-8">插件</a>    <ul>
      <li><a href="#vim-abolishhttpsgithubcomtpopevim-abolish" id="markdown-toc-vim-abolishhttpsgithubcomtpopevim-abolish">vim-abolish</a></li>
      <li><a href="#ybiansmartimhttpsgithubcomybiansmartim" id="markdown-toc-ybiansmartimhttpsgithubcomybiansmartim">ybian/smartim</a></li>
    </ul>
  </li>
  <li><a href="#section-9" id="markdown-toc-section-9">最后</a></li>
  <li><a href="#section-10" id="markdown-toc-section-10">参考链接</a></li>
</ul>

<h2 id="section">引言</h2>

<p>2013 年的时候我才开始接触 Vim，简单学了一下，也没用起来，后来只记得普通模式以及怎么进入插入模式，然后就是保存退出这几个命令了。</p>

<p>直到最近买了一个 HHKB 键盘以及发现使用 Vim 编码效率要高很多，所以我决定重拾 Vim，为了加强自己的记忆，于是我就整理了这篇文章。</p>

<!--more-->

<h2 id="section-1">模式</h2>

<p>这个是 Vim 区别普通编辑器的最大差别。Vim 有好几种模式，在不同的模式下可以干不同的事情。</p>

<h3 id="section-2">普通模式</h3>

<p>这个是 Vim 的默认模式，在这种模式下，你可以通过键盘移动光标，可以删除文字。</p>

<p><strong>方向键</strong></p>

<ul>
  <li><code>h</code>：左 ←</li>
  <li><code>j</code>：下 ↓</li>
  <li><code>k</code>：上 ↑</li>
  <li><code>l</code>：右 →</li>
</ul>

<p>这几个是最常用的方向键盘，怎么记呢？除了记住『<code>j</code> 长得有点像 ↓』之外就是勤加练习了。</p>

<p><strong>其他</strong></p>

<ul>
  <li><code>dd</code>：删除当前行</li>
  <li><code>d$</code> 或者 <code>D</code>：删除当前光标到行尾</li>
  <li><code>d0</code>：删除当前光标到行首</li>
  <li><code>yy</code>：剪切当前行</li>
  <li><code>p</code>：粘贴内容到下一行</li>
  <li><code>v$yjp</code>：选中光标到行尾内容，跳转下一行粘贴内容</li>
</ul>

<h3 id="section-3">插入模式</h3>

<p>专门用来插入文字的模式，你可以把其他编辑器的默认模式理解为 Vim 的插入模式。</p>

<p><strong>如何从普通模式进入插入模式?</strong></p>

<ul>
  <li><code>i</code>：在光标之前插入（insert 插入）</li>
  <li><code>a</code>：在光标之后插入（append 追加）</li>
  <li><code>I</code>：在光标行行首插入</li>
  <li><code>A</code>：在光标行行尾插入</li>
  <li><code>o</code>：在光标行下面插入新一行并且保持插入模式</li>
  <li><code>O</code>：在光标行上面插入新一行并且保持插入模式</li>
</ul>

<p>除了以上命令我们还可以使用 <code>c</code> 命令进入插入模式：</p>

<ul>
  <li><code>cc</code>：删除当前行内容，并且进入插入模式</li>
  <li><code>c$</code> 或者 <code>C</code>：删除当前光标到行尾，并且进入插入模式</li>
  <li><code>cw</code>：从光标处删除到单词结尾并且进入插入模式</li>
  <li><code>caw</code>：删除整个单词并且进入插入模式（即使你的光标在单词中间）</li>
</ul>

<p><strong>如何回到普通模式？</strong></p>

<p>按 <code>Esc</code> 键最方便。</p>

<h3 id="section-4">可视模式</h3>

<p>可以理解为选中模式，通过一些命令选中字符、行、块，再针对选中区域做操作。</p>

<p><strong>普通模式和可视模式可以这样互相切换</strong></p>

<ul>
  <li><code>v</code>：切换面向字符的可视模式</li>
  <li><code>V</code>：切换面向行的可视模式</li>
  <li><code>Control</code> + <code>v</code>：切换面向块的可视模式（当你需要对几行字符做相同操作的时候，这种模式非常有用）</li>
</ul>

<p><strong>相关命令</strong></p>

<ul>
  <li><code>gv</code>：进入上次可视模式状态</li>
  <li><code>o</code>：切换选中区域的活动端（试一下 <code>vwwoe</code> 自己感受一下）</li>
</ul>

<p><strong>实际场景示例</strong></p>

<ul>
  <li><code>vi'c</code>：从当前光标位置删除 <code>'</code> 之前的内容，并且进入插入模式</li>
  <li><code>vi}</code>：选中 <code>{}</code> 之间的内容，同理 <code>}</code> 可以换成 <code>'</code>、<code>"</code>、<code>]</code> 等（i 可以立即为 inside）</li>
  <li><code>va}</code>：选中 <code>{}</code> 以及其之间的内容，同理 <code>}</code> 可以换成 <code>'</code>、<code>"</code>、<code>]</code> 等（a 可以理解为 around）</li>
  <li><code>vit</code>：选中两个标签之间的内容</li>
  <li><code>viw</code>：选中当前字符</li>
  <li><code>viW</code>：选中当前字串（字串含义见后面内容）</li>
</ul>

<p>更多可以参考下图，来源<a href="http://yyq123.blogspot.com/2016/12/vim-text-objects.html">《VIM学习笔记 文本对象（Text Objects）》</a></p>

<p><img src="https://blog-1251237404.cos.ap-guangzhou.myqcloud.com/20191011095932.png" alt="" /></p>

<h3 id="section-5">命令行模式</h3>

<p>进入命令行模式之后我们可以执行一些命令对文本进行操作。</p>

<p><strong>进入命令行模式</strong></p>

<ul>
  <li><code>:</code>：进入命令行模式</li>
  <li><code>/</code>：向下进行搜索，按 <code>n</code> 跳转到下一个，按 <code>N</code> 跳转到上一个</li>
  <li><code>?</code>：向上进行搜索，按 <code>n</code> 跳转到下一个，按 <code>N</code> 跳转到上一个</li>
</ul>

<p><strong>一些常用的命令</strong></p>

<ul>
  <li><code>:x</code>：保存并且退出</li>
  <li><code>:wq</code>：保存并且退出</li>
  <li><code>:w</code>：保存</li>
  <li><code>:q</code>：退出</li>
  <li><code>:0</code>：跳转到文件头，0 代表行号</li>
  <li><code>:t</code>：复制，把一行或者多行复制到指定位置</li>
  <li><code>:m</code>：移动，在用法上和复制类似</li>
</ul>

<p><strong>一些示例</strong></p>

<ul>
  <li><code>:2,3t.</code>：把第2 和 3 行的内容复制到当前光标行下方</li>
  <li><code>:2,.t5</code>：把第2 行到当前光标行复制到第 5 行下方</li>
  <li><code>:2m.</code>：把第2 行移动到当前行下方</li>
  <li><code>:t5</code>：把当前行复制到第5 行下方</li>
  <li><code>:t$</code>：把当前行复制到最后一行</li>
  <li><code>:t.</code>：把当前行复制到下一行，同 <code>yyp</code></li>
  <li><code>:%s/echocai/forecho</code>：把当前文件每行第一个 <code>echocai</code> 替换为 <code>forecho</code></li>
  <li><code>:%s/echocai/forecho/g</code>：把当前文件的所有 <code>echocai</code> 替换为 <code>forecho</code></li>
  <li><code>:'&lt;,'&gt;s/field/echo</code>：把当前高亮区域中所有的 <code>field</code> 替换为 <code>echo</code> （高亮区域可以事先通过 <code>Vjjj</code> 选中，再输入 <code>:</code> 的时候，会自动输入 <code>'&lt;,'&gt;</code>）</li>
  <li><code>:![cmd]</code>：运行 shell 命令（示例：<code>:!pwd</code>、<code>:!ls</code>）</li>
</ul>

<h2 id="section-6">移动光标</h2>

<p>这个是非常常用的功能，在普通模式下我们除了使用 <code>h</code>、<code>j</code>、<code>k</code>、<code>l</code> 移动外，我们还可以：</p>

<ul>
  <li><code>Control</code> + <code>d</code>：向下滚动半屏幕</li>
  <li><code>Control</code> + <code>u</code>：向上滚动半屏幕</li>
  <li><code>gg</code>：跳转到文件头部</li>
  <li><code>12gg</code>：跳转到第 12 行</li>
  <li><code>G</code>：跳转到文件末尾</li>
  <li><code>f{char}</code>：行内搜索，跳转到下一个{char}所在的位置上（示例：<code>fx</code> 跳转到下一个x 所在的位置）</li>
  <li><code>F{char}</code>：行内搜索，跳转到上一个{char}所在的位置上。（示例：<code>Fx</code> 跳转到上一个x 所在的位置）</li>
  <li><code>t{char}</code>：行内搜索，跳转到下一个{char}的前一个位置上。（示例：光标在行首的时候，在有 ActiveForm 的行内使用 <code>tc</code> 跳转到 A 所在的位置）</li>
  <li><code>T{char}</code>：行内搜索，跳转到上一个{char}的前一个位置上。</li>
  <li><code>w</code>：跳转到下一个单词的第一个单词上</li>
  <li><code>b</code>：跳转到上一个单词的第一个单词上</li>
  <li><code>e</code>：跳转到下一个单词的最后一个单词上</li>
  <li><code>ge</code>：跳转到上一个单词的最后一个单词上</li>
  <li><code>zz</code>：让光标处于屏幕正中间，不会移动光标。</li>
</ul>

<p>上面的 <code>w</code>、<code>b</code>、<code>e</code> 都有对应的大写 <code>W</code>、<code>B</code>、<code>E</code>，区别就是大写范围更大。小写范围是单词（word），大写范围是字串（WORD），区别：</p>

<ul>
  <li>单词（word）：由数字、字母、下划线或者其他非空白字符串组成</li>
  <li>字串（WORD）：以空白字符串分割</li>
</ul>

<p>另外在使用 <code>f</code>、<code>F</code>、<code>t</code>、<code>T</code> 命令的时候，要注意：</p>

<ul>
  <li>尽量找低频字母</li>
  <li><code>;</code>：重复上一次行内搜索，可以理解为跳转到下一个目标位置</li>
  <li><code>,</code>：撤回上一次行内搜索，可以理解为跳转到上一个目标位置</li>
</ul>

<h2 id="section-7">动作</h2>

<p>动作是指再普通模式下执行的一些行为，需要跟其他指令一起使用。最常用的有这些：</p>

<ul>
  <li><code>d</code>：删除</li>
  <li><code>c</code>：删除并且进入插入模式</li>
  <li><code>r</code>：替换，在普通模式下替换一个字符，比方说把光标移动 t 上，按下 <code>rT</code> 会直接把 t 替换为 T 并且还处于普通模式下</li>
  <li><code>R</code>: 进入替换模式，会替换光标所在的文字，直到按 <code>Esc</code> 为止</li>
  <li><code>x</code>：普通模式下删除一个字符，保持普通模式</li>
  <li><code>u</code>：撤销操作</li>
  <li><code>Control</code> + <code>r</code>：重做</li>
</ul>

<p>以上这些动作都可以用数字或者其他指令组合，一些示例：</p>

<ul>
  <li><code>daw</code>：即使你处于单词中间，你也可以通过这个命令把整个单词删除。</li>
  <li><code>4dd</code>：<code>dd</code> 是删除一行，<code>4dd</code> 是删除 4 行</li>
</ul>

<h2 id="vim">配置 Vim</h2>

<h2 id="section-8">插件</h2>

<p>安装插件有几种方式，我是使用的是 <a href="https://github.com/tpope/vim-pathogen">pathogen.vim</a> 的方式，方法：</p>

<p><code>
mkdir -p ~/.vim/autoload ~/.vim/bundle &amp;&amp; \
curl -LSso ~/.vim/autoload/pathogen.vim https://tpo.pe/pathogen.vim
vim ~/.vimrc
</code></p>

<p>然后插入：</p>

<p><code>
execute pathogen#infect()
syntax on
filetype plugin indent on
</code></p>

<p>下面推荐几个插件</p>

<h3 id="vim-abolishhttpsgithubcomtpopevim-abolish"><a href="https://github.com/tpope/vim-abolish">vim-abolish</a></h3>

<p>转换单词，示例：</p>

<ul>
  <li><code>crm</code>：把下划线风格转换成大驼峰风格（<code>foo_bar</code> 转换为 <code>FooBar</code>）</li>
  <li><code>crc</code>：把下划线风格转换成小驼峰风格（<code>foo_bar</code> 转换为 <code>fooBar</code>）</li>
  <li><code>crs</code>：把小驼峰风格转换成下划线风格（<code>fooBar</code> 转换为 <code>foo_bar</code>）</li>
  <li><code>cru</code>：转化为下划线分割全大写风格</li>
  <li><code>cr-</code>：转化为小写中划线分割风格</li>
  <li><code>cr.</code>：转化为小写点分割风格</li>
  <li><code>cr.</code>：转化为小写点分割风格</li>
  <li><code>cr.</code>：转化为小写点分割风格</li>
  <li>其他功能看文档吧</li>
</ul>

<p>安装</p>

<p><code>
cd ~/.vim/bundle
git clone git://github.com/tpope/vim-abolish.git
</code></p>

<h3 id="ybiansmartimhttpsgithubcomybiansmartim"><a href="https://github.com/ybian/smartim">ybian/smartim</a></h3>

<p>自动切换输入法，保证回到普通模式的时候是英文输入法。</p>

<p>安装</p>

<p><code>
cd ~/.vim/bundle
git clone git@github.com:ybian/smartim.git
im-select
</code></p>

<p>如果不是 <code>com.apple.keylayout.US</code> 就要修改设置：</p>

<p><code>
vim ~/.vimrc
</code></p>

<p>添加这行</p>

<p><code>
let g:smartim_default = 'com.apple.keylayout.ABC'
</code></p>

<h2 id="section-9">最后</h2>

<p>Vim 要了解 Vim 的哲学，学 Vim 带来的收益我认为是<a href="https://zh.wikipedia.org/wiki/%E6%8C%87%E6%95%B8%E5%A2%9E%E9%95%B7">指数增长</a>的，但是绝对是值得的，虽然现在很少有人直接在终端用 Vim 写代码，但是几乎所有的编辑器都可以开启 Vim 模式了。</p>

<p>《Vim 实用技巧 第二版》这本书我还没看完，所以本篇文章会持续更新。</p>

<h2 id="section-10">参考链接</h2>

<ul>
  <li><a href="http://einverne.github.io/post/2015/05/vim-mode.html">Vim 多模式介绍</a></li>
  <li><a href="https://github.com/wsdjeg/vim-galore-zh_cn/blob/master/README.md">Vim 从入门到精通</a></li>
  <li><a href="http://yyq123.github.io/learn-vim/learn-vi-00-List.html">VIM学习笔记</a></li>
</ul>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用 HHKB]]></title>
    <link href="https://blog.forecho.com/use-hhkb.html"/>
    <updated>2019-09-11T13:48:22+00:00</updated>
    <id>https://blog.forecho.com/use-hhkb</id>
    <content type="html"><![CDATA[<ul id="markdown-toc">
  <li><a href="#section" id="markdown-toc-section">引言</a>    <ul>
      <li><a href="#hhkb-" id="markdown-toc-hhkb-">HHKB 的键盘模式</a></li>
      <li><a href="#section-1" id="markdown-toc-section-1">使用感受</a></li>
    </ul>
  </li>
  <li><a href="#section-2" id="markdown-toc-section-2">切换中英文输入法利器</a></li>
  <li><a href="#cvim-" id="markdown-toc-cvim-">cVim 常用命令</a>    <ul>
      <li><a href="#section-3" id="markdown-toc-section-3">移动相关</a></li>
      <li><a href="#section-4" id="markdown-toc-section-4">链接相关</a></li>
      <li><a href="#section-5" id="markdown-toc-section-5">标签栏</a></li>
      <li><a href="#section-6" id="markdown-toc-section-6">其他</a></li>
    </ul>
  </li>
  <li><a href="#control-" id="markdown-toc-control-">跟 Control 相关的一些快捷键</a></li>
  <li><a href="#section-7" id="markdown-toc-section-7">最后</a></li>
</ul>

<h2 id="section">引言</h2>

<p>最近干了两件事情，让我的工作效率立马变得很慢了:</p>

<ul>
  <li>一是换了一把键盘，买了 HHKB Pro2。之前一直在用酷冷至尊的烈焰枪87茶轴键盘，换成 HHKB 之后键位好不习惯，感觉要重新练习打字了。😢</li>
  <li>二是把所有编辑器都安装了 vim 插件，开启了 vim 模式，甚至上 Chrome 浏览器都安装了 <a href="https://github.com/1995eaton/chromium-vim">cVim</a> 扩展，强迫自己学习 Vim。</li>
</ul>

<p>这篇文章主要是记录自己习惯 HHKB 的历程，希望对大家有用。之后再写篇文章记录重拾 Vim 的经验。 本片文章适用于 Mac 用户。</p>

<!--more-->

<h3 id="hhkb-">HHKB 的键盘模式</h3>

<p>HHKB 有 6 个 PID 开关可以切换模式，如果你是 Mac 用户只需要把 2，3 拨到 on 那边就可以了。</p>

<p>顺便说一下 HHKB 的 USB 插卡不能用来充电，可以用来插蓝牙鼠标的 USB 接收器。</p>

<h3 id="section-1">使用感受</h3>

<p>键盘比机械键盘要轻，因为没有机械键盘的钢板了，声音也比我之前用的茶轴小，手感还可以。</p>

<p>再说说不习惯的地方：</p>

<ul>
  <li>方向键是组合键，需要按 Fn 键 + 对应的按键。方向键可是我之前的重度按键，这点非常不习惯。</li>
  <li>` 键从左边换到右边去了，非常容易按错。</li>
  <li><code>caps lock</code> 键位换成 <code>control</code> 键了，这个要多练习才习惯。</li>
</ul>

<h2 id="section-2">切换中英文输入法利器</h2>

<p>Mac 切换输入法是一个让人头疼的事情，想实现『只用搜狗输入法，通过 <code>Shift</code> 切换中英文』的功能是一个非常麻烦的事情，默认的 ABC 输入法想删点也是非常麻烦的事情，有时候切换输入法都要反复按几次快捷键才能得到想要的。真羡慕纯字母语言国家的人，不用切换输入法。</p>

<p>以上让人头疼的问题，今天终于被我解决了，下载安装 <a href="https://github.com/utatti/kawa">utatti/kawa</a>，可以给指定的输入法设置指定的快捷键，非常的便捷，我终于可以放心的安装多个输入法了。</p>

<h2 id="cvim-">cVim 常用命令</h2>

<h3 id="section-3">移动相关</h3>

<ul>
  <li><code>d</code>: 向下滚动半页</li>
  <li><code>e</code>，<code>u</code>: 向上滚动半页</li>
  <li><code>G</code>: 滚到最底</li>
  <li><code>gg</code>: 滚到最顶</li>
  <li><code>j</code>，<code>s</code>: 向下滚动</li>
  <li><code>k</code>，<code>w</code>: 向上滚动</li>
  <li><code>gi</code>: 转到第一个输入框</li>
</ul>

<h3 id="section-4">链接相关</h3>

<ul>
  <li><code>f</code>: 激活所有的超链接，然后输入相应的字母就会打开这个链接（相当于点击超链接）</li>
  <li><code>F</code>: 激活所有的超链接，然后输入相应的字母就会在新窗口打开这个链接（相当于使用鼠标滚轴点击超链接）</li>
</ul>

<h3 id="section-5">标签栏</h3>

<ul>
  <li><code>gt</code>，<code>K</code>，<code>R</code>：转到下一个选项卡</li>
  <li><code>gT</code>，<code>J</code>，<code>E</code>：转到上一个选项卡</li>
  <li><code>g0</code>: 跳到第一个选项卡</li>
  <li><code>g$</code>: 跳到最后一个选项卡</li>
  <li><code>x</code>: 关闭当前选项卡</li>
  <li><code>X</code>: 打开刚关闭的选项卡</li>
  <li><code>H</code>, <code>S</code>: 退回</li>
  <li><code>L</code>, <code>D</code>: 前进</li>
  <li><code>&gt;</code>, <code>&lt;</code> : 前后移动标签位置</li>
</ul>

<h3 id="section-6">其他</h3>

<ul>
  <li><code>r</code>: 刷新</li>
  <li><code>gR</code>: 刷新 + 清空本地缓存</li>
  <li><code>a</code>: 新窗口打开 Google 搜索的结果</li>
  <li><code>/</code>: 搜索当前页面，相当于 <code>command</code> + <code>f</code>，然后按 <code>N</code> 跳转到下一个结果，按 <code>n</code> 跳转到上一个结果</li>
  <li><code>I</code>: 搜索历史记录</li>
  <li><code>b</code>: 搜索书签</li>
  <li><code>P</code>: 新窗口打开粘贴板搜索结果</li>
</ul>

<h2 id="control-">跟 Control 相关的一些快捷键</h2>

<ul>
  <li><code>Control + p</code> shell中上一个命令,或者 文本中移动到上一行</li>
  <li><code>Control + n</code> shell中下一个命令,或者 文本中移动到下一行</li>
  <li><code>Control + r</code> 往后搜索历史命令</li>
  <li><code>Control + s</code> 往前搜索历史命令</li>
  <li><code>Control + f</code> 光标前移</li>
  <li><code>Control + b</code> 光标后退</li>
  <li><code>Control + a</code> 到行首</li>
  <li><code>Control + e</code> 到行尾</li>
  <li><code>Control + d</code> 删除一个字符,删除一个字符，相当于通常的 Delete 键</li>
  <li><code>Control + h</code> 退格删除一个字符,相当于通常的 Backspace 键</li>
  <li><code>Control + u</code> 删除到行首</li>
  <li><code>Control + k</code> 删除到行尾</li>
  <li><code>Control + l</code> 类似 clear 命令效果</li>
  <li><code>Control + y</code> 粘贴</li>
</ul>

<h2 id="section-7">最后</h2>

<p>使用 HHKB 的第一个星期可以说是非常的痛苦😖，特别是方向键的使用上，一度让我有放弃的念头天。</p>

<p>一个星期之后有所改善，而且我发现我用方向键的频率也没以前那么高了。现在就开始苦练 Vim 和疯狂记快捷键中。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Vim编辑器使用（一）]]></title>
    <link href="https://blog.forecho.com/Vim-bian-ji-qi-shi-yong-yi.html"/>
    <updated>2013-07-09T10:39:00+00:00</updated>
    <id>https://blog.forecho.com/Vim-bian-ji-qi-shi-yong-yi</id>
    <content type="html"><![CDATA[<p><img src="https://blog-1251237404.cos.ap-guangzhou.myqcloud.com/20191009111312.png" alt="" /></p>

<p>默认是一般模式</p>

<p>按 <code>i</code>、<code>I</code>、<code>o</code>、<code>O</code>、<code>a</code>、<code>A</code>、<code>r</code>、<code>R</code> 进入编辑模式</p>

<p>按<code>:</code>、<code>/</code>、<code>?</code>进入命令行模式</p>

<!--more-->

<p><strong>补充解释：</strong></p>

<p><code>i</code>、<code>I</code> 进入插入模式(Insert mode)：<br />
<code>i</code>为『从目前鼠标所在处插入』， <code>I</code>为『在目前所在行的第一个非空白字元处开始插入』。( 常用 )</p>

<p><code>a</code>、<code>A</code> 进入插入模式(Insert mode)：<br />
<code>a</code> 为『从目前鼠标所在的下一个字元处开始插入』， <code>A</code> 为『从鼠标所在行的最后一个字元处开始插入』。( 常用 )</p>

<p><code>o</code>、<code>O</code> 进入插入模式(Insert mode)：<br />
这是英文字母 <code>o</code> 的大小写。<code>o</code> 为『在目前鼠标所在的下一行处插入新的一行』； <code>O</code> 为在目前鼠所在处的上一行插入新的一行！( 常用 )</p>

<p><code>r</code>、<code>R</code> 进入取代模式(Replace mode)：<br />
<code>r</code> 只会取代鼠标所在的那一个字元一次；<code>R</code> 会一直取代鼠标所在的文字，直到按下 <code>ESC</code> 为止；( 常用 )</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Vim编辑器使用（二）——一般模式]]></title>
    <link href="https://blog.forecho.com/Vim-bian-ji-qi-shi-yong-er-yi-ban-mo-shi.html"/>
    <updated>2013-07-09T10:39:00+00:00</updated>
    <id>https://blog.forecho.com/Vim-bian-ji-qi-shi-yong-er-yi-ban-mo-shi</id>
    <content type="html"><![CDATA[<p><strong>一般模式：移动光标的方法（#表示常用）</strong></p>

<ul>
  <li><code>h</code> -&gt; 光标向左移动一个字符#</li>
  <li><code>j</code> -&gt; 光标向下移动一个字符#</li>
  <li><code>k</code> -&gt; 光标向上移动一个字符#</li>
  <li><code>l</code> -&gt; 光标向右移动一个字符#</li>
  <li><code>n</code> -&gt; n表示数字，如果想进行多次移动的话还可以加上数字，例如10j。</li>
  <li><code>[Ctrl]+[f]</code> -&gt; 屏幕向下移动一页，相当于[Page Down]按键#</li>
  <li><code>[Ctrl]+[b]</code> -&gt; 屏幕向上移动一页，相当于[Page Up]按键#</li>
</ul>

<!--more-->
<p> </p>

<ul>
  <li><code>\+</code> -&gt; 光标移动到非空格的下一行</li>
  <li><code>\-</code> -&gt; 光标移动到非空格的上一行</li>
  <li><code>n</code> -&gt; n表示数字，光标向右移动到该行的n个字符</li>
  <li><code>0</code> -&gt; 光标移动到这一行最前面的字符处#</li>
  <li><code>$</code> -&gt; 光标移动到这一行最后面的字符处#</li>
  <li><code>H</code> -&gt; 光标移动到屏幕的最上方那一行</li>
  <li><code>M</code> -&gt; 光标移动到屏幕的中央那一行</li>
  <li><code>L</code> -&gt; 光标移动到屏幕的最下方那一行</li>
  <li><code>G</code> -&gt; 光标移动到文件的最后一行#</li>
  <li><code>nG</code> -&gt; n表示数字，移动到这个文件的n行#</li>
  <li><code>gg</code> -&gt; 光标移动到文件的第一行#</li>
  <li><code>n</code> -&gt; n表示数字，光标向下n行#</li>
</ul>

<p><strong>一般模式：搜索与替换（#表示常用）</strong></p>

<ul>
  <li><code>/word</code> -&gt; 从光标位置开始，向下寻找一个名为 word的字符</li>
  <li><code>?word</code> -&gt; 从光标位置开始，向上寻找一个名为 word的字符</li>
  <li><code>n</code> -&gt; n表示数字，表示重复前一个搜索动作</li>
  <li><code>N</code> -&gt; N表示数字，表示反向重复前一个搜索动作</li>
  <li><code>:%s/word1/word2/g</code> -&gt; 将文件中的word1字符串，并将该字符串替换成word2 #</li>
  <li><code>:%s/word1/word2/gc</code> -&gt; 将文件中的word1字符串，并将该字符串替换成word2，在替换前会显示提示符给用户确认 #</li>
</ul>

<p><strong>一般模式：删除，复制与粘贴（#表示常用）</strong></p>

<ul>
  <li><code>x、X</code> -&gt; 在一行中，x向后删除字符，X向前删除字符#</li>
  <li><code>nx</code> -&gt; n表示数字，连续向后删除n个字符</li>
  <li><code>dd</code> -&gt; 删除光标所在的一整行#</li>
  <li><code>ndd</code> -&gt; n表示数字，从光标位置开始，删除向下的n行#</li>
  <li><code>d1G</code> -&gt; 删除光标所在位置到第一行所有的数据#</li>
  <li><code>dG</code> -&gt; 删除光标所在位置到最后一行所有的数据#</li>
  <li><code>d$</code> -&gt; 删除光标所在位置到改行的最后一个字符</li>
  <li><code>d0</code> -&gt; 删除光标所在位置到改行的最前一个字符</li>
  <li><code>yy</code> -&gt; 复制光标所在的一整行#</li>
  <li><code>nyy</code> -&gt; n表示数字，复制光标所在的向下n行#</li>
  <li><code>y1G</code> -&gt; 复制光标所在位置到第一行所有的数据#</li>
  <li><code>yG</code> -&gt; 复制光标所在位置到第一行所有的数据#</li>
  <li><code>y0</code> -&gt; 复制光标所在的那个字符到该行行首的所有数据</li>
  <li><code>y$</code> -&gt; 复制光标所在的那个字符到该行行尾的所有数据</li>
  <li><code>p、P</code> -&gt; p将已复制的数据粘贴到光标下一行，P相反#</li>
  <li><code>J</code> -&gt; 将光标所在的行与下一行结合在一起#</li>
  <li><code>c</code> -&gt; 重复删除多个数据</li>
  <li><code>u</code> -&gt; 复原前一个操作，撤销#</li>
  <li><code>[Ctrl]+[r]</code> -&gt; 重复上一个操作，恢复#</li>
  <li><code>.</code> -&gt; 重复前一个动作#</li>
</ul>
]]></content>
  </entry>
  
</feed>
